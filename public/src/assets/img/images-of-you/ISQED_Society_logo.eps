%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: MacOS Roman
%%Title: ISQED Society logo 20100225.eps
%%Creator: Adobe Illustrator(R) 13.0
%%For: Dave Barnes
%%CreationDate: 2/26/10
%%BoundingBox: 0 0 566 569
%%HiResBoundingBox: 0 0 565.9214 568.7769
%%CropBox: 0 0 565.9214 568.7769
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 13.0.2%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 13.0.2 x434 R agm 4.4379 ct 5.1039%ADO_ContainsXMP: MainFirst%AI7_Thumbnail: 128 128 8%%BeginData: 10956 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF%0066000066330066660066990066CC0066FF009900009933009966009999%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333%3333663333993333CC3333FF3366003366333366663366993366CC3366FF%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033%6600666600996600CC6600FF6633006633336633666633996633CC6633FF%6666006666336666666666996666CC6666FF669900669933669966669999%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF%9933009933339933669933999933CC9933FF996600996633996666996699%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100%000011111111220000002200000022222222440000004400000044444444%550000005500000055555555770000007700000077777777880000008800%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF%524C45FD93FFA97EAFA9FD7DFFAFA98585FD76FFA8AFA9AF84A9A8FFA8AF%A8AFA9FD71FFAFA9FFFFFF85AFAFAF84FFA9A97EAFFD70FFAF60FFA8FF84%85FFFFFFAF7EFFFF85A8FD70FF8585A9FFA9AF85FD04FF8584FFA985A8FD%6CFFA8A984855AFFFFAFA88584FFCFFF5AA9A8FF5AA95AFD6AFFA985A9FF%FF8585AFA9FFA9855B855B85A9FFFF85A9FF85FD68FFAF6184FFFFFF5A5B%A9FF84FFA9A984AFA9FFA8FF7F85A8A9FD69FFA985FFAF85FF858585FFFF%AFFFFFA9FFA9FFA961FFA97EFD6AFF5B5B7EFFFFFF5A5BA8A9A8FF85FFA8%FF84855AFFFF85A8FD65FFA9FFFFFF8537FFFFFFA9A9A96137A9A9AFFFA9%A95B5BFF85FF7E85FD65FF5AA9A85BA98536FFA95BFFFFA9615A5B5B5B36%5B8585FFFF5A85A8FD66FF5B5BA9FFFF855B85FFFFFF85A9FF8585FF85A9%FF85AFFF8585FD66FFA8375AFD04FF3730A9FFFF5AFFFF8584FF8485FFFF%7E855AA9A8AFFD62FFAFFF5B855BA9FFFF857FAF37855BA9FFFF85AFFFFF%85FFFF5B5BFFA9A9FD63FF7E5B5AFFA937A8A936FFFFFF7F373085A87FA8%FFA95B5A5B36A9FFA95AFD63FFA930FFFFFFA95B30FD04FFAF5BAF5A5B37%5B305B3785A9A985FF8485FD61FFAFFF5A5B84FFFFFF5A315AFFFFFF30A9%FFFFA85BA9FFA95BFFFFA885A85B7EFD62FF8485FF8585FF855BA98536A9%8585FFFFFFA95BFFFFFF5BFFFFFF5B85A9AFFD62FF855AFFFF5B7E5B85FF%FFAF5A315AFFFFFF5A85FFFFFF5BA9A95A5BFFA9A9FD62FFA95BA9FFFF5B%30FD05FF3785365B7F5B5AA98585305B5BA97EFFA9FD64FF84A9A8FF305B%5AAFFFFF3685FFFFA885305B5A855A5BA8FFA87F7EFD66FFA9AF5A5BFFAF%5A85845BFD04FF857FFFFFFFA97FFFFF855AFD67FFA9A85B5AFFFFFF8531%30A9A9FFFF5B85FFFFFF5A85A8855AA9FD68FFA930A984FFFFFF36A95A5B%5A853085A9A97E5B7EA98485FD1CFFCAFD4DFF8584FF7EA93085FFFFAFFF%305B7E85845A5AFFA8A9FD18FFA19B7070FD05699B9BCBFD0EFFA8A19BA1%9BA19BA19BA19BA19BA19BA19BA19B9BA8FD05FFA8CA9B9B709B7094709A%709A76A1A1FD11FFAF85FF7E3785AFA9FFA95BFD04FF5AFFA9AFFD16FFCB%A1698D6969698D6969698D6969699BCBFD0CFFCA68FD1269CAFD04FFCA94%FD07698DFD07699BA1FD10FF845A5AFFA8A97E5B5AA9A8855A7E84FD17FF%9B6A68FD0D69686AA2FD0BFF9BFD1369CAFD04FFA268FD0F69686969A2FD%10FFA984AFA95B5AFFA9A97EA9FD18FF9469698E6969698E6969698E6969%698EFD0469A1FD0AFF9B6969698E6969698E6969698E6969698E696970FD%05FF9B69698E6969698E6969698E6969698EFD05699BFD11FFA8FFA9FFA8%FFA9FD18FFCAFD1669A2FD09FFFD1269689BFD05FF9BFD14696870A8FD2E%FF6969698D698E698D698D699470946969698E698D698E6994FD08FFCA94%698D698EFD0E69A1FD05FF7069698E698D6994699469946969698E698D69%8E698D699BFD2DFF70FD086994A1FFFFFFA8CA70FD0769689BFD07FFCAFD%0769A19BA19BA19BA19BA19BA19BCBFD04FFA8FD0769A2FFCBFFA8CA9B94%68FD076968A1FD2BFF9BFD04698E696969C4FD08FF9B69698EFD0569FD07%FFA169698E6969699BFD11FFCA698DFD04696FFD08FFC4FD05698E696969%FD08FFCAFD13FFA8FFA8CBA8FD09FFA8FD0869A2FD0AFF70FD0769A1FD06%FF9B68FD05699BFD11FF9BFD0569689BFD09FFCAFD08699BFD08FFA8A19B%C49BA19BCAFD08FFA89B7094698D6994709BA1FD06FF9B698E698D698E69%A1FD0BFFCB698E698D698E699BFD06FF7069698E696969CAFD11FF9B698E%698D69699BFD0AFFC4698D698E698D699AFD08FF9A6869686968689BFD06%FFCA6F6968FD09699AFD04FFCAFD076994FD0DFF94FD06696FFD05FFA86A%FD0669A8FD11FF70FD0669C4FD0AFFCA94FD0769FD08FF70FD04698D69CA%FD05FFA16969698E6969698E6969698D69CAFD04FF9AFD04698E6969A2FD%0DFF9B69698E69696994FD05FFCA698DFD0569FD11FFCA946969698E6969%A8FD0BFF9AFD04698E6969A2FD06FFA8FD0769A8FD04FFA168FD0C6994CB%FFFFFFCAFD0869FD0EFFA168FD0669CBFD04FFA1FD0569689BFD11FFCAFD%0769FD0CFFA168FD0669A2FD06FFCA698E698D698D70FD05FF698D698D69%8E69696994FD04699BFD04FFCA698E698D698E69A1FD0EFFA169698E698D%6994CAFD04FFA1698E698D698D709B9A9B9B9B9A9B9B9B9A9BCAFD05FFA1%69698D698E699AFD0CFFA18D698D698E6969A1FD06FFA1FD0569689BFD04%FF9AFD07699BCAA8CAA19B69CAFD04FF9BFD0769A8FD0EFFA1FD0769CBFD%04FF70FD09696869696968FD0469FD06FF9B68FD05699BFD0CFFA2FD0769%A2FD06FF9B6969698E69699BFD04FF946969698E6969A1FD0CFF9B696969%8E696969FD0FFF9BFD04698E6969CAFD04FF946969698E6969698E696969%8E6969698E6994FD06FF7069698E696969C4FD0CFFA169698EFD0469A1FD%06FF6FFD0669A2FD04FFFD0769CAFD0CFFFD076994FD0FFF9B68FD0669FD%04FFCAFD126970FD05FFA86AFD0669A2FD0CFFA168FD056968C4FD05FFCB%94698D698E698DCAFD04FF94698D698E696970FD0BFFCA94698D698E6969%9BFD0FFF708D698D698E6994FD04FFA18D698D698E698D698E698D698E69%8D698E69C4FD05FFCB6969698E696969FD0DFF9A69698E698D698ECAFD05%FFCAFD0769FD05FFFD0969A1FD09FFCAFD0769A1FD0EFFCAFD07699AFD04%FF9B68FD076968696869686968696869A2FD05FFA1FD066994FD0DFF94FD%0769FD06FFA169698E6969699BFD05FFA1688E6969698E69696994A1FD07%FFA869698EFD0469A1FD0EFFCA6969698E696969C4FD04FF9469698E6969%699BA1A19BA19BA19BA19BA19BFD06FFA1698EFD04699BFD0CFFCA698D69%69698E699AFD06FF9B68FD056976FD06FF7068FD0769686970FD06FFCAFD%066968A2FD0EFF70FD0769A8FFFFFFA894FD0669A8FD11FF70FD056968A1%FD0CFF9AFD07699BFD06FF9469698E698D69C4FD06FFCA946969698E698D%698E696970FD05FFCA8E698E698D6969A1FD0DFFCB94698D698E696970FD%05FF6969698E696969FD12FF94698E698D698ECAFD0BFFCB8E698E698D69%8E69FD06FFCA94FD0669A8FD07FFCA9BFD0A699AFD05FFFD0669689BFD0D%FFA168FD056968A1FD04FFA1FD066994FD11FFCBFD0769FD0CFF9BFD0669%689AFD06FFCB698D6969698D69FD0AFFCA9469698E6969698E696ACAFD04%FF946969698E696970FD0DFF6969698E69696994CAFD04FFA1698EFD0469%9BFD11FFA1FD04698E6994FD0BFFC4698D6969698E6969A2FD06FFA1FD05%696894FD0CFFA1FD0869A2FD04FF70FD0769A1FD0BFF70FD076976FD05FF%70FD056968A1FD11FF9B68FD056970FD0AFFC4FD086970FD07FFA1698E69%8D69699BFD0DFFA28D698D698E6969A1FD04FFCA698D698E698D6994FD0A%FFA18D698D698E696969FD06FF94698E698D698DA8FD11FF9469698D698E%69C4FD09FFC46969698E698D698D69FD08FF70FD056968A2FD0EFFFD0769%A2FD04FFA894FD06696894CAFD07FF9BFD0869A2FD06FFFD0769FD12FF70%FD0669A8FD07FFA19468FD076968C4FD08FF946969698E6969A2FD04FFC4%70C4CAFD05FFA169698E6969698DCAFD05FF9BFD04698E696969949BCAA8%FFA8A1FD05698E6969699BFD06FFA2FD04698E6969709B949A709B949A70%9B949A94FD05FF6969698E696969C4A8CAA2CAA19BFD05698E6969698D69%A1FD08FFCBFD0769FD05FF70696969709BA1A170FD07696FFD07FFFD0E69%68FD07696894FD07FFA168FD0769686969696869696968696894FD04FFA1%FD076968FD056968FD096968A1FD09FFA28D698D698E6994FD04FFCA8E69%69698DFD05698D698E696969CAFD07FFCB6969698E698D698E6969698E69%8D698E698D698D699BFD08FF9A69698D698E698D698E698D698E698D698E%69699BFD04FFC4698D698E698D698E6969698E698D698E698D698E696969%CAFD0AFFA168FD056994FD04FFA168FD0D69689BFD09FFCAFD1369A2FD09%FF94FD1369A1FD04FF70FD1369686970FD0CFF9A69698D696969C4FD04FF%7069698D6969698E6969698E696969A1FD0BFFCB7069698D6969698E6969%698E6969698D9AFD0BFF6969698D6969698D6969698D6969698D6969698D%A8FD04FF94698D6969698E6969698E6969698DFD05699BA8FD0CFFCA9468%6968696869A1FD04FFCA70696869696968696969686970CAFD0EFF9B7068%6968FD0A699470A1A2FD07FFA169686968696969686969696869696968FD%0469FD05FFFD0469686968696869686968FD04699AA1FD10FFA1C4A1CAA1%C4A1FD07FFCAC49B9B7094709A9AC4CAFD12FFCA9B9B708E6969698E698D%698E6969698D69949BFD05FFA1C4A1CAA1C4A1CAA1C4A1CAA1C4A1CAA1C4%A1CAFD06FFA8CAA1C49BC49B9B9AA19BA2A1CACAFD42FFA89BFD0C696869%A8FD72FF9B94FD05698EFD04699BFD74FFCAA2706968FD0669FD78FFCAA1%708D6969699BFD7BFFA8A16969A8FD7EFFCAFDFCFFFDFCFFFD1FFFAFFFFF%FFA9FFFFFFA9FFFFFFAFFFA9FFFFFFA9FD6CFF3085A85A305AA8FF36362F%7EFF852F5A30AF5A36305A84FD52FFA9A9FFAFA9FF84A984FF84FFA9A985%AFFFA9FFA984FFFF5A848530FFAFFF5A5AAFAF30A9845AAFFFFF5B7EFF5A%5AAFFFFFFF8485FFFF7E85FFFF84A984FF84A9FD40FFAF2FA95A5A7E5A7E%36A8307E7E5A855AA90DA93084FFFF3085A83636A9FF367EFFFF5A5A8530%5A5AFF3085FFAF2FA9FFFF305A5AA9305A305AA8363636305A30AFFD40FF%5A5A5B5A5A5AFF5A7F307F5AA9A95A5A365A5AAFFFFF5A84FFA98530A930%85FFFF3085845A84AFFF5A7EFFA936A8FFA936A8FF8436FFAF30A930FF7E%5AA95A84FD40FF7E305A5A0DA9FF7E2F843036A9FF305A7E305AFF7EFF30%85A8A98430847E2FA97E36A88530A9A8FF307EA85A30AF7EA9307EA8A930%A95A5A8430A8855AFF2FA9FD41FF36AF855AFFFF855AA9855AFFFF855AFF%5AA9FF5BA985A9A9305A7EFFFF85363630FFA95A5A5BA985305B5AFFAF5B%FFA9305AA985305BA9FF5AFF8485AF5BA9FD5AFFA9FD05FF845A7EFD07FF%A9FD07FFA9FDFCFFFDFCFFFDFCFFFDFCFFFDFCFFFDFCFFFDFCFFFD2AFFA8%FD7EFF7D7D7D527D7D52A8FD78FF7D7D522752275252FD78FFA8FFA8A8A8%FFA8FFFFFFA8FD09FFA8FFFFFFA8FFA8FD07FFA8FFA8FFA8FD09FFA8FD07%FFA8FFA8FFA8FFA8FD41FFA87D7D52527D52A8FFA8277DA8FD067DA87DFD%0552A8A87DA87D527DFD0452A85227FF52527DA852A87D7D7D52527DA852%A87D277D52527D7D7DA85252527DA8FD3AFF52275227277D527D27A87D52%F85227522752F8A87D5227525252A87D277D52525227525252A827277D52%5252272752A82752272727A8277D5252522727A8FD0527F827FD3EFFA8FD%25FFA8FD07FFA8FD50FFA8FFA8FFA8FFFF7D7DFFA8A8A8FFA8FFFFA87D7D%7DA87D7DA8FFFFFF7DA87DA87DA87D7D52A8FD58FF7DF8272727F8A87D7D%2752F852F8522752F87D7D52527D27277DA852527D2752FD0527525252FD%58FFA8FD057DA87D7DFFA852FD047DA87D7DA87DA8FD047DA87D7DFF7D7D%A8A8FD047D52A8FDFCFFFDDCFFA8FD7FFF7D52A87D527DA8FD79FF527D27%52275227FD7CFFA8FFA8FD7AFF7D7D7D52527D52FFFFFF27277D7D52A87D%7D52527DA852527D52527D5252527D52A8FD5EFF7D277D27277D7D7D52A8%5227275252F8527DA85252527D275227527D7D27F852527DFD60FFA8A8A8%FFA8FFA8FFFFFF7DFFA8FFA8FD07FFA8FFA8FD65FFA8A8FD07FFA8FD07FF%7DA8FFFFA8FFA8FF7DFFFFFF7DA8FFFFA8FD5EFF5252272727522752FD04%27F87DA87D52F8FD06277D52522752FD0527A8FD5DFFA87D7DA8A8527D7D%A87D7D7DA8A8A87DA87DA852A87D7D7DA8A8A87DA87DA87D7D7DFD60FFA8%FFFFA8FD0CFFA8FDFCFFFD72FFA8FD7EFF7D5252A8527D7DA8FD78FFA827%5252522727A8FD8CFFA8FD6BFFA87DA87D7D52A8FD067DA8A852A827527D%5252A87D522752A8A8FD087DA8A87DA87D7D277D7D527DA8FD4FFF522752%52F82727F8277DF852F8FD05522752F8527DF82727527D5252277D272752%27F87D525252272727F852275252FD52FFA852FD1CFF7DFD04FFA87DFD58%FF7D7DA8FFA8FFA8FFFFA8A8FD05FFA8FFA8FFA87D7DA87DA87D7D7DA87D%A87DFFA8A8FFFF52FFFFFFA8FFFFFFA8FFA8A8FD4EFF7D27272752F85227%52FD05277D525227275252277D52522727F8527D52F85252F85252F82752%FD04277D7DF827522727F87DFD4BFFFD067DA87D7DA87DA87D7D7DA87DA8%7DA87DA8A87D7DA8FD067DA8A87DA87D7D7DA852A8FD047D27FD067DFD4A%FFFF%%EndData
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
                                                                                                                                                                                                                              
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 73 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq{pop/AGMCORE_currentbg load}{/Procedure get_res}ifelse setblackgeneration
	dup null eq{pop/AGMCORE_currentucr load}{/Procedure get_res}ifelse setundercolorremoval
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		clonedict
		begin
			/Intent Intent def
			currentdict
		end
		setcolorrendering
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.%%Version: 2.31 010 dict begin/Adobe_CoolType_Passthru currentdict def/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known defAdobe_CoolType_Core_Defined	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}ifuserdict/Adobe_CoolType_Core 70 dict dup begin put/Adobe_CoolType_Version 2.31 def/Level2?	systemdict/languagelevel known dup		{pop systemdict/languagelevel get 2 ge}	if defLevel2? not	{	/currentglobal false def	/setglobal/pop load def	/gcheck{pop false}bind def	/currentpacking false def	/setpacking/pop load def	/SharedFontDirectory 0 dict def	}ifcurrentpackingtrue setpackingcurrentglobal false setglobaluserdict/Adobe_CoolType_Data 2 copy known not	{2 copy 10 dict put}ifget	 begin	/@opStackCountByLevel 32 dict def	/@opStackLevel 0 def	/@dictStackCountByLevel 32 dict def	/@dictStackLevel 0 def	 endsetglobalcurrentglobal true setglobaluserdict/Adobe_CoolType_GVMFonts known not	{userdict/Adobe_CoolType_GVMFonts 10 dict put}ifsetglobalcurrentglobal false setglobaluserdict/Adobe_CoolType_LVMFonts known not	{userdict/Adobe_CoolType_LVMFonts 10 dict put}ifsetglobal/ct_VMDictPut	{	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse	3 1 roll put	}bind def/ct_VMDictUndef	{	dup Adobe_CoolType_GVMFonts exch known		{Adobe_CoolType_GVMFonts exch undef}		{			dup Adobe_CoolType_LVMFonts exch known			{Adobe_CoolType_LVMFonts exch undef}			{pop}			ifelse		}ifelse	}bind def/ct_str1 1 string def/ct_xshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_yshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0 exch			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_xyshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			{_ct_na _ct_i 1 add get}stopped 			{pop pop pop}			{				_ct_x _ct_y moveto				rmoveto			}			ifelse		}		ifelse		/_ct_i _ct_i 2 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind defcurrentglobal true setglobal/ct_T3Defs{/BuildChar{	1 index/Encoding get exch get	1 index/BuildGlyph get exec}bind def/BuildGlyph{	exch begin	GlyphProcs exch get exec	end}bind def}bind defsetglobal/@_SaveStackLevels	{	Adobe_CoolType_Data		begin		/@vmState currentglobal def false setglobal		@opStackCountByLevel		@opStackLevel		2 copy known not			{			2 copy			3 dict dup/args			7 index			5 add array put			put get			}			{			get dup/args get dup length 3 index lt				{				dup length 5 add array exch				1 index exch 0 exch putinterval				1 index exch/args exch put				}				{pop}			ifelse			}		ifelse			begin			count 1 sub			1 index lt				{pop count}			if			dup/argCount exch def			dup 0 gt				{				args exch 0 exch getinterval 			astore pop				}				{pop}			ifelse			count			/restCount exch def			end		/@opStackLevel @opStackLevel 1 add def		countdictstack 1 sub		@dictStackCountByLevel exch @dictStackLevel exch put		/@dictStackLevel @dictStackLevel 1 add def		@vmState setglobal		end	}bind def/@_RestoreStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		@opStackCountByLevel @opStackLevel get			begin			count restCount sub dup 0 gt				{{pop}repeat}				{pop}			ifelse			args 0 argCount getinterval{}forall			end		/@dictStackLevel @dictStackLevel 1 sub def		@dictStackCountByLevel @dictStackLevel get		end	countdictstack exch sub dup 0 gt		{{end}repeat}		{pop}	ifelse	}bind def/@_PopStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		/@dictStackLevel @dictStackLevel 1 sub def		end	}bind def/@Raise	{	exch cvx exch errordict exch get exec	stop	}bind def/@ReRaise	{	cvx $error/errorname get errordict exch get exec	stop	}bind def/@Stopped	{	0 @#Stopped	}bind def/@#Stopped	{	@_SaveStackLevels	stopped		{@_RestoreStackLevels true}		{@_PopStackLevels false}	ifelse	}bind def/@Arg	{	Adobe_CoolType_Data		begin		@opStackCountByLevel @opStackLevel 1 sub get		begin		args exch		argCount 1 sub exch sub get		end		end	}bind defcurrentglobal true setglobal/CTHasResourceForAllBug	Level2?		{		1 dict dup				/@shouldNotDisappearDictValue true def				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put				begin				count @_SaveStackLevels					{(*){pop stop}128 string/Category resourceforall}				stopped pop				@_RestoreStackLevels				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll					{						 /@shouldNotDisappearDictValue known								{										 {												end												currentdict 1 index eq													{pop exit}												if										 }									 loop								}						 if					}					{						 pop						 end					}				ifelse		}		{false}	ifelse	deftrue setglobal/CTHasResourceStatusBug	Level2?		{		mark			{/steveamerige/Category resourcestatus}		stopped			{cleartomark true}			{cleartomark currentglobal not}		ifelse		}		{false}	ifelse	defsetglobal/CTResourceStatus		{		mark 3 1 roll		/Category findresource			begin			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec				{cleartomark false}				{{3 2 roll pop true}{cleartomark false}ifelse}			ifelse			end		}bind def/CTWorkAroundBugs	{	Level2?		{		/cid_PreLoad/ProcSet resourcestatus			{			pop pop			currentglobal			mark				{				(*)					{					dup/CMap CTHasResourceStatusBug						{CTResourceStatus}						{resourcestatus}					ifelse						{						pop dup 0 eq exch 1 eq or							{							dup/CMap findresource gcheck setglobal							/CMap undefineresource							}							{							pop CTHasResourceForAllBug								{exit}								{stop}							ifelse							}						ifelse						}						{pop}					ifelse					}				128 string/CMap resourceforall				}			stopped				{cleartomark}			stopped pop			setglobal			}		if		}	if	}bind def/ds	{	Adobe_CoolType_Core		begin		CTWorkAroundBugs		/mo/moveto load def		/nf/newencodedfont load def		/msf{makefont setfont}bind def		/uf{dup undefinefont ct_VMDictUndef}bind def		/ur/undefineresource load def		/chp/charpath load def		/awsh/awidthshow load def		/wsh/widthshow load def		/ash/ashow load def		/@xshow/xshow load def		/@yshow/yshow load def		/@xyshow/xyshow load def		/@cshow/cshow load def		/sh/show load def		/rp/repeat load def		/.n/.notdef def		end		currentglobal false setglobal	 userdict/Adobe_CoolType_Data 2 copy known not		 {2 copy 10 dict put}		if		get		begin		/AddWidths? false def		/CC 0 def		/charcode 2 string def		/@opStackCountByLevel 32 dict def		/@opStackLevel 0 def		/@dictStackCountByLevel 32 dict def		/@dictStackLevel 0 def		/InVMFontsByCMap 10 dict def		/InVMDeepCopiedFonts 10 dict def		end		setglobal	}bind def/dt	{	currentdict Adobe_CoolType_Core eq		{end}	if	}bind def/ps	{	Adobe_CoolType_Core begin	Adobe_CoolType_GVMFonts begin	Adobe_CoolType_LVMFonts begin	SharedFontDirectory begin	}bind def/pt	{	end	end	end	end	}bind def/unload	{	systemdict/languagelevel known		{		systemdict/languagelevel get 2 ge			{			userdict/Adobe_CoolType_Core 2 copy known				{undef}				{pop pop}			ifelse			}		if		}	if	}bind def/ndf	{	1 index where		{pop pop pop}		{dup xcheck{bind}if def}	ifelse	}def/findfont systemdict	begin	userdict		begin		/globaldict where{/globaldict get begin}if			dup where pop exch get		/globaldict where{pop end}if		end	endAdobe_CoolType_Core_Defined	{/systemfindfont exch def}	{	/findfont 1 index def	/systemfindfont exch def	}ifelse/undefinefont	{pop}ndf/copyfont	{	currentglobal 3 1 roll	1 index gcheck setglobal	dup null eq{0}{dup length}ifelse	2 index length add 1 add dict		begin		exch			{			1 index/FID eq				{pop pop}				{def}			ifelse			}		forall		dup null eq			{pop}			{{def}forall}		ifelse		currentdict		end	exch setglobal	}bind def/copyarray	{	currentglobal exch	dup gcheck setglobal	dup length array copy	exch setglobal	}bind def/newencodedfont	{	currentglobal		{		SharedFontDirectory 3 index known			{SharedFontDirectory 3 index get/FontReferenced known}			{false}		ifelse		}		{		FontDirectory 3 index known			{FontDirectory 3 index get/FontReferenced known}			{			SharedFontDirectory 3 index known				{SharedFontDirectory 3 index get/FontReferenced known}				{false}			ifelse			}		ifelse		}	ifelse	dup		{		3 index findfont/FontReferenced get		2 index dup type/nametype eq			{findfont}		if ne			{pop false}		if		}	if	dup		{		1 index dup type/nametype eq			{findfont}		 if		dup/CharStrings known			{			/CharStrings get length			4 index findfont/CharStrings get length			ne				{				pop false				}			if 			}			{pop}			ifelse		}	if		{		pop		1 index findfont		/Encoding get exch		0 1 255			{2 copy get 3 index 3 1 roll put}		for		pop pop pop		}		{		currentglobal	 4 1 roll		dup type/nametype eq		 {findfont}	 if	 dup gcheck setglobal		dup dup maxlength 2 add dict			begin			exch				{				1 index/FID ne				2 index/Encoding ne and					{def}					{pop pop}				ifelse				}			forall			/FontReferenced exch def			/Encoding exch dup length array copy def			/FontName 1 index dup type/stringtype eq{cvn}if def dup			currentdict			end		definefont ct_VMDictPut		setglobal		}	ifelse	}bind def/SetSubstituteStrategy	{	$SubstituteFont		begin		dup type/dicttype ne			{0 dict}		if		currentdict/$Strategies known			{			exch $Strategies exch 			2 copy known				{				get				2 copy maxlength exch maxlength add dict					begin					{def}forall					{def}forall					currentdict					dup/$Init known						{dup/$Init get exec}					if					end				/$Strategy exch def				}				{pop pop pop}			ifelse			}			{pop pop}		ifelse		end	}bind def/scff	{	$SubstituteFont		begin		dup type/stringtype eq			{dup length exch}			{null}		ifelse		/$sname exch def		/$slen exch def		/$inVMIndex			$sname null eq				{				1 index $str cvs				dup length $slen sub $slen getinterval cvn				}				{$sname}			ifelse def		end		{findfont}	@Stopped		{		dup length 8 add string exch		1 index 0(BadFont:)putinterval		1 index exch 8 exch dup length string cvs putinterval cvn			{findfont}		@Stopped			{pop/Courier findfont}		if		}	if	$SubstituteFont		begin		/$sname null def		/$slen 0 def		/$inVMIndex null def		end	}bind def/isWidthsOnlyFont	{	dup/WidthsOnly known		{pop pop true}		{		dup/FDepVector known			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}			{			dup/FDArray known				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}				{pop}			ifelse			}		ifelse		}	ifelse	}bind def/ct_StyleDicts 4 dict dup begin		 /Adobe-Japan1 4 dict dup begin					 Level2?								{								/Serif								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMin-W3}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMin-W3/CIDFont resourcestatus								{pop pop/HeiseiMin-W3}								{/Ryumin-Light}								ifelse							}							{/Ryumin-Light}							ifelse								}								ifelse								def								/SansSerif								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiKakuGo-W5}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiKakuGo-W5/CIDFont resourcestatus								{pop pop/HeiseiKakuGo-W5}								{/GothicBBB-Medium}								ifelse							}							{/GothicBBB-Medium}							ifelse								}								ifelse								def								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMaruGo-W4}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMaruGo-W4/CIDFont resourcestatus								{pop pop/HeiseiMaruGo-W4}								{									/Jun101-Light-RKSJ-H/Font resourcestatus									{pop pop/Jun101-Light}									{SansSerif}									ifelse								}								ifelse							}							{								/Jun101-Light-RKSJ-H/Font resourcestatus								{pop pop/Jun101-Light}								{SansSerif}								ifelse							}							ifelse								}								ifelse								/RoundSansSerif exch def								/Default Serif def								}								{								/Serif/Ryumin-Light def								/SansSerif/GothicBBB-Medium def								{								(fonts/Jun101-Light-83pv-RKSJ-H)status								}stopped								{pop}{										 {pop pop pop pop/Jun101-Light}										 {SansSerif}										 ifelse										 /RoundSansSerif exch def								}ifelse								/Default Serif def								}					 ifelse		 end		 def		 /Adobe-Korea1 4 dict dup begin					/Serif/HYSMyeongJo-Medium def					/SansSerif/HYGoThic-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-GB1 4 dict dup begin					/Serif/STSong-Light def					/SansSerif/STHeiti-Regular def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-CNS1 4 dict dup begin					/Serif/MKai-Medium def					/SansSerif/MHei-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 defenddefLevel2?{currentglobal true setglobal}if/ct_BoldRomanWidthProc 	{	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth	0 0	}bind def/ct_Type0WidthProc 	{	 dup stringwidth 0 0 moveto 	 2 index true charpath pathbbox	 0 -1 	 7 index 2 div .88 	 setcachedevice2	 pop	0 0	}bind def/ct_Type0WMode1WidthProc 	{	 dup stringwidth 	 pop 2 div neg -0.88	2 copy	moveto 	0 -1	 5 -1 roll true charpath pathbbox	 setcachedevice	}bind def/cHexEncoding[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def/ct_BoldBaseFont 	 11 dict begin		/FontType 3 def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/Encoding cHexEncoding def 		/_setwidthProc/ct_BoldRomanWidthProc load def		/_bcstr1 1 string def		/BuildChar		{			exch begin				_basefont setfont				_bcstr1 dup 0 4 -1 roll put				dup 				_setwidthProc				3 copy 				moveto								show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end defsystemdict/composefont known{/ct_DefineIdentity-H{	/Identity-H/CMap resourcestatus	{		pop pop	}	{		/CIDInit/ProcSet findresource begin		 12 dict begin		 begincmap		 /CIDSystemInfo 3 dict dup begin			 /Registry(Adobe)def			 /Ordering(Identity)def			 /Supplement 0 def		 end def		 /CMapName/Identity-H def		 /CMapVersion 1.000 def		 /CMapType 1 def		 1 begincodespacerange		 <0000><FFFF>		 endcodespacerange		 1 begincidrange		 <0000><FFFF>0		 endcidrange		 endcmap		 CMapName currentdict/CMap defineresource pop		 end		 end	 }	 ifelse}def/ct_BoldBaseCIDFont 	 11 dict begin		/CIDFontType 1 def		/CIDFontName/ct_BoldBaseCIDFont def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/_setwidthProc/ct_Type0WidthProc load def		/_bcstr2 2 string def		/BuildGlyph		{			exch begin		 				_basefont setfont				_bcstr2 1 2 index 256 mod put				_bcstr2 0 3 -1 roll 256 idiv put				_bcstr2 dup _setwidthProc		 				3 copy 				moveto				show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end def}ifLevel2?{setglobal}if/ct_CopyFont{	{		1 index/FID ne 2 index/UniqueID ne and		{def}{pop pop}ifelse	}forall}bind def/ct_Type0CopyFont {	exch	dup length dict	begin	ct_CopyFont	[	exch	FDepVector 	{		 dup/FontType get 0 eq		{			1 index ct_Type0CopyFont 		/_ctType0 exch definefont		}		{		/_ctBaseFont exch		2 index exec		}		 ifelse 		 exch	}	forall 	pop	]					/FDepVector exch def	currentdict	end}bind def/ct_MakeBoldFont{	 dup/ct_SyntheticBold known	{		dup length 3 add dict begin 		ct_CopyFont 		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 		/ct_SyntheticBold true def		currentdict 		end 		definefont	}	{		dup dup length 3 add dict		begin			ct_CopyFont			/PaintType 2 def			/StrokeWidth .03 0 FontMatrix idtransform pop def			/dummybold currentdict		end		definefont		dup/FontType get dup 9 ge exch 11 le and 		{			ct_BoldBaseCIDFont			dup length 3 add dict copy begin			dup/CIDSystemInfo get/CIDSystemInfo exch def			ct_DefineIdentity-H			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefont exch def			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefonto exch def			currentdict			end			/CIDFont defineresource		}		{			ct_BoldBaseFont			dup length 3 add dict copy begin			/_basefont exch def			/_basefonto exch def			currentdict			end			definefont		}		ifelse	}	ifelse}bind def/ct_MakeBold{	1 index 	1 index	findfont	currentglobal 5 1 roll	dup gcheck setglobal		dup		 /FontType get 0 eq			{				dup/WMode known{dup/WMode get 1 eq}{false}ifelse				version length 4 ge				and					{version 0 4 getinterval cvi 2015 ge}					{true}				ifelse 					{/ct_Type0WidthProc}					{/ct_Type0WMode1WidthProc}				ifelse				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put						{ct_MakeBoldFont}ct_Type0CopyFont definefont			}			{				dup/_fauxfont known not 1 index/SubstMaster known not and				{					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put					 ct_MakeBoldFont 				}				{				2 index 2 index eq					{exch pop	}					{						dup length dict begin						ct_CopyFont						currentdict						end						definefont 					}				ifelse				}			ifelse			}		 ifelse		 pop pop pop		 setglobal}bind def/?str1 256 string def/?set	{	$SubstituteFont		begin		/$substituteFound false def		/$fontname 1 index def		/$doSmartSub false def		end	dup	 findfont	$SubstituteFont		begin		$substituteFound			{false}			{			dup/FontName known				{				dup/FontName get $fontname eq				1 index/DistillerFauxFont known not and				/currentdistillerparams where					{pop false 2 index isWidthsOnlyFont not and}				if				}				{false}			ifelse			}		ifelse		exch pop		/$doSmartSub true def		end		{		5 1 roll pop pop pop pop		findfont		}		{		1 index		findfont		dup/FontType get 3 eq		{			6 1 roll pop pop pop pop pop false		}		{pop true}		ifelse		{		$SubstituteFont		begin		pop pop		/$styleArray 1 index def		/$regOrdering 2 index def		pop pop		0 1 $styleArray length 1 sub		{			$styleArray exch get			ct_StyleDicts $regOrdering			2 copy known			{				get				exch 2 copy known not				{pop/Default}				if				get				dup type/nametype eq				{				?str1 cvs length dup 1 add exch				?str1 exch(-)putinterval				exch dup length exch ?str1 exch 3 index exch putinterval				add ?str1 exch 0 exch getinterval cvn				}				{				pop pop/Unknown				}				ifelse			}			{				pop pop pop pop/Unknown			}			ifelse		}		for		end		findfont 		}if		}	ifelse	currentglobal false setglobal 3 1 roll	null copyfont definefont pop	setglobal	}bind defsetpackinguserdict/$SubstituteFont 25 dict put1 dict	begin	/SubstituteFont		dup $error exch 2 copy known			{get}			{pop pop{pop/Courier}bind}		ifelse def	/currentdistillerparams where dup		{		pop pop		currentdistillerparams/CannotEmbedFontPolicy 2 copy known			{get/Error eq}			{pop pop false}		ifelse		}	if not		{		countdictstack array dictstack 0 get			begin			userdict				begin				$SubstituteFont					begin					/$str 128 string def					/$fontpat 128 string def					/$slen 0 def					/$sname null def					/$match false def					/$fontname null def					/$substituteFound false def					/$inVMIndex null def					/$doSmartSub true def					/$depth 0 def					/$fontname null def					/$italicangle 26.5 def					/$dstack null def					/$Strategies 10 dict dup						begin						/$Type3Underprint							{							currentglobal exch false setglobal							11 dict								begin								/UseFont exch									$WMode 0 ne										{										dup length dict copy										dup/WMode $WMode put										/UseFont exch definefont										}									if def								/FontName $fontname dup type/stringtype eq{cvn}if def								/FontType 3 def								/FontMatrix[.001 0 0 .001 0 0]def								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def								/FontBBox[0 0 0 0]def								/CCInfo 7 dict dup									begin									/cc null def									/x 0 def									/y 0 def									end def								/BuildChar									{									exch										begin										CCInfo											begin											1 string dup 0 3 index put exch pop											/cc exch def											UseFont 1000 scalefont setfont											cc stringwidth/y exch def/x exch def											x y setcharwidth											$SubstituteFont/$Strategy get/$Underprint get exec											0 0 moveto cc show											x y moveto											end										end									}bind def								currentdict								end							exch setglobal							}bind def						/$GetaTint							2 dict dup								begin								/$BuildFont									{									dup/WMode known										{dup/WMode get}										{0}									ifelse									/$WMode exch def									$fontname exch									dup/FontName known										{										dup/FontName get										dup type/stringtype eq{cvn}if										}										{/unnamedfont}									ifelse									exch									Adobe_CoolType_Data/InVMDeepCopiedFonts get									1 index/FontName get known										{										pop										Adobe_CoolType_Data/InVMDeepCopiedFonts get										1 index get										null copyfont										}										{$deepcopyfont}									ifelse									exch 1 index exch/FontBasedOn exch put									dup/FontName $fontname dup type/stringtype eq{cvn}if put									definefont									Adobe_CoolType_Data/InVMDeepCopiedFonts get										begin										dup/FontBasedOn get 1 index def										end									}bind def								/$Underprint									{									gsave									x abs y abs gt										{/y 1000 def}										{/x -1000 def 500 120 translate}									ifelse									Level2?										{										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]										setcolorspace										}										{0 setgray}									ifelse									10 setlinewidth									x .8 mul									[7 3]										{										y mul 8 div 120 sub x 10 div exch moveto										0 y 4 div neg rlineto										dup 0 rlineto										0 y 4 div rlineto										closepath										gsave										Level2?											{.2 setcolor}											{.8 setgray}										ifelse										fill grestore										stroke										}									forall									pop									grestore									}bind def								end def						/$Oblique							1 dict dup								begin								/$BuildFont									{									currentglobal exch dup gcheck setglobal									null copyfont										begin										/FontBasedOn										currentdict/FontName known											{											FontName											dup type/stringtype eq{cvn}if											}											{/unnamedfont}										ifelse										def										/FontName $fontname dup type/stringtype eq{cvn}if def										/currentdistillerparams where											{pop}											{											/FontInfo currentdict/FontInfo known												{FontInfo null copyfont}												{2 dict}											ifelse											dup												begin												/ItalicAngle $italicangle def												/FontMatrix FontMatrix												[1 0 ItalicAngle dup sin exch cos div 1 0 0]												matrix concatmatrix readonly												end											4 2 roll def											def											}										ifelse										FontName currentdict										end									definefont									exch setglobal									}bind def								end def						/$None							1 dict dup								begin								/$BuildFont{}bind def								end def						end def					/$Oblique SetSubstituteStrategy					/$findfontByEnum						{						dup type/stringtype eq{cvn}if						dup/$fontname exch def						$sname null eq							{$str cvs dup length $slen sub $slen getinterval}							{pop $sname}						ifelse						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval						/$match false def						$SubstituteFont/$dstack countdictstack array dictstack put						mark							{							$fontpat 0 $slen 7 add getinterval								{/$match exch def exit}							$str filenameforall							}						stopped							{							cleardictstack							currentdict							true							$SubstituteFont/$dstack get								{								exch									{									1 index eq										{pop false}										{true}									ifelse									}									{begin false}								ifelse								}							forall							pop							}						if						cleartomark						/$slen 0 def						$match false ne							{$match(fonts/)anchorsearch pop pop cvn}							{/Courier}						ifelse						}bind def					/$ROS 1 dict dup						begin						/Adobe 4 dict dup							begin							/Japan1 [/Ryumin-Light/HeiseiMin-W3										 /GothicBBB-Medium/HeiseiKakuGo-W5										 /HeiseiMaruGo-W4/Jun101-Light]def							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def							/GB1	 [/STSong-Light/STHeiti-Regular]def							/CNS1	[/MKai-Medium/MHei-Medium]def							end def						end def					/$cmapname null def					/$deepcopyfont						{						dup/FontType get 0 eq							{							1 dict dup/FontName/copied put copyfont								begin								/FDepVector FDepVector copyarray								0 1 2 index length 1 sub									{									2 copy get $deepcopyfont									dup/FontName/copied put									/copied exch definefont									3 copy put pop pop									}								for								def								currentdict								end							}							{$Strategies/$Type3Underprint get exec}						ifelse						}bind def					/$buildfontname						{						dup/CIDFont findresource/CIDSystemInfo get							begin							Registry length Ordering length Supplement 8 string cvs							3 copy length 2 add add add string							dup 5 1 roll dup 0 Registry putinterval							dup 4 index(-)putinterval							dup 4 index 1 add Ordering putinterval							4 2 roll add 1 add 2 copy(-)putinterval							end						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch						anchorsearch							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}							{pop pop pop pop pop}						ifelse						length						$str 1 index(-)putinterval 1 add						$str 1 index $cmapname $fontpat cvs putinterval						$cmapname length add						$str exch 0 exch getinterval cvn						}bind def					/$findfontByROS						{						/$fontname exch def						$ROS Registry 2 copy known							{							get Ordering 2 copy known								{get}								{pop pop[]}							ifelse							}							{pop pop[]}						ifelse						false exch							{							dup/CIDFont resourcestatus								{								pop pop								save								1 index/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get}									{false}								ifelse								exch pop								exch restore									{pop}									{exch pop true exit}								ifelse								}								{pop}							ifelse							}						forall							{$str cvs $buildfontname}							{							false(*)								{								save exch								dup/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get not}									{true}								ifelse								exch/CIDSystemInfo get								dup/Registry get Registry eq								exch/Ordering get Ordering eq and and									{exch restore exch pop true exit}									{pop restore}								ifelse								}							$str/CIDFont resourceforall								{$buildfontname}								{$fontname $findfontByEnum}							ifelse							}						ifelse						}bind def					end				end				currentdict/$error known currentdict/languagelevel known and dup					{pop $error/SubstituteFont known}				if				dup					{$error}					{Adobe_CoolType_Core}				ifelse				begin					{					/SubstituteFont					/CMap/Category resourcestatus						{						pop pop						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{								$sname null eq									{dup $str cvs dup length $slen sub $slen getinterval cvn}									{$sname}								ifelse								Adobe_CoolType_Data/InVMFontsByCMap get								1 index 2 copy known									{									get									false exch										{										pop										currentglobal											{											GlobalFontDirectory 1 index known												{exch pop true exit}												{pop}											ifelse											}											{											FontDirectory 1 index known												{exch pop true exit}												{												GlobalFontDirectory 1 index known													{exch pop true exit}													{pop}												ifelse												}											ifelse											}										ifelse										}									forall									}									{pop pop false}								ifelse									{									exch pop exch pop									}									{									dup/CMap resourcestatus										{										pop pop										dup/$cmapname exch def										/CMap findresource/CIDSystemInfo get{def}forall										$findfontByROS										}										{										128 string cvs										dup(-)search											{											3 1 roll search												{												3 1 roll pop													{dup cvi}												stopped													{pop pop pop pop pop $findfontByEnum}													{													4 2 roll pop pop													exch length													exch													2 index length													2 index													sub													exch 1 sub -1 0														{														$str cvs dup length														4 index														0														4 index														4 3 roll add														getinterval														exch 1 index exch 3 index exch														putinterval														dup/CMap resourcestatus															{															pop pop															4 1 roll pop pop pop															dup/$cmapname exch def															/CMap findresource/CIDSystemInfo get{def}forall															$findfontByROS															true exit															}															{pop}														ifelse														}													for													dup type/booleantype eq														{pop}														{pop pop pop $findfontByEnum}													ifelse													}												ifelse												}												{pop pop pop $findfontByEnum}											ifelse											}											{pop pop $findfontByEnum}										ifelse										}									ifelse									}								ifelse								}								{//SubstituteFont exec}							ifelse							/$slen 0 def							end						}						}						{						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{$findfontByEnum}								{//SubstituteFont exec}							ifelse							end						}						}					ifelse					bind readonly def					Adobe_CoolType_Core/scfindfont/systemfindfont load put					}					{					/scfindfont						{						$SubstituteFont							begin							dup systemfindfont							dup/FontName known								{dup/FontName get dup 3 index ne}								{/noname true}							ifelse							dup								{								/$origfontnamefound 2 index def								/$origfontname 4 index def/$substituteFound true def								}							if							exch pop								{								$slen 0 gt								$sname null ne								3 index length $slen gt or and									{									pop dup $findfontByEnum findfont									dup maxlength 1 add dict										begin											{1 index/FID eq{pop pop}{def}ifelse}										forall										currentdict										end									definefont									dup/FontName known{dup/FontName get}{null}ifelse									$origfontnamefound ne										{										$origfontname $str cvs print										( substitution revised, using )print										dup/FontName known											{dup/FontName get}{(unspecified font)}										ifelse										$str cvs print(.\n)print										}									if									}									{exch pop}								ifelse								}								{exch pop}							ifelse							end						}bind def					}				ifelse				end			end		Adobe_CoolType_Core_Defined not			{			Adobe_CoolType_Core/findfont				{				$SubstituteFont					begin					$depth 0 eq						{						/$fontname 1 index dup type/stringtype ne{$str cvs}if def						/$substituteFound false def						}					if					/$depth $depth 1 add def					end				scfindfont				$SubstituteFont					begin					/$depth $depth 1 sub def					$substituteFound $depth 0 eq and						{						$inVMIndex null ne							{dup $inVMIndex $AddInVMFont}						if						$doSmartSub							{							currentdict/$Strategy known								{$Strategy/$BuildFont get exec}							if							}						if						}					if					end				}bind put			}		if		}	if	end/$AddInVMFont	{	exch/FontName 2 copy known		{		get		1 dict dup begin exch 1 index gcheck def end exch		Adobe_CoolType_Data/InVMFontsByCMap get exch		$DictAdd		}		{pop pop pop}	ifelse	}bind def/$DictAdd	{	2 copy known not		{2 copy 4 index length dict put}	if	Level2? not		{		2 copy get dup maxlength exch length 4 index length add lt		2 copy get dup length 4 index length add exch maxlength 1 index lt			{			2 mul dict				begin				2 copy get{forall}def				2 copy currentdict put				end			}			{pop}		ifelse		}	if	get		begin			{def}		forall		end	}bind defendend%%EndResourcecurrentglobal true setglobal%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.%%Version: 1.23 0systemdict/languagelevel known dup	{currentglobal false setglobal}	{false}ifelseexchuserdict/Adobe_CoolType_Utility 2 copy known	{2 copy get dup maxlength 27 add dict copy}	{27 dict}ifelse putAdobe_CoolType_Utility	begin	/@eexecStartData		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def	/@recognizeCIDFont null def	/ct_Level2? exch def	/ct_Clone? 1183615869 internaldict dup			/CCRun known not			exch/eCCRun known not			ct_Level2? and or defct_Level2?	{globaldict begin currentglobal true setglobal}if	/ct_AddStdCIDMap		ct_Level2?			{{				mark				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put					{					((Hex)57 StartData					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec					}				stopped					{					 cleartomark					 Adobe_CoolType_Utility/@recognizeCIDFont get					 countdictstack dup array dictstack					 exch 1 sub -1 0						 {						 2 copy get 3 index eq								{1 index length exch sub 1 sub{end}repeat exit}								{pop}						 ifelse						 }					 for					 pop pop					 Adobe_CoolType_Utility/@eexecStartData get eexec					}					{cleartomark}				ifelse			}}			{{				Adobe_CoolType_Utility/@eexecStartData get eexec			}}		ifelse bind defuserdict/cid_extensions knowndup{cid_extensions/cid_UpdateDB known and}if	{	 cid_extensions	 begin	/cid_GetCIDSystemInfo		{		 1 index type/stringtype eq			{exch cvn exch}		 if		 cid_extensions			 begin			 dup load 2 index known				{				 2 copy				 cid_GetStatusInfo				 dup null ne					{					 1 index load					 3 index get					 dup null eq						 {pop pop cid_UpdateDB}						 {						 exch						 1 index/Created get eq							 {exch pop exch pop}							 {pop cid_UpdateDB}						 ifelse						 }					 ifelse					}					{pop cid_UpdateDB}				 ifelse				}				{cid_UpdateDB}			 ifelse			 end		}bind def	 end	}ifct_Level2?	{end setglobal}if	/ct_UseNativeCapability? systemdict/composefont known def	/ct_MakeOCF 35 dict def	/ct_Vars 25 dict def	/ct_GlyphDirProcs 6 dict def	/ct_BuildCharDict 15 dict dup		begin		/charcode 2 string def		/dst_string 1500 string def		/nullstring()def		/usewidths? true def		end def	ct_Level2?{setglobal}{pop}ifelse	ct_GlyphDirProcs		begin		/GetGlyphDirectory			{			systemdict/languagelevel known				{pop/CIDFont findresource/GlyphDirectory get}				{				1 index/CIDFont findresource/GlyphDirectory				get dup type/dicttype eq					{					dup dup maxlength exch length sub 2 index lt						{						dup length 2 index add dict copy 2 index						/CIDFont findresource/GlyphDirectory 2 index put						}					if					}				if				exch pop exch pop				}			ifelse			+			}def		/+			{			systemdict/languagelevel known				{				currentglobal false setglobal				3 dict begin					/vm exch def				}				{1 dict begin}			ifelse			/$ exch def			systemdict/languagelevel known				{				vm setglobal				/gvm currentglobal def				$ gcheck setglobal				}			if			?{$ begin}if			}def		/?{$ type/dicttype eq}def		/|{			userdict/Adobe_CoolType_Data known				{			Adobe_CoolType_Data/AddWidths? known				{				 currentdict Adobe_CoolType_Data					begin					 begin						AddWidths?								{								Adobe_CoolType_Data/CC 3 index put								?{def}{$ 3 1 roll put}ifelse								CC charcode exch 1 index 0 2 index 256 idiv put								1 index exch 1 exch 256 mod put								stringwidth 2 array astore								currentfont/Widths get exch CC exch put								}								{?{def}{$ 3 1 roll put}ifelse}							ifelse					end				end				}				{?{def}{$ 3 1 roll put}ifelse}	ifelse				}				{?{def}{$ 3 1 roll put}ifelse}			ifelse			}def		/!			{			?{end}if			systemdict/languagelevel known				{gvm setglobal}			if			end			}def		/:{string currentfile exch readstring pop}executeonly def		end	ct_MakeOCF		begin		/ct_cHexEncoding		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def		/ct_CID_STR_SIZE 8000 def		/ct_mkocfStr100 100 string def		/ct_defaultFontMtx[.001 0 0 .001 0 0]def		/ct_1000Mtx[1000 0 0 1000 0 0]def		/ct_raise{exch cvx exch errordict exch get exec stop}bind def		/ct_reraise			{cvx $error/errorname get(Error: )print dup(						 )cvs print					errordict exch get exec stop			}bind def		/ct_cvnsi			{			1 index add 1 sub 1 exch 0 4 1 roll				{				2 index exch get				exch 8 bitshift				add				}			for			exch pop			}bind def		/ct_GetInterval			{			Adobe_CoolType_Utility/ct_BuildCharDict get				begin				/dst_index 0 def				dup dst_string length gt					{dup string/dst_string exch def}				if				1 index ct_CID_STR_SIZE idiv				/arrayIndex exch def				2 index arrayIndex get				2 index				arrayIndex ct_CID_STR_SIZE mul				sub					{					dup 3 index add 2 index length le						{						2 index getinterval						dst_string dst_index 2 index putinterval						length dst_index add/dst_index exch def						exit						}						{						1 index length 1 index sub						dup 4 1 roll						getinterval						dst_string dst_index 2 index putinterval						pop dup dst_index add/dst_index exch def						sub						/arrayIndex arrayIndex 1 add def						2 index dup length arrayIndex gt							 {arrayIndex get}							 {							 pop							 exit							 }						ifelse						0						}					ifelse					}				loop				pop pop pop				dst_string 0 dst_index getinterval				end			}bind def		ct_Level2?			{			/ct_resourcestatus			currentglobal mark true setglobal				{/unknowninstancename/Category resourcestatus}			stopped				{cleartomark setglobal true}				{cleartomark currentglobal not exch setglobal}			ifelse				{					{					mark 3 1 roll/Category findresource						begin						ct_Vars/vm currentglobal put						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec							{cleartomark false}							{{3 2 roll pop true}{cleartomark false}ifelse}						ifelse						ct_Vars/vm get setglobal						end					}				}				{{resourcestatus}}			ifelse bind def			/CIDFont/Category ct_resourcestatus				{pop pop}				{				currentglobal true setglobal				/Generic/Category findresource				dup length dict copy				dup/InstanceType/dicttype put				/CIDFont exch/Category defineresource pop				setglobal				}			ifelse			ct_UseNativeCapability?				{				/CIDInit/ProcSet findresource begin				12 dict begin				begincmap				/CIDSystemInfo 3 dict dup begin				 /Registry(Adobe)def				 /Ordering(Identity)def				 /Supplement 0 def				end def				/CMapName/Identity-H def				/CMapVersion 1.000 def				/CMapType 1 def				1 begincodespacerange				<0000><FFFF>				endcodespacerange				1 begincidrange				<0000><FFFF>0				endcidrange				endcmap				CMapName currentdict/CMap defineresource pop				end				end				}			if			}			{			/ct_Category 2 dict begin			/CIDFont 10 dict def			/ProcSet	2 dict def			currentdict			end			def			/defineresource				{				ct_Category 1 index 2 copy known					{					get					dup dup maxlength exch length eq						{						dup length 10 add dict copy						ct_Category 2 index 2 index put						}					if					3 index 3 index put					pop exch pop					}					{pop pop/defineresource/undefined ct_raise}				ifelse				}bind def			/findresource				{				ct_Category 1 index 2 copy known					{					get					2 index 2 copy known						{get 3 1 roll pop pop}						{pop pop/findresource/undefinedresource ct_raise}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/resourcestatus				{				ct_Category 1 index 2 copy known					{					get					2 index known					exch pop exch pop						{						0 -1 true						}						{						false						}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/ct_resourcestatus/resourcestatus load def			}		ifelse		/ct_CIDInit 2 dict			begin			/ct_cidfont_stream_init				{					{					dup(Binary)eq						{						pop						null						currentfile						ct_Level2?							{								{cid_BYTE_COUNT()/SubFileDecode filter}							stopped								{pop pop pop}							if							}						if						/readstring load						exit						}					if					dup(Hex)eq						{						pop						currentfile						ct_Level2?							{								{null exch/ASCIIHexDecode filter/readstring}							stopped								{pop exch pop(>)exch/readhexstring}							if							}							{(>)exch/readhexstring}						ifelse						load						exit						}					if					/StartData/typecheck ct_raise					}				loop				cid_BYTE_COUNT ct_CID_STR_SIZE le					{					2 copy cid_BYTE_COUNT string exch exec					pop					1 array dup					3 -1 roll					0 exch put					}					{					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi					dup array exch 2 sub 0 exch 1 exch						{						2 copy						5 index						ct_CID_STR_SIZE						string						6 index exec						pop						put						pop						}					for					2 index					cid_BYTE_COUNT ct_CID_STR_SIZE mod string					3 index exec					pop					1 index exch					1 index length 1 sub					exch put					}				ifelse				cid_CIDFONT exch/GlyphData exch put				2 index null eq					{					pop pop pop					}					{					pop/readstring load					1 string exch						{						3 copy exec						pop						dup length 0 eq							{							pop pop pop pop pop							true exit							}						if						4 index						eq							{							pop pop pop pop							false exit							}						if						}					loop					pop					}				ifelse				}bind def			/StartData				{				mark					{					currentdict					dup/FDArray get 0 get/FontMatrix get					0 get 0.001 eq						{						dup/CDevProc known not							{							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known								{get}								{								pop pop								{pop pop pop pop pop 0 -1000 7 index 2 div 880}								}							ifelse							def							}						if						}						{						/CDevProc							{							 pop pop pop pop pop							 0							 1 cid_temp/cid_CIDFONT get							/FDArray get 0 get							/FontMatrix get 0 get div							 7 index 2 div							 1 index 0.88 mul							}def						}					ifelse					/cid_temp 15 dict def					cid_temp						begin						/cid_CIDFONT exch def						3 copy pop						dup/cid_BYTE_COUNT exch def 0 gt							{							ct_cidfont_stream_init							FDArray								{								/Private get								dup/SubrMapOffset known									{									begin									/Subrs SubrCount array def									Subrs									SubrMapOffset									SubrCount									SDBytes									ct_Level2?										{										currentdict dup/SubrMapOffset undef										dup/SubrCount undef										/SDBytes undef										}									if									end									/cid_SD_BYTES exch def									/cid_SUBR_COUNT exch def									/cid_SUBR_MAP_OFFSET exch def									/cid_SUBRS exch def									cid_SUBR_COUNT 0 gt										{										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval										0 cid_SD_BYTES ct_cvnsi										0 1 cid_SUBR_COUNT 1 sub											{											exch 1 index											1 add											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add											GlyphData exch cid_SD_BYTES ct_GetInterval											0 cid_SD_BYTES ct_cvnsi											cid_SUBRS 4 2 roll											GlyphData exch											4 index											1 index											sub											ct_GetInterval											dup length string copy put											}										for										pop										}									if									}									{pop}								ifelse								}							forall							}						if						cleartomark pop pop						end					CIDFontName currentdict/CIDFont defineresource pop					end end					}				stopped					{cleartomark/StartData ct_reraise}				if				}bind def			currentdict			end def		/ct_saveCIDInit			{			/CIDInit/ProcSet ct_resourcestatus				{true}				{/CIDInitC/ProcSet ct_resourcestatus}			ifelse				{				pop pop				/CIDInit/ProcSet findresource				ct_UseNativeCapability?					{pop null}					{/CIDInit ct_CIDInit/ProcSet defineresource pop}				ifelse				}				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}			ifelse			ct_Vars exch/ct_oldCIDInit exch put			}bind def		/ct_restoreCIDInit			{			ct_Vars/ct_oldCIDInit get dup null ne				{/CIDInit exch/ProcSet defineresource pop}				{pop}			ifelse			}bind def		/ct_BuildCharSetUp			{			1 index				begin				CIDFont					begin					Adobe_CoolType_Utility/ct_BuildCharDict get						begin						/ct_dfCharCode exch def						/ct_dfDict exch def						CIDFirstByte ct_dfCharCode add						dup CIDCount ge							{pop 0}						if						/cid exch def							{							GlyphDirectory cid 2 copy known								{get}								{pop pop nullstring}							ifelse							dup length FDBytes sub 0 gt								{								dup								FDBytes 0 ne									{0 FDBytes ct_cvnsi}									{pop 0}								ifelse								/fdIndex exch def								dup length FDBytes sub FDBytes exch getinterval								/charstring exch def								exit								}								{								pop								cid 0 eq									{/charstring nullstring def exit}								if								/cid 0 def								}							ifelse							}						loop			}def		/ct_SetCacheDevice			{			0 0 moveto			dup stringwidth			3 -1 roll			true charpath			pathbbox			0 -1000			7 index 2 div 880			setcachedevice2			0 0 moveto			}def		/ct_CloneSetCacheProc			{			1 eq				{				stringwidth				pop -2 div -880				0 -1000 setcharwidth				moveto				}				{				usewidths?					{					currentfont/Widths get cid					2 copy known						{get exch pop aload pop}						{pop pop stringwidth}					ifelse					}					{stringwidth}				ifelse				setcharwidth				0 0 moveto				}			ifelse			}def		/ct_Type3ShowCharString			{			ct_FDDict fdIndex 2 copy known				{get}				{				currentglobal 3 1 roll				1 index gcheck setglobal				ct_Type1FontTemplate dup maxlength dict copy					begin					FDArray fdIndex get					dup/FontMatrix 2 copy known						{get}						{pop pop ct_defaultFontMtx}					ifelse					/FontMatrix exch dup length array copy def					/Private get					/Private exch def					/Widths rootfont/Widths get def					/CharStrings 1 dict dup/.notdef						<d841272cf18f54fc13>dup length string copy put def					currentdict					end				/ct_Type1Font exch definefont				dup 5 1 roll put				setglobal				}			ifelse			dup/CharStrings get 1 index/Encoding get			ct_dfCharCode get charstring put			rootfont/WMode 2 copy known				{get}				{pop pop 0}			ifelse			exch			1000 scalefont setfont			ct_str1 0 ct_dfCharCode put			ct_str1 exch ct_dfSetCacheProc			ct_SyntheticBold				{				currentpoint				ct_str1 show				newpath				moveto				ct_str1 true charpath				ct_StrokeWidth setlinewidth				stroke				}				{ct_str1 show}			ifelse			}def		/ct_Type4ShowCharString			{			ct_dfDict ct_dfCharCode charstring			FDArray fdIndex get			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not				{ct_1000Mtx matrix concatmatrix concat}				{pop}			ifelse			/Private get			Adobe_CoolType_Utility/ct_Level2? get not				{				ct_dfDict/Private				3 -1 roll					{put}				1183615869 internaldict/superexec get exec				}			if			1183615869 internaldict			Adobe_CoolType_Utility/ct_Level2? get				{1 index}				{3 index/Private get mark 6 1 roll}			ifelse			dup/RunInt known				{/RunInt get}				{pop/CCRun}			ifelse			get exec			Adobe_CoolType_Utility/ct_Level2? get not				{cleartomark}			if			}bind def		/ct_BuildCharIncremental			{				{				Adobe_CoolType_Utility/ct_MakeOCF get begin				ct_BuildCharSetUp				ct_ShowCharString				}			stopped				{stop}			if			end			end			end			end			}bind def		/BaseFontNameStr(BF00)def		/ct_Type1FontTemplate 14 dict			begin			/FontType 1 def			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/PaintType 0 def			currentdict			end def		/BaseFontTemplate 11 dict			begin			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/BuildChar/ct_BuildCharIncremental load def			ct_Clone?				{				/FontType 3 def				/ct_ShowCharString/ct_Type3ShowCharString load def				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def				/ct_SyntheticBold false def				/ct_StrokeWidth 1 def				}				{				/FontType 4 def				/Private 1 dict dup/lenIV 4 put def				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def				/PaintType 0 def				/ct_ShowCharString/ct_Type4ShowCharString load def				}			ifelse			/ct_str1 1 string def			currentdict			end def		/BaseFontDictSize BaseFontTemplate length 5 add def		/ct_matrixeq			{			true 0 1 5				{				dup 4 index exch get exch 3 index exch get eq and				dup not					{exit}				if				}			for			exch pop exch pop			}bind def		/ct_makeocf			{			15 dict				begin				exch/WMode exch def				exch/FontName exch def				/FontType 0 def				/FMapType 2 def			dup/FontMatrix known				{dup/FontMatrix get/FontMatrix exch def}				{/FontMatrix matrix def}			ifelse				/bfCount 1 index/CIDCount get 256 idiv 1 add					dup 256 gt{pop 256}if def				/Encoding					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for					bfCount 1 255{2 copy bfCount put pop}for					def				/FDepVector bfCount dup 256 lt{1 add}if array def				BaseFontTemplate BaseFontDictSize dict copy					begin					/CIDFont exch def					CIDFont/FontBBox known						{CIDFont/FontBBox get/FontBBox exch def}					if					CIDFont/CDevProc known						{CIDFont/CDevProc get/CDevProc exch def}					if					currentdict					end				BaseFontNameStr 3(0)putinterval				0 1 bfCount dup 256 eq{1 sub}if					{					FDepVector exch					2 index BaseFontDictSize dict copy						begin						dup/CIDFirstByte exch 256 mul def						FontType 3 eq							{/ct_FDDict 2 dict def}						if						currentdict						end					1 index 16					BaseFontNameStr 2 2 getinterval cvrs pop					BaseFontNameStr exch definefont					put					}				for				ct_Clone?					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}				if				FontName				currentdict				end			definefont			ct_Clone?				{				gsave				dup 1000 scalefont setfont				ct_BuildCharDict					begin					/usewidths? false def					currentfont/Widths get						begin						exch/CIDFont get/GlyphDirectory get							{							pop							dup charcode exch 1 index 0 2 index 256 idiv put							1 index exch 1 exch 256 mod put							stringwidth 2 array astore def							}						forall						end					/usewidths? true def					end				grestore				}				{exch pop}			ifelse			}bind def		currentglobal true setglobal		/ct_ComposeFont			{			ct_UseNativeCapability?				{								2 index/CMap ct_resourcestatus					{pop pop exch pop}					{					/CIDInit/ProcSet findresource						begin						12 dict							begin							begincmap							/CMapName 3 index def							/CMapVersion 1.000 def							/CMapType 1 def							exch/WMode exch def							/CIDSystemInfo 3 dict dup								begin								/Registry(Adobe)def								/Ordering								CMapName ct_mkocfStr100 cvs								(Adobe-)search									{									pop pop									(-)search										{										dup length string copy										exch pop exch pop										}										{pop(Identity)}									ifelse									}									{pop (Identity)}								ifelse								def								/Supplement 0 def								end def							1 begincodespacerange							<0000><FFFF>							endcodespacerange							1 begincidrange							<0000><FFFF>0							endcidrange							endcmap							CMapName currentdict/CMap defineresource pop							end						end					}				ifelse				composefont				}				{				3 2 roll pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def			setglobal		/ct_MakeIdentity			{			ct_UseNativeCapability?				{				1 index/CMap ct_resourcestatus					{pop pop}					{					/CIDInit/ProcSet findresource begin					12 dict begin					begincmap					/CMapName 2 index def					/CMapVersion 1.000 def					/CMapType 1 def					/CIDSystemInfo 3 dict dup						begin						/Registry(Adobe)def						/Ordering						CMapName ct_mkocfStr100 cvs						(Adobe-)search							{							pop pop							(-)search								{dup length string copy exch pop exch pop}								{pop(Identity)}							ifelse							}							{pop(Identity)}						ifelse						def						/Supplement 0 def						end def					1 begincodespacerange					<0000><FFFF>					endcodespacerange					1 begincidrange					<0000><FFFF>0					endcidrange					endcmap					CMapName currentdict/CMap defineresource pop					end					end					}				ifelse				composefont				}				{				exch pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def		currentdict readonly pop		end	end%%EndResourcesetglobal%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.%%Version: 1.0 0userdict/ct_T42Dict 15 dict putct_T42Dict begin/Is2015?{ version cvi 2015 ge}bind def/AllocGlyphStorage{ Is2015? {		pop } {	{string}forall }ifelse}bind def/Type42DictBegin{25 dict begin /FontName exch def /CharStrings 256 dict begin	 /.notdef 0 def	 currentdict end def /Encoding exch def /PaintType 0 def /FontType 42 def /FontMatrix[1 0 0 1 0 0]def 4 array astore cvx/FontBBox exch def /sfnts}bind def/Type42DictEnd { currentdict dup/FontName get exch definefont endct_T42Dict exchdup/FontName get exch put}bind def/RD{string currentfile exch readstring pop}executeonly def/PrepFor2015{Is2015?{		 	/GlyphDirectory 	 16	 dict def	 sfnts 0 get	 dup	 2 index	(glyx)	 putinterval	 2 index 	(locx)	 putinterval	 pop	 pop}{	 pop	 pop}ifelse			}bind def/AddT42Char{Is2015?{	/GlyphDirectory get 	begin	def	end	pop	pop}{	/sfnts get	4 index	get	3 index 2 index	putinterval	pop	pop	pop	pop}ifelse}bind def/T0AddT42Mtx2{/CIDFont findresource/Metrics2 get begin def end}bind defend%%EndResourcecurrentglobal true setglobal%%BeginFile: MMFauxFont.prc%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. %%All Rights Reserved.userdict /ct_EuroDict 10 dict putct_EuroDict begin/ct_CopyFont {    { 1 index /FID ne {def} {pop pop} ifelse} forall} def/ct_GetGlyphOutline{   gsave   initmatrix newpath   exch findfont dup    length 1 add dict    begin 		ct_CopyFont 		/Encoding Encoding dup length array copy 		dup		4 -1 roll		0 exch put   		def		currentdict   end   /ct_EuroFont exch definefont   1000 scalefont setfont   0 0 moveto   [       <00> stringwidth        <00> false charpath       pathbbox       [       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall   grestore   counttomark 8 add}def/ct_MakeGlyphProc{   ] cvx   /ct_PSBuildGlyph cvx   ] cvx} def/ct_PSBuildGlyph {  	gsave 	8 -1 roll pop 	7 1 roll         6 -2 roll ct_FontMatrix transform 6 2 roll        4 -2 roll ct_FontMatrix transform 4 2 roll        ct_FontMatrix transform 	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  	dup  9 1 roll 	{  		currentdict /StrokeWidth 2 copy known  		{   			get 2 div   			0 ct_FontMatrix dtransform pop			5 1 roll  			4 -1 roll 4 index sub   			4 1 roll   			3 -1 roll 4 index sub  			3 1 roll   			exch 4 index add exch  			4 index add  			5 -1 roll pop  		}  		{	 			pop pop 		}  		ifelse  	}           if  	setcachedevice          ct_FontMatrix concat        ct_PSPathOps begin 		exec 	end 	{  		currentdict /StrokeWidth 2 copy known  			{ get }  			{ pop pop 0 }    	    ifelse  		setlinewidth stroke  	}  	{   	    fill  	}  	ifelse      grestore} def /ct_PSPathOps 4 dict dup begin 	/m {moveto} def 	/l {lineto} def 	/c {curveto} def 	/cp {closepath} def end def /ct_matrix1000 [1000 0 0 1000 0 0] def/ct_AddGlyphProc  {   2 index findfont dup length 4 add dict    begin 	ct_CopyFont 	/CharStrings CharStrings dup length 1 add dict copy      begin         3 1 roll def           currentdict       end       def      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def      /ct_PSBuildGlyph /ct_PSBuildGlyph load def      /ct_PSPathOps /ct_PSPathOps load def      currentdict   end   definefont pop}defsystemdict /languagelevel known{	/ct_AddGlyphToPrinterFont {		2 copy		ct_GetGlyphOutline 3 add -1 roll restore 		ct_MakeGlyphProc 		ct_AddGlyphProc	} def}{	/ct_AddGlyphToPrinterFont {	    pop pop restore		Adobe_CTFauxDict /$$$FONTNAME get		/Euro		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get		ct_EuroDict exch get		ct_AddGlyphProc	} def} ifelse/AdobeSansMM { 556 0 24 -19 541 703 	{ 	541 628 m 	510 669 442 703 354 703 c 	201 703 117 607 101 444 c 	50 444 l 	25 372 l 	97 372 l 	97 301 l 	49 301 l 	24 229 l 	103 229 l 	124 67 209 -19 350 -19 c 	435 -19 501 25 509 32 c 	509 131 l 	492 105 417 60 343 60 c 	267 60 204 127 197 229 c 	406 229 l 	430 301 l 	191 301 l 	191 372 l 	455 372 l 	479 444 l 	194 444 l 	201 531 245 624 348 624 c 	433 624 484 583 509 534 c 	cp 	556 0 m 	}ct_PSBuildGlyph} def/AdobeSerifMM { 500 0 10 -12 484 692 	{ 	347 298 m 	171 298 l 	170 310 170 322 170 335 c 	170 362 l 	362 362 l 	374 403 l 	172 403 l 	184 580 244 642 308 642 c 	380 642 434 574 457 457 c 	481 462 l 	474 691 l 	449 691 l 	433 670 429 657 410 657 c 	394 657 360 692 299 692 c 	204 692 94 604 73 403 c 	22 403 l 	10 362 l 	70 362 l 	69 352 69 341 69 330 c 	69 319 69 308 70 298 c 	22 298 l 	10 257 l 	73 257 l 	97 57 216 -12 295 -12 c 	364 -12 427 25 484 123 c 	458 142 l 	425 101 384 37 316 37 c 	256 37 189 84 173 257 c 	335 257 l 	cp 	500 0 m 	} ct_PSBuildGlyph } def end		%%EndFilesetglobalAdobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get execAdobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: (Page 1) 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get execAdobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 4.1-c036 46.277092, Fri Feb 23 2007 14:16:18        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:format>application/postscript</dc:format>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xap="http://ns.adobe.com/xap/1.0/"
            xmlns:xapGImg="http://ns.adobe.com/xap/1.0/g/img/">
         <xap:CreatorTool>Adobe Illustrator CS3</xap:CreatorTool>
         <xap:CreateDate>2010-02-24T18:54:04-07:00</xap:CreateDate>
         <xap:ModifyDate>2010-02-26T14:00:16-07:00</xap:ModifyDate>
         <xap:MetadataDate>2010-02-26T14:00:16-07:00</xap:MetadataDate>
         <xap:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xapGImg:width>256</xapGImg:width>
                  <xapGImg:height>256</xapGImg:height>
                  <xapGImg:format>JPEG</xapGImg:format>
                  <xapGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgBAAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4q7FXYqpzXEEADTSLG&#xA;pNAzGgr8zthESeSCQEBeatDGyQyzixaXkvOQxhkYCqt8ZKsjAHcd9vGlsMZO4FsJT86QEera1bw2&#xA;bMkeoLLFHLczR1jMcZG7tGqyEkn+U70NFFMuOLHIn+Hu/G346tQyTAHVPbe5huEDxMGBAYdDVW3B&#xA;BFQQfEZiyiRzcgEFVyKXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXY&#xA;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</xapGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xap:Thumbnails>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xapMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#">
         <xapMM:DocumentID>uuid:8566075C9C21DF1197A6894294AFDFAC</xapMM:DocumentID>
         <xapMM:InstanceID>uuid:95A478B41D22DF1197A6894294AFDFAC</xapMM:InstanceID>
         <xapMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>uuid:8466075C9C21DF1197A6894294AFDFAC</stRef:instanceID>
            <stRef:documentID>uuid:5CAF2E664E14DF119A9DE4A82AE366E4</stRef:documentID>
         </xapMM:DerivedFrom>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xapTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:stFnt="http://ns.adobe.com/xap/1.0/sType/Font#"
            xmlns:xapG="http://ns.adobe.com/xap/1.0/g/">
         <xapTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>612.000000</stDim:w>
            <stDim:h>792.000000</stDim:h>
            <stDim:unit>Pixels</stDim:unit>
         </xapTPg:MaxPageSize>
         <xapTPg:NPages>1</xapTPg:NPages>
         <xapTPg:HasVisibleTransparency>False</xapTPg:HasVisibleTransparency>
         <xapTPg:HasVisibleOverprint>False</xapTPg:HasVisibleOverprint>
         <xapTPg:Fonts>
            <rdf:Bag>
               <rdf:li rdf:parseType="Resource">
                  <stFnt:fontName>MyriadPro-Regular</stFnt:fontName>
                  <stFnt:fontFamily>Myriad Pro</stFnt:fontFamily>
                  <stFnt:fontFace>Regular</stFnt:fontFace>
                  <stFnt:fontType>Open Type</stFnt:fontType>
                  <stFnt:versionString>Version 2.007;PS 002.000;Core 1.0.38;makeotf.lib1.7.9032</stFnt:versionString>
                  <stFnt:composite>False</stFnt:composite>
                  <stFnt:fontFileName>MyriadPro-Regular.otf</stFnt:fontFileName>
               </rdf:li>
            </rdf:Bag>
         </xapTPg:Fonts>
         <xapTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xapTPg:PlateNames>
         <xapTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xapG:groupName>Default Swatch Group</xapG:groupName>
                  <xapG:groupType>0</xapG:groupType>
                  <xapG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>White</xapG:swatchName>
                           <xapG:mode>RGB</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:red>255</xapG:red>
                           <xapG:green>255</xapG:green>
                           <xapG:blue>255</xapG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>Black</xapG:swatchName>
                           <xapG:mode>RGB</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:red>0</xapG:red>
                           <xapG:green>0</xapG:green>
                           <xapG:blue>0</xapG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>RGB Red</xapG:swatchName>
                           <xapG:mode>RGB</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:red>255</xapG:red>
                           <xapG:green>0</xapG:green>
                           <xapG:blue>0</xapG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>RGB Yellow</xapG:swatchName>
                           <xapG:mode>RGB</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:red>255</xapG:red>
                           <xapG:green>255</xapG:green>
                           <xapG:blue>0</xapG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>RGB Green</xapG:swatchName>
                           <xapG:mode>RGB</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:red>0</xapG:red>
                           <xapG:green>255</xapG:green>
                           <xapG:blue>0</xapG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>RGB Cyan</xapG:swatchName>
                           <xapG:mode>RGB</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:red>0</xapG:red>
                           <xapG:green>255</xapG:green>
                           <xapG:blue>255</xapG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>RGB Blue</xapG:swatchName>
                           <xapG:mode>RGB</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:red>0</xapG:red>
                           <xapG:green>0</xapG:green>
                           <xapG:blue>255</xapG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>RGB Magenta</xapG:swatchName>
                           <xapG:mode>RGB</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:red>255</xapG:red>
                           <xapG:green>0</xapG:green>
                           <xapG:blue>255</xapG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=193 G=39 B=45</xapG:swatchName>
                           <xapG:mode>RGB</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:red>193</xapG:red>
                           <xapG:green>39</xapG:green>
                           <xapG:blue>45</xapG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=237 G=28 B=36</xapG:swatchName>
                           <xapG:mode>RGB</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:red>237</xapG:red>
                           <xapG:green>28</xapG:green>
                           <xapG:blue>36</xapG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=241 G=90 B=36</xapG:swatchName>
                           <xapG:mode>RGB</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:red>241</xapG:red>
                           <xapG:green>90</xapG:green>
                           <xapG:blue>36</xapG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=247 G=147 B=30</xapG:swatchName>
                           <xapG:mode>RGB</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:red>247</xapG:red>
                           <xapG:green>147</xapG:green>
                           <xapG:blue>30</xapG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=251 G=176 B=59</xapG:swatchName>
                           <xapG:mode>RGB</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:red>251</xapG:red>
                           <xapG:green>176</xapG:green>
                           <xapG:blue>59</xapG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=252 G=238 B=33</xapG:swatchName>
                           <xapG:mode>RGB</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:red>252</xapG:red>
                           <xapG:green>238</xapG:green>
                           <xapG:blue>33</xapG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=217 G=224 B=33</xapG:swatchName>
                           <xapG:mode>RGB</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:red>217</xapG:red>
                           <xapG:green>224</xapG:green>
                           <xapG:blue>33</xapG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=140 G=198 B=63</xapG:swatchName>
                           <xapG:mode>RGB</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:red>140</xapG:red>
                           <xapG:green>198</xapG:green>
                           <xapG:blue>63</xapG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=57 G=181 B=74</xapG:swatchName>
                           <xapG:mode>RGB</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:red>57</xapG:red>
                           <xapG:green>181</xapG:green>
                           <xapG:blue>74</xapG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=0 G=146 B=69</xapG:swatchName>
                           <xapG:mode>RGB</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:red>0</xapG:red>
                           <xapG:green>146</xapG:green>
                           <xapG:blue>69</xapG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=0 G=104 B=55</xapG:swatchName>
                           <xapG:mode>RGB</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:red>0</xapG:red>
                           <xapG:green>104</xapG:green>
                           <xapG:blue>55</xapG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=34 G=181 B=115</xapG:swatchName>
                           <xapG:mode>RGB</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:red>34</xapG:red>
                           <xapG:green>181</xapG:green>
                           <xapG:blue>115</xapG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=0 G=169 B=157</xapG:swatchName>
                           <xapG:mode>RGB</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:red>0</xapG:red>
                           <xapG:green>169</xapG:green>
                           <xapG:blue>157</xapG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=41 G=171 B=226</xapG:swatchName>
                           <xapG:mode>RGB</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:red>41</xapG:red>
                           <xapG:green>171</xapG:green>
                           <xapG:blue>226</xapG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=0 G=113 B=188</xapG:swatchName>
                           <xapG:mode>RGB</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:red>0</xapG:red>
                           <xapG:green>113</xapG:green>
                           <xapG:blue>188</xapG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=46 G=49 B=146</xapG:swatchName>
                           <xapG:mode>RGB</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:red>46</xapG:red>
                           <xapG:green>49</xapG:green>
                           <xapG:blue>146</xapG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=27 G=20 B=100</xapG:swatchName>
                           <xapG:mode>RGB</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:red>27</xapG:red>
                           <xapG:green>20</xapG:green>
                           <xapG:blue>100</xapG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=102 G=45 B=145</xapG:swatchName>
                           <xapG:mode>RGB</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:red>102</xapG:red>
                           <xapG:green>45</xapG:green>
                           <xapG:blue>145</xapG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=147 G=39 B=143</xapG:swatchName>
                           <xapG:mode>RGB</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:red>147</xapG:red>
                           <xapG:green>39</xapG:green>
                           <xapG:blue>143</xapG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=158 G=0 B=93</xapG:swatchName>
                           <xapG:mode>RGB</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:red>158</xapG:red>
                           <xapG:green>0</xapG:green>
                           <xapG:blue>93</xapG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=212 G=20 B=90</xapG:swatchName>
                           <xapG:mode>RGB</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:red>212</xapG:red>
                           <xapG:green>20</xapG:green>
                           <xapG:blue>90</xapG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=237 G=30 B=121</xapG:swatchName>
                           <xapG:mode>RGB</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:red>237</xapG:red>
                           <xapG:green>30</xapG:green>
                           <xapG:blue>121</xapG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=199 G=178 B=153</xapG:swatchName>
                           <xapG:mode>RGB</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:red>199</xapG:red>
                           <xapG:green>178</xapG:green>
                           <xapG:blue>153</xapG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=153 G=134 B=117</xapG:swatchName>
                           <xapG:mode>RGB</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:red>153</xapG:red>
                           <xapG:green>134</xapG:green>
                           <xapG:blue>117</xapG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=115 G=99 B=87</xapG:swatchName>
                           <xapG:mode>RGB</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:red>115</xapG:red>
                           <xapG:green>99</xapG:green>
                           <xapG:blue>87</xapG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=83 G=71 B=65</xapG:swatchName>
                           <xapG:mode>RGB</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:red>83</xapG:red>
                           <xapG:green>71</xapG:green>
                           <xapG:blue>65</xapG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=198 G=156 B=109</xapG:swatchName>
                           <xapG:mode>RGB</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:red>198</xapG:red>
                           <xapG:green>156</xapG:green>
                           <xapG:blue>109</xapG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=166 G=124 B=82</xapG:swatchName>
                           <xapG:mode>RGB</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:red>166</xapG:red>
                           <xapG:green>124</xapG:green>
                           <xapG:blue>82</xapG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=140 G=98 B=57</xapG:swatchName>
                           <xapG:mode>RGB</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:red>140</xapG:red>
                           <xapG:green>98</xapG:green>
                           <xapG:blue>57</xapG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=117 G=76 B=36</xapG:swatchName>
                           <xapG:mode>RGB</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:red>117</xapG:red>
                           <xapG:green>76</xapG:green>
                           <xapG:blue>36</xapG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=96 G=56 B=19</xapG:swatchName>
                           <xapG:mode>RGB</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:red>96</xapG:red>
                           <xapG:green>56</xapG:green>
                           <xapG:blue>19</xapG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=66 G=33 B=11</xapG:swatchName>
                           <xapG:mode>RGB</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:red>66</xapG:red>
                           <xapG:green>33</xapG:green>
                           <xapG:blue>11</xapG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=0 G=0 B=0</xapG:swatchName>
                           <xapG:mode>RGB</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:red>0</xapG:red>
                           <xapG:green>0</xapG:green>
                           <xapG:blue>0</xapG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=26 G=26 B=26</xapG:swatchName>
                           <xapG:mode>RGB</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:red>26</xapG:red>
                           <xapG:green>26</xapG:green>
                           <xapG:blue>26</xapG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=51 G=51 B=51</xapG:swatchName>
                           <xapG:mode>RGB</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:red>51</xapG:red>
                           <xapG:green>51</xapG:green>
                           <xapG:blue>51</xapG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=77 G=77 B=77</xapG:swatchName>
                           <xapG:mode>RGB</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:red>77</xapG:red>
                           <xapG:green>77</xapG:green>
                           <xapG:blue>77</xapG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=102 G=102 B=102</xapG:swatchName>
                           <xapG:mode>RGB</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:red>102</xapG:red>
                           <xapG:green>102</xapG:green>
                           <xapG:blue>102</xapG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=128 G=128 B=128</xapG:swatchName>
                           <xapG:mode>RGB</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:red>128</xapG:red>
                           <xapG:green>128</xapG:green>
                           <xapG:blue>128</xapG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=153 G=153 B=153</xapG:swatchName>
                           <xapG:mode>RGB</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:red>153</xapG:red>
                           <xapG:green>153</xapG:green>
                           <xapG:blue>153</xapG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=179 G=179 B=179</xapG:swatchName>
                           <xapG:mode>RGB</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:red>179</xapG:red>
                           <xapG:green>179</xapG:green>
                           <xapG:blue>179</xapG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=204 G=204 B=204</xapG:swatchName>
                           <xapG:mode>RGB</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:red>204</xapG:red>
                           <xapG:green>204</xapG:green>
                           <xapG:blue>204</xapG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=230 G=230 B=230</xapG:swatchName>
                           <xapG:mode>RGB</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:red>230</xapG:red>
                           <xapG:green>230</xapG:green>
                           <xapG:blue>230</xapG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=242 G=242 B=242</xapG:swatchName>
                           <xapG:mode>RGB</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:red>242</xapG:red>
                           <xapG:green>242</xapG:green>
                           <xapG:blue>242</xapG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=63 G=169 B=245</xapG:swatchName>
                           <xapG:mode>RGB</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:red>63</xapG:red>
                           <xapG:green>169</xapG:green>
                           <xapG:blue>245</xapG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=122 G=201 B=67</xapG:swatchName>
                           <xapG:mode>RGB</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:red>122</xapG:red>
                           <xapG:green>201</xapG:green>
                           <xapG:blue>67</xapG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=255 G=147 B=30</xapG:swatchName>
                           <xapG:mode>RGB</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:red>255</xapG:red>
                           <xapG:green>147</xapG:green>
                           <xapG:blue>30</xapG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=255 G=29 B=37</xapG:swatchName>
                           <xapG:mode>RGB</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:red>255</xapG:red>
                           <xapG:green>29</xapG:green>
                           <xapG:blue>37</xapG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=255 G=123 B=172</xapG:swatchName>
                           <xapG:mode>RGB</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:red>255</xapG:red>
                           <xapG:green>123</xapG:green>
                           <xapG:blue>172</xapG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=189 G=204 B=212</xapG:swatchName>
                           <xapG:mode>RGB</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:red>189</xapG:red>
                           <xapG:green>204</xapG:green>
                           <xapG:blue>212</xapG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xapG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xapTPg:SwatchGroups>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -568.777 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 568.777 li
565.921 568.777 li
565.921 0 li
cp
clp
[1 0 0 1 0 0 ]ct
false sop
/0 
[/DeviceCMYK] /CSA add_res
0.74902 0.678431 0.670588 0.901961 cmyk
%ADOBeginSubsetFont: MyriadPro-Regular Initial
%ADOt1write: (1.0.24)12 dict dup begin/FontType 1 def/FontName /MyriadPro-Regular def/FontInfo 7 dict dup begin/Notice (Copyright 2000, 2004 , 2005Adobe Systems Incorporated. All Rights Reserved. U.S. Patent D454,582.Myriad is a registered trademark of Adobe Systems Incorporated.) def/Weight (Regular) def/ItalicAngle 0 def/FSType 8 defend def/PaintType 0 def/FontMatrix [0.001 0 0 0.001 0 0] def/Encoding 256 array0 1 255 {1 index exch /.notdef put} fordup 32 /space putdup 35 /numbersign putdup 40 /parenleft putdup 41 /parenright putdup 46 /period putdup 48 /zero putdup 49 /one putdup 50 /two putdup 51 /three putdup 52 /four putdup 53 /five putdup 54 /six putdup 55 /seven putdup 56 /eight putdup 57 /nine putdup 58 /colon putdup 61 /equal putdup 65 /A putdup 66 /B putdup 67 /C putdup 68 /D putdup 69 /E putdup 70 /F putdup 71 /G putdup 73 /I putdup 77 /M putdup 80 /P putdup 81 /Q putdup 82 /R putdup 83 /S putdup 97 /a putdup 98 /b putdup 99 /c putdup 100 /d putdup 101 /e putdup 102 /f putdup 103 /g putdup 104 /h putdup 105 /i putdup 108 /l putdup 109 /m putdup 110 /n putdup 111 /o putdup 112 /p putdup 114 /r putdup 115 /s putdup 116 /t putdup 117 /u putdup 119 /w putdup 120 /x putdup 121 /y putdef/FontBBox {-157 -250 1126 952} defendsystemdict begindup /Private15 dict dup begin/|- {def} def/| {put} def/BlueValues [-11 -0 674 686 484 495 650 661 710 721 241 248] def/OtherBlues [438 444 260 266 -209 -198 -153 -147 -118 -112] def/FamilyBlues [-11 -0 674 686 484 495 650 661 710 721 241 248] def/FamilyOtherBlues [438 444 260 266 -209 -198 -153 -147 -118 -112] def/BlueScale 0.0604582 def/StdHW [67] def/StdVW [88] def/StemSnapH [67] def/StemSnapV [88 92] def/password 5839 def/MinFeature {16 16} def/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def/Subrs 5 arraydup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |dup 1 <1C60D8A8C9C3D06D9E> |dup 2 <1C60D8A8C9C202D79A> |dup 3 <1C60D8A849> |dup 4 <1C60D8A8CC3674F41144B13B77> |defputdup /CharStrings52 dict dup begin/space <1C60D8A8C9B896187A> |-/numbersign <1C60D8A8C9B7AA91799D50B1E93A6C3B9174711E8816C4DB65542AF39BF2B65161BFEAA0EC89FC7F7E2E723768ED3E2C60937CA620BF28BD5454F143F84FD74EF03F22DB756D8932BCCA78733CB3780BB5108806C9BEF17C74C93D8C85E2EE297FE807BC10F85DD810FFA96532235A2BC893AFF370D3270783031C55> |-/parenleft <1C60D8A8C9B84E0A47D7FED6098F93D599A35099EC3AF2C571CE3F6788F74B615B747D0C4950E0757D67CC4B6F86A79106B4F6AF8262CBC77CA155FEEB> |-/parenright <1C60D8A8C9B84E0A47D7FED609B36B98A489D0C883687FC8C4BD7FF8A57C9949E56F26DF53030280BC0E024A6F3F65DFBA65966BEA7D55AEB539EB378E> |-/period <1C60D8A8C9B89DB76243241956147685E9D04DE27F343A7EF0A25AE4387D3A3D08796B751439580940B3> |-/zero <1C60D8A8C9B7BA8F6239473D6D0952B7B5E4CF4EC97A525E022C9B4FC88EFB3F3BAD779956899C836BBD2FC8F5F391C07FB0B2C3B92A06F4A639C8E43BB10FDB531B59E83D98A9AB718650C50F38FC91524BAA33EC4FF9905D1A9C> |-/one <1C60D8A8C9B7BA8F425ECEA255C7F445C46B341EF282C71048D555A5D598E89496E7235E7E5E61E755DE1DD927709B69AF39C5FFA2F961FADB> |-/two <1C60D8A8C9B7BA8F694E6FA15FFB6B382A3EE4F45111A59DACA07CBB1A390893C6F8FDC203687F0DAB4019999EF2C31C2A8E2B5C18284C0FA933EB49F0D3AAC406EC417696890BDF0C7AE9B4C23364F4C649F84537FC> |-/three <1C60D8A8C9B7BA8F622456C4A5B0CA9B1BA284AF806928062A6B7B09FB3F0AFA0642F9B368E55CBEC860ACEDE00F619B43869FF145573EE19FF4FA261BF5938247732EEA9C997694C21F3826519E5860C319187A2BE7C4798BE40539D59DC5F8C368613E2EF361E84E1BE9A2B721FABB539C13C42CCE1FC716B22FBB381EE1131CEA0A76D50B43FAFEFB6984253871A40EF8DA774460484F> |-/four <1C60D8A8C9B7BA8F425ECEAC1E8FFE1F2E4A9E9BFE692DFC86F0914D1950B7E9330CFAE2AE0CE50BC8F9A81B99E65C7EB21064416D8548FA09CC9C6588AD65393A47B2EBDED97474D4C03B3488707365B1350A023199FD7F8930> |-/five <1C60D8A8C9B7BA8F622456C498CD57E93AA5454FC364F93ECEC83D3913500E43A82F14121F71966C4788C2353DA5A8BD5D8CFB5314B38B5B35B8DBF6E6B89948F26F660C16062F6C0ACEFA240305DC4EBB618986C70F22D9BDD5EF2FA4DDB132186E4364560E4CE6F0F405A0BF> |-/six <1C60D8A8C9B7BA8F6239473257AB127E7620F87AA168F1AECB0A4CE93CC295CEFD9192C2967A0DB83DCBD6BBAD18D6960D2101F671B2250912AB87B7A312023FCC73A003C62725D7FC83EAC1691C575B6AFB00517E51D41BA56D827F4B6519D801FB562E8DCF2E48521AD57F7C657FA7114264065AFF4ECE505E9E53891A0834E3BEC3F8A67BA2E6FDAC2B> |-/seven <1C60D8A8C9B7BA8F425ECEA3CCEB01D7DB356DB8BA3E0A3CCCF78FF75F8426D973EF7AFAF46E5376078B0FAF79A0> |-/eight <1C60D8A8C9B7BA8F623D810BCFAA50082B445FDEA9D15914896CD63903178E46F4BF3526EF43F34E1C43C5D4BB259333F75AC77A2693879487E31A38ED5E9191D3298AC0D970ED0241AD045F48A1E74AA2C4BE6A3C25B51C1786D2EF03AE3AE584898B7F8F45ACBB487C3211863FEFD3620CE23C9E829D36E0D56EABE748926E17DB146990D6096B0ACBA84EC3179FD7D7DE1B7A8A7122D5F1201E333EBC5E306860669F4548CE801F630F0B98FE145245E3B61A937D385E9FFEC75A53A58A9A8AA3119FE04926CCC605B3BEA563998B78AB28F03D9E0202CFE1CF72350765F386FE675098260C4913D2BB6EF02533C78A20421F3CD9AE5EB64E891D3358D805> |-/nine <1C60D8A8C9B7BA8F63126F4A1F6F4C8A6D297D6FEEB3E1EA33A18C32A839F51A85CD7DE6BC7BE0FC5E14C273DEF590B88E507C7A736EF2A90ACB7B8F9A190B2C51A24432873D103FAFC9B3793333CCD91BFB26AA2EDD101FDCA101247D729F8EA9F184BC3D2FD9C99ABDCAACABC5E792EC3D0438CFE5E32E78D626F92C945E9BEC772CDF50F38A2D46A5A571E853> |-/colon <1C60D8A8C9B89DB76243278294073DF1AD1585FFD55030C4E50D67540B1ECFC1F1F5478C19578DA797210E93A44936C6BCE591C4215DB3E07300888C53B2F7CF18D7AB81EA37F03252937464C1> |-/equal <1C60D8A8C9B7C7F3AB181AB0C0D4CCBD039E0B840C2FD0290F361F5FADEFB5C66FFFF03997F6A3C47D6E28F621A8DA> |-/A <1C60D8A8C9B7D7E88499B0B4629F6223175CD4E8063229FBCC9F00B932F15865B21E5E7BB034E6AF82883E05563056B289C39B2EA350305E00FB98125757C6B71D805070E392C2F5C67BAB2BDB26729DB33934727F6026751FF00CC19CB2FCE13DD0FF> |-/B <1C60D8A8C9B79D2DDA73CBA562CD775BD8708DCD8E9BDB9F0E0177DC043FB4F1A8C4CD26C616C718D265A8D6703A6D47E3F8A1B7B12560AD317F60E12155856CA9C25059711A75C068B65463BD75FDE8E1F35A7B7D78F6157390124E47B51535C1251DC03D986F9EA19C38C324328B0D51459F89228313041C819F71E91518EC12B2EB0DAC655C5FB2D629F03ADEC251827A94F19DF929CBEBC2821CF76B9A242BB0987762DC5FABDB70310B695148> |-/C <1C60D8A8C9B7F7BFE242671C9E817400744FCB1930C8B6D982C063970DBF718CAF90EB4032F79AFF3BD0DCAB8819135C4DEC30C4AD93CDA5718D518C03D131C0ECA750D3497F02641B81219A155BBD4DFC26D705BADFBB56DDF384391247F88C168EFD4243293DABFBBBE3A19FF63D> |-/D <1C60D8A8C9B64FADC8BE4593403BE5D574FAA91D2562B9CACA5724F68CBAF9B633416D067A5E8A48880CF83E5CAB8A03949B1116C187CA13B7F370A65C8E97DC500D70EFBCB5CC26BBB7D696E8150B2CA220CEDCF26D8B900AAD9145402949556A2673EAB0E2F57A487E41> |-/E <1C60D8A8C9B7AFA9BC4F00998616708AD319D68861297151CC95B7F0DB510272712476AFC1F2C943C567A57033FD1283345EB0696AEA3E2C01AFF042> |-/F <1C60D8A8C9B7544E530E823999841DA2F8EC66E8BCF65E1A153B8F64C14E4D433BE34E80499C2222430927749B4F85A3CF0F> |-/G <1C60D8A8C9B67B1690716FF04D0147EA5B51F2B65610FAF234C3B18546B21D3F6F92D294E6EC2B21999B1FED2DAC6EDC52B42B78221AD7265CB9722E26890713820AC3CF72AA36DA53BE7D477EB132919417E817793987155D1BFBFA170ADE07C15A513B743AB17B84741CBB0BB1F3B8087B3CA8CD5F587C0628B9BEC5ACA38B81696B9E718212159FC34AA218A60D02D05E5A350CADBB646ECC> |-/I <1C60D8A8C9B87DE005AD6F3C5D74814A181348838688F7DFF9F5475394DF85A0> |-/M <1C60D8A8C9B6D9EA19A14B847D0E8EB8BF4B471CD7A6A1199FBF0367BA3210A68B70701B9284BFB2267E01EDF19411682FDEA0A61E4E1B02AB19A085A090981D7B2D5305D7BA8D88FBD7AADFDB7642CCF5DD11DBF6878FEF2B11C57265F73526C5EBB1D5352B9863C29DD2C5087C1526E4892F6303AB66F633145B0858E108CA9CCC75D7B9048852C503CE8C743045EB51C68873A60D6BB517AD466CC06BF4> |-/P <1C60D8A8C9B7876E235FC614E63EC6DDBF5153E7285DD594B4A59D9CFED19B0A38B3CB0F4F897304E6BAD55EEDCCDEBF2A9B8B5B52460C00D9A306CF6EA51A21B19E9B3BA70F64BDE9BAA61A839E8FB51C8743E8A82D68D8F927748ABF13844E9C386BBD03D70DAF9D> |-/Q <1C60D8A8C9B624F9257693AA048B36DADFC211B8894F796128D947DC97BB232EEEE2D87811B136B7FD43DB54E02895055A474FB226767A2F9EF8B1776079235D0413F190C18B4D74B1BCD97C92BC3816E7BCE6B01C8F8B2AC741E8BBBAA48C0B3570C55E037BA742FE0AB1C7D3A8E55404B63DF38843FB06C738D4E6C7BA72D4CA80912D> |-/R <1C60D8A8C9B7818197CA8C10BDEF079227EB9AB9E6BB1BEBF94303949A9D57DC48BE0CBABA6B2F38795EB0B14AFB9419172734A7257099DC3131543D95EC80112D2F430DDFF753ABFCE1731E56B5A475FFECBCAD6983FFE444230AF84A1C69A43CAA071BDB68809E38DF7EA042893D9260BCBAB70D4727B474D6> |-/S <1C60D8A8C9B7AED8035FF9728E9C78ACC28F20CC915E5C8F246730235E0969B06AB4DFB6CD5E100F262B534390FC7CA7055C28ED1E42C84B636867D8A31D300B2F5F2294ED82992DF7233E5C523837B149A4D365755830345623E9A4E055720FE49A232DC2065A07388CBE9EB02B9DD8FF5931F0EA71B8534F17457D88BEF90224252D97A481A1378A56A9E08907> |-/a <1C60D8A8C9B75946039FC5B56ED6A5087B2F0B1630F4B839ECBCEEA44E703DC4106323B0FE7E2AB642908C4D63FEEE93FCF9AFDA709EC76B2A6B438866EA54711295464BD953D3EBDCF028F138C8DA98583AEFEA07E0E3D9318DCAA5235C81F8CAE77869F7E7DB4FE2A895A8751E9713E402E5F56B8D9F8A85A4E816A3F5736139BBC6E35318419585355BABA3365F9437068F54844360043E93A0587094DC5B241D2351AD29DD00EC> |-/b <1C60D8A8C9B7E2CE503F0CE2BC5702634999087F49AD7EC68AF6E0760DC307EA142776CFB148873830CAEB36AE950493D9F2EDD2FDA5A7A4D6C282750C8E40E669AF5CD1CA9E6E42E82091954CDD12078AEF15744C61E28006D0183E186D2F0A7A37935A5E3F3F87ED5DA87F58431826C86E3F76DCDA2973426486D4612CA2B5207C22CF15FC5AC58B8A498D4D400E19494D5A529E7B3708AA62887C27C034690D9798225445C694> |-/c <1C60D8A8C9B77BBBDD6F2DE36836EA750B0DCDA2C7596B2C0CA5D427D1A2992AF5BF4D94EE82845832F4DD4400321814ECD5D3CE66072F7E5E7C5430EC469D5F7161571A32A96A021C1AB03ECA050447FC0A> |-/d <1C60D8A8C9B7E7C1D822193538A56B13640F1C3EE80C415BBD7C96E2BF73396DB0D9C9230D7704B1D4903E1B0E823160B234020A503047A686661C34B5004CDCF7754772CF263A11D6B8FC7868BB12CD6A915ACD880C8B0638C394417FA37BE535ADC2EFE334704B66B55FC93ABE48255DC988A5DFABA294BF5BF2E02BE2314DCE6531FAA5DCB4D56DF6C62A6139D41B024DA04272B4B444C44FEBCD2F65888A63654699808BEDAA> |-/e <1C60D8A8C9B7A66F85F3DBE5AE1E76F6AE0C2DA4B5701EEA600446C4909FC3F4672ADE87F21B90EA46B653B923660515A1F0669DD61FD45BFFE5F30C06F25F4918DC3BDE9DA8749DE48AB2064D02996B1992D92D740E924FC0328428444D7F57E818435DFAAB95E4B5> |-/f <1C60D8A8C9B8469EE0EEFD5AEC6CA97A72064EDB5F8138E6D1529C05D71AD800DE9767801FDF375EF8CD5D17CF8177ABFE55C13157A524A3264793E34DF67E6CC595BF4246BA776AF32A10AFD87F61B0A56EEC2C24F2F2> |-/g <1C60D8A8C9B7ECD94DE1A189191AD5F29F5CDF5AA27A54E9CADF1B0D48AFADD31B7AC744861D428C2E9828C64107AC3C1F370E77D657249E67D01B32CA8DE47286033022B7FE2ADAB5880B8BA15ADAB506E67E787503255249A5C18EAB3949583AC294D57039D73A57012E800A5F1DE0015B558B76663CAEA443CC43AB1C7D0EA581DBA077AAE05CC1ABFBCB18987F40F7D67565C854506C79470414AF94EA3318EB3473654AC76A1F02E1D426F218B7D2A89976E745CD03CE15AD5DAD800440564510FEC150DF1BF6> |-/h <1C60D8A8C9B790A816BA887E1EEB5E8F3559B4B8B5AF3C1F8CE7A16D3E22CB112738E5F8A1CE5D2620C4575F3210C0FAB8897CBBEEEBEDB653A75B1382B689444B1091E64895264926A7E71A69D151CC5CB184DF1BCC2A12C3> |-/i <1C60D8A8C9B88055FF27B3934D040E8DA53B043AB8CFF68E8D519FEAB9D5A4874DC9B90E63751BC12355D9D8276E2A66CDDB9CE6DD75534C5A550BE990A2B15CF4B9FA0C60C03D9F761CF6CBFF51A513DE> |-/l <1C60D8A8C9B87EB6C12D27FEBAAD9108B57B5CEF2AA76DC2FD884A8623> |-/m <1C60D8A8C9B6B770778B71072D7C1E07589A410E5C64818087655066490C3ED2B909917C7BC0728B14D2333B4F2D4E6CDB7289552EC38E07C385447196A6FC80676BB9787067F8DE500C6FC7D1A575A85B3402140944D912F286F0EE619E6F139DB3EF4C05E3E0A0041D31E971FFC094FB694326327D937DFA882F7A9EEBB38D578A289643EC8BA4470A41469EE238EB0C3D041FDB99E682E3290582B0A809> |-/n <1C60D8A8C9B790A816BA887E1EEB5EA22251B57591287932F226429470C6F5104125FD46BD566113711AC75833C9FEE3F6D848EF41B3B29B720FE91D57099036ACB328FF5F27B548C47B09DAAAB22DF7203FD31E4DFCBB6F334EB2AEBC18B95062C1F81D8B> |-/o <1C60D8A8C9B7967683396363C51B2F1979461F3A00FDA36B3FB5488A82D64C89239EA1345F90503AC4C4937CA1D31AE0456BBFC2CD7E6DF92400B629A703DCCA1CE977B1CE09DA127A889A27E67B6982945251> |-/p <1C60D8A8C9B7E2CE2B5D9AEC775B38F2FC9D79EBC145C31F687483AFB9425A746B3BD7EE9055225E02124098D25B9CF96FA1051D1E04801504B9A2644D4EDA37278A874E72EE68CB4BF43DAEF5F603031626DA7EA34D8AEBCA2BE067F349B81CB3CF23097AE4AA47ED040466C2627C304F1CEA4C41EB090E70EFAF813E729DF2CD046B5547886AEE74294DF2AF6781AD20571E13346A26CAD62FB20DB9FC6337027CFBBA> |-/r <1C60D8A8C9B825FA276057E42F8B6B56BE61CF56C49E848F1F8C0DBB4CC355A060580D0A93A5AC675863E967C6888348BB6A0307CAE2C7E5A0C04CCE8153CABABF82A896EFF75F39B554C74CA1E2126AA0E73BE8B772EBBEE30A71972C630D7D24526AEEFC04035142C31FA6B3B108962236> |-/s <1C60D8A8C9B70FAD6F31E6985339BF1E83F7AE60D35F00D12D254421A910254A631180139D8657646BEFE6F4E230D67403BE5D54183419D174C6F3CC672FE0922A5983FC4713FC0C33086E01CB29AB5EA82B559EB0CB9E6675519A48B6C99CE7F0B78BC22FE4480BA1B895> |-/t <1C60D8A8C9B821B35E7D138AF8799F79BEF170B4854FD4064F6438DB12B96A336B1B646B9C985443CCD47885AEB163F96326A737220357369BBCF971367AB24D31D50A9A11CBCBD128D32F4EE4E3175171904BA0C5> |-/u <1C60D8A8C9B794D34CED683BC0F75FB25BE8ECA5D4F8D235649E81E6A62DD6E8467166462C4D4F8F41F04B52D63863D672C5433416D6DF2E3C32BCEEA94FF3BC9046373D2B57D2890F7578E8913662C9F65FD95A5790251E118509816817E1CD6A7C5BE0B48DC194> |-/w <1C60D8A8C9B615D1D39C3ADF830FB08A1A35A87DCFD157E58FABDD21BA80846DED508D58D627D5468CDEA878B4EBB2BC39F9E17357A3B538845D213A53BE481E0D6B92FA11EAB84DAA099CD1E52DEE6734C0A900F3A37F8B6CBD74174B2BAF5100CBE402299FC69ADC71D2D61D78D40F7491649EB6D9D0DC1C64B5ED89A2BADD> |-/x <1C60D8A8C9B74CDDCE74E25740A68E8EC93756D85AEDEDDC715C2E343856089CBF3B8126FA9B43C70F5E5E657C6611A04AC6BD64B94F2C3C0B74AAB216E5042ED4B3FF8375FDB59F9F31D0EAD1EF91AF3610AEC45036C8A054F273FA4FDC2EFDD7524FFC5A> |-/y <1C60D8A8C9B74451438745C9BFBA6ADBF77C623A74806E5154FF6A82283623EEB25A9349C2751A0E315AAE13B4796C423913828FA716B5ABEF10D096130AD2A2329DF2C9C65ECC79B77A9BB791B3C887ED4EDF5DA91A1776E19A8D0D9ECECC26B8983788DC541C6EA7A67E7E> |-/.notdef <1C60D8A8C9B7A73DC56ED86B010528A4AE924D9B6A4AEB6B57364CBBC1FC7743E3F5B16223C8BD8911534CBC6ED69BD6AA5A2C449B7A6EF268B5A0D64C6C74FC81FE7341B7ED82094E8390BB44FFD88AB4DB74763338FA8306E917B17192> |-end putenddup /FontName get exch definefont popend%ADOEndSubsetFont
/WDYEOO+MyriadPro-Regular /MyriadPro-Regular findfont ct_VMDictPut/WDYEOO+MyriadPro-Regular*1 [32{/.notdef}rp /space 2{/.notdef}rp /numbersign 4{/.notdef}rp /parenleft /parenright 4{/.notdef}rp /period /.notdef /zero /one /two /three /four /five /six /seven /eight /nine /colon 2{/.notdef}rp /equal 3{/.notdef}rp /A /B /C /D /E /F /G /.notdef /I 3{/.notdef}rp /M 2{/.notdef}rp /P /Q /R /S 13{/.notdef}rp /a /b /c /d /e /f /g /h /i 2{/.notdef}rp /l /m /n /o /p /.notdef /r /s /t /u /.notdef /w /x /y 134{/.notdef}rp]WDYEOO+MyriadPro-Regular nfWDYEOO+MyriadPro-Regular*1 [12 0 0 -12 0 0 ]msf1.64502 421.777 mo(Colors:)[6.82813 6.58789 2.83203 6.58789 3.92383 4.75195 0 ]xsh1.64502 436.177 mo(isQED = Pantone 1945C or #A60F38 \(from Solid in RGB Guide\))[2.80811 4.75195 8.26807 5.90381 7.9917 2.54395 7.15186 2.54395 6.07178 5.78418 6.6123 3.8999 6.58789 6.66016 6.01172 2.54395 6.15576 6.15576 6.15576 6.15576 6.95996 2.54395 6.58789 3.92383 2.54395 5.96387 7.34375 6.15576 6.15576 5.84375 6.15576 6.15576 2.54395 3.4082 3.50391 3.80371 6.58789 10.0078 2.54395 5.98828 6.58789 2.83203 2.80762 6.76855 2.54395 2.80762 6.66016 2.54395 6.49121 7.75195 6.50391 2.54492 7.75195 6.61133 2.80859 6.76758 6.01172 0 ]xsh1.64502 450.577 mo(www = Pantone 2728C or #3486CD)[8.97607 8.97559 8.83203 2.54395 7.15234 2.54395 6.07178 5.78418 6.6123 3.89941 6.58789 6.66016 6.01172 2.54395 6.15576 6.15576 6.15576 6.15576 6.95996 2.54395 6.58789 3.92383 2.54395 5.96387 6.15576 6.15576 6.15576 6.15576 6.95996 0 ]xsh1.64502 479.376 mo(Fonts:)[5.47217 6.58789 6.6123 3.97168 4.75195 0 ]xsh1.64502 493.777 mo(isQED = Myriad Pro Bold Italic)[2.80811 4.75195 8.26807 5.90381 7.9917 2.54395 7.15186 2.54395 9.73193 5.65186 3.97168 2.80811 5.78369 6.76807 2.54395 6.19189 3.80371 6.58789 2.54395 6.55225 6.58789 2.83203 6.76807 2.54395 3.06006 3.97168 5.78418 2.83203 2.80811 0 ]xsh1.64502 508.177 mo(Symposium = Myriad Pro Bold)[5.81982 5.65234 10.0078 6.82715 6.58789 4.75195 2.80859 6.61133 10.0078 2.54395 7.15234 2.54395 9.73145 5.65186 3.97217 2.80762 5.78418 6.76758 2.54395 6.19238 3.80371 6.58789 2.54395 6.55176 6.58789 2.83203 0 ]xsh1.64502 536.977 mo(Globe:)[7.75195 2.83203 6.58789 6.82764 6.01172 0 ]xsh1.64502 551.376 mo(original was in RGB with complex gradients)[6.58789 3.97168 2.80811 6.63623 2.80811 6.65967 5.78418 2.83203 2.54395 8.78418 5.78418 4.75195 2.54395 2.80811 6.65967 2.54395 6.4917 7.75195 6.50391 2.54395 8.83203 2.80811 3.97217 6.66016 2.54395 5.3042 6.58789 10.0078 6.82764 2.83203 5.97559 5.55615 2.54395 6.63623 3.86377 5.78418 6.76807 2.80811 6.01172 6.6123 3.97168 0 ]xsh1.64502 565.777 mo(Dreamstime.com #12098238 wireframe globes)[7.9917 3.80371 6.01172 5.78418 10.0078 4.75195 3.97168 2.80811 10.0078 5.86816 2.48389 5.30371 6.58789 10.0078 2.54395 5.96387 6.15576 6.15576 6.15576 6.15576 6.15576 6.15576 6.15576 6.15576 2.54395 8.83203 2.80811 3.8042 6.01172 3.50391 3.86377 5.78369 10.0078 6.01172 2.54395 6.70801 2.83203 6.58789 6.82764 6.01172 0 ]xsh289.269 322.611 mo
290.771 330.316 li
291.157 332.244 291.542 334.363 291.85 336.52 cv
291.927 336.52 li
292.312 334.363 292.852 332.205 293.314 330.355 cv
295.318 322.611 li
299.942 322.611 li
301.83 330.124 li
302.331 332.244 302.832 334.363 303.216 336.52 cv
303.294 336.52 li
303.563 334.363 303.949 332.244 304.373 330.085 cv
305.991 322.611 li
311.732 322.611 li
305.953 341.452 li
300.442 341.452 li
298.67 334.825 li
298.208 332.976 297.861 331.318 297.476 328.968 cv
297.399 328.968 li
297.052 331.318 296.666 333.091 296.166 334.825 cv
294.278 341.452 li
288.768 341.452 li
283.296 322.611 li
289.269 322.611 li
cp
0.760784 0.396078 0 0 cmyk
f
319.244 322.611 mo
320.748 330.316 li
321.132 332.244 321.517 334.363 321.826 336.52 cv
321.902 336.52 li
322.289 334.363 322.828 332.205 323.289 330.355 cv
325.293 322.611 li
329.917 322.611 li
331.804 330.124 li
332.306 332.244 332.807 334.363 333.192 336.52 cv
333.269 336.52 li
333.539 334.363 333.923 332.244 334.348 330.085 cv
335.966 322.611 li
341.707 322.611 li
335.928 341.452 li
330.417 341.452 li
328.646 334.825 li
328.183 332.976 327.835 331.318 327.451 328.968 cv
327.375 328.968 li
327.027 331.318 326.642 333.091 326.14 334.825 cv
324.253 341.452 li
318.743 341.452 li
313.271 322.611 li
319.244 322.611 li
cp
f
349.22 322.611 mo
350.724 330.316 li
351.109 332.244 351.494 334.363 351.802 336.52 cv
351.878 336.52 li
352.265 334.363 352.804 332.205 353.265 330.355 cv
355.269 322.611 li
359.894 322.611 li
361.781 330.124 li
362.283 332.244 362.783 334.363 363.169 336.52 cv
363.246 336.52 li
363.515 334.363 363.9 332.244 364.324 330.085 cv
365.943 322.611 li
371.681 322.611 li
365.904 341.452 li
360.394 341.452 li
358.623 334.825 li
358.16 332.976 357.812 331.318 357.427 328.968 cv
357.351 328.968 li
357.003 331.318 356.619 333.091 356.117 334.825 cv
354.23 341.452 li
348.718 341.452 li
343.248 322.611 li
349.22 322.611 li
cp
f
375.533 341.875 mo
373.568 341.875 372.142 340.373 372.142 338.332 cv
372.142 336.25 373.568 334.748 375.611 334.748 cv
377.652 334.748 379.039 336.211 379.039 338.332 cv
379.039 340.373 377.652 341.875 375.572 341.875 cv
375.533 341.875 li
cp
f
388.671 315.483 mo
388.671 341.452 li
382.777 341.452 li
382.777 315.483 li
388.671 315.483 li
cp
f
393.951 335.402 mo
395.529 336.211 397.958 337.021 400.46 337.021 cv
403.16 337.021 404.583 335.904 404.583 334.208 cv
404.583 332.589 403.351 331.666 400.23 330.547 cv
395.916 329.044 393.103 326.656 393.103 322.88 cv
393.103 318.45 396.8 315.059 402.927 315.059 cv
405.855 315.059 408.013 315.675 409.554 316.369 cv
408.246 321.108 li
407.205 320.607 405.355 319.875 402.812 319.875 cv
400.269 319.875 399.037 321.031 399.037 322.379 cv
399.037 324.037 400.5 324.767 403.851 326.039 cv
408.437 327.735 410.595 330.124 410.595 333.785 cv
410.595 338.138 407.244 341.875 400.115 341.875 cv
397.148 341.875 394.218 341.066 392.755 340.257 cv
393.951 335.402 li
cp
f
425.89 337.213 mo
429.822 337.213 432.132 333.476 432.132 328.39 cv
432.132 323.65 429.898 319.721 425.89 319.721 cv
421.884 319.721 419.572 323.65 419.572 328.505 cv
419.533 333.437 421.921 337.213 425.853 337.213 cv
425.89 337.213 li
cp
436.757 345.921 mo
433.058 344.842 429.974 343.725 426.507 342.261 cv
425.929 342.029 425.312 341.914 424.697 341.875 cv
418.839 341.49 413.369 337.174 413.369 328.699 cv
413.369 320.916 418.3 315.059 426.044 315.059 cv
433.982 315.059 438.335 321.07 438.335 328.16 cv
438.335 334.054 435.601 338.215 432.171 339.756 cv
432.171 339.912 li
434.175 340.489 436.41 340.951 438.453 341.375 cv
436.757 345.921 li
cp
f
457.64 330.47 mo
448.083 330.47 li
448.083 336.636 li
458.755 336.636 li
458.755 341.452 li
442.189 341.452 li
442.189 315.483 li
458.218 315.483 li
458.218 320.298 li
448.083 320.298 li
448.083 325.694 li
457.64 325.694 li
457.64 330.47 li
cp
f
468.66 337.021 mo
469.16 337.137 469.968 337.137 470.701 337.137 cv
476.019 337.174 479.486 334.247 479.486 328.043 cv
479.523 322.65 476.365 319.797 471.318 319.797 cv
470.007 319.797 469.16 319.914 468.66 320.029 cv
468.66 337.021 li
cp
462.763 315.83 mo
464.921 315.483 467.734 315.289 470.701 315.289 cv
475.632 315.289 478.83 316.176 481.335 318.064 cv
484.033 320.068 485.728 323.265 485.728 327.85 cv
485.728 332.822 483.917 336.25 481.412 338.369 cv
478.675 340.642 474.515 341.722 469.429 341.722 cv
466.386 341.722 464.228 341.529 462.763 341.335 cv
462.763 315.83 li
cp
f
490.812 341.875 mo
488.847 341.875 487.423 340.373 487.423 338.332 cv
487.423 336.25 488.847 334.748 490.89 334.748 cv
492.931 334.748 494.32 336.211 494.32 338.332 cv
494.32 340.373 492.931 341.875 490.851 341.875 cv
490.812 341.875 li
cp
f
512.005 340.99 mo
510.964 341.452 509 341.875 506.765 341.875 cv
500.677 341.875 496.785 338.138 496.785 332.205 cv
496.785 326.695 500.56 322.187 507.574 322.187 cv
509.115 322.187 510.81 322.457 512.042 322.919 cv
511.119 327.273 li
510.425 326.964 509.384 326.695 507.843 326.695 cv
504.761 326.695 502.757 328.89 502.796 331.974 cv
502.796 335.441 505.109 337.251 507.958 337.251 cv
509.345 337.251 510.425 337.021 511.312 336.636 cv
512.005 340.99 li
cp
f
519.787 332.011 mo
519.787 335.249 521.136 337.675 523.64 337.675 cv
525.914 337.675 527.376 335.402 527.376 332.011 cv
527.376 329.199 526.298 326.348 523.64 326.348 cv
520.828 326.348 519.787 329.238 519.787 332.011 cv
cp
533.427 331.819 mo
533.427 338.716 528.535 341.875 523.486 341.875 cv
517.976 341.875 513.738 338.253 513.738 332.166 cv
513.738 326.079 517.746 322.187 523.794 322.187 cv
529.574 322.187 533.427 326.155 533.427 331.819 cv
cp
f
537.048 328.621 mo
537.048 326.271 536.972 324.267 536.896 322.611 cv
541.828 322.611 li
542.095 325.153 li
542.212 325.153 li
543.021 323.958 544.677 322.187 547.916 322.187 cv
550.341 322.187 552.267 323.419 553.078 325.384 cv
553.154 325.384 li
553.849 324.382 554.695 323.65 555.582 323.111 cv
556.623 322.496 557.779 322.187 559.166 322.187 cv
562.787 322.187 565.523 324.73 565.523 330.355 cv
565.523 341.452 li
559.82 341.452 li
559.82 331.203 li
559.82 328.466 558.935 326.888 557.046 326.888 cv
555.697 326.888 554.734 327.812 554.349 328.929 cv
554.195 329.353 554.119 329.97 554.119 330.432 cv
554.119 341.452 li
548.416 341.452 li
548.416 330.894 li
548.416 328.505 547.568 326.888 545.718 326.888 cv
544.214 326.888 543.33 328.043 542.982 329.007 cv
542.789 329.469 542.751 330.007 542.751 330.47 cv
542.751 341.452 li
537.048 341.452 li
537.048 328.621 li
cp
f
13.6143 267.853 mo
33.7026 162.228 li
64.8071 162.228 li
44.7188 267.853 li
13.6143 267.853 li
cp
0.239216 1 0.745098 0.168627 cmyk
f
74.7422 239.989 mo
80.79 243.013 92.2378 247.333 102.391 247.333 cv
111.247 247.333 115.783 243.013 115.783 237.829 cv
115.783 232.644 112.327 228.972 102.606 224.22 cv
90.2944 218.172 80.1421 209.316 80.1421 196.14 cv
80.1421 174.324 99.3662 159.851 126.583 159.851 cv
138.895 159.851 148.615 162.228 153.799 165.251 cv
146.455 187.284 li
141.919 185.124 134.575 182.532 125.287 182.532 cv
117.079 182.532 111.462 186.204 111.462 191.82 cv
111.462 196.14 115.783 199.812 124.423 203.916 cv
135.871 209.748 147.967 218.172 147.967 232.861 cv
147.967 257.052 127.447 270.445 99.5825 270.229 cv
86.1899 269.796 73.4458 266.557 67.1821 261.805 cv
74.7422 239.989 li
cp
f
219.46 156.612 mo
207.796 168.492 201.315 192.036 201.315 209.1 cv
201.315 229.621 210.604 244.308 231.556 244.308 cv
241.06 244.308 249.269 240.42 255.749 233.941 cv
267.197 222.277 273.893 198.3 273.893 180.804 cv
273.893 164.387 267.413 145.811 244.732 145.811 cv
234.796 145.811 226.156 149.915 219.46 156.612 cv
cp
283.397 293.99 mo
263.524 288.158 242.14 279.733 228.964 273.469 cv
222.268 270.445 220.108 269.796 218.812 269.796 cv
190.516 267.637 168.267 245.605 168.267 209.1 cv
168.267 184.26 177.123 158.988 193.54 142.355 cv
207.796 127.667 227.668 119.891 248.188 119.891 cv
287.717 119.891 306.941 148.187 306.941 180.587 cv
306.941 204.997 298.085 231.349 282.317 247.117 cv
276.701 252.949 269.357 257.917 261.148 261.373 cv
261.148 261.805 li
270.005 264.181 282.101 267.205 294.414 269.365 cv
283.397 293.99 li
cp
f
408.889 206.076 mo
357.048 206.076 li
350.352 241.285 li
408.458 241.285 li
403.489 267.853 li
314.28 267.853 li
341.928 122.267 li
428.114 122.267 li
422.929 148.835 li
368.065 148.835 li
362.016 179.939 li
413.858 179.939 li
408.889 206.076 li
cp
f
462.024 242.796 mo
465.696 243.228 470.232 243.661 475.632 243.661 cv
492.48 243.661 507.384 237.613 516.889 226.596 cv
526.825 215.365 532.009 200.244 532.009 182.748 cv
532.009 159.851 519.265 146.243 493.56 146.243 cv
488.161 146.243 483.625 146.459 480.384 147.107 cv
462.024 242.796 li
cp
453.383 124.427 mo
465.696 122.267 479.52 121.187 493.56 121.187 cv
516.241 121.187 534.385 126.371 546.697 136.955 cv
558.362 146.675 565.706 161.147 565.921 182.532 cv
565.921 210.828 554.042 235.021 535.897 249.493 cv
519.048 262.884 497.665 268.933 466.127 268.933 cv
448.631 268.933 433.511 267.421 426.383 266.125 cv
453.383 124.427 li
cp
f
68.9546 0.152344 mo
30.9399 0.152344 0.12207 30.9707 0.12207 68.9844 cv
0.12207 107 30.9399 137.818 68.9546 137.818 cv
106.97 137.818 137.787 107 137.787 68.9844 cv
137.787 30.9707 106.97 0.152344 68.9546 0.152344 cv
68.9546 0.152344 li
cp
level3{
gsave
clp
[-6.00777e-06 -137.442 -137.442 6.00776e-06 69.1069 139.853 ]ct
/0 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~eWBh3eWBh3eWBh3eWBh3eWBh3e;jS0e;jS0e;jS0e;sY1e;sY1e;sY1e;sY1e;sY1e;sY1duFD.duFD.
duFD.duFD.duFD.duFD.duFD.duFD.duOJ/dZ"5,dZ"5,dZ"5,dZ"5,dZ"5,dZ"5,dZ"5,dZ"5,dZ"5,
d>S&*d>S&*d>S&*d>S&*d>S&*d>S&*d>S&*d>S&*d>S&*d>Iu)d#.l(d#.l(d#.l(d#.l(d#.l(d#.l(
d#.l(d#.l(d#%f'c\_]&c\_]&c\_]&c\_]&c\_]&c\_]&c\_]&c\_]&c\MQ$c\MQ$cA;N$cA;N$cA;N$
~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~cA;N$cA)B"c%c9!c%Z2ub_6#sb_#lqbCfiqbCT]ob(0Nmb'sBkaaa?kaaO3iaF+$ga*Rdda*Rdda*I^c
`cqI``HM:^`HM:^`-)+\_fPkY_K,\W_K,\W_/]MU^i08R^Ma)P^Ma)P^23iM]kdZK]P7EH]P@KI]4h6F
\nD'D\RkgA\7P^@[q#I=[UT:;[:'%8[:'%8ZsWk6ZX*V3Z<[G1Z!@>0YZq/.Y?Co+Y#t`)Y#t`)X]GK&
XB#<$X&K'!W`/ruW`&ltW)<TqVbd?nVGR<nV,%'kUeUmiUJ(XfUJ1^gU.YIdTLo1aT1Aq^T1K"_Sjrb\
~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds [0.113951 ]
/Encode [0 1 0 1 ]
>>
>>/Gradient add_res /0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-6.00777e-06 -137.442 -137.442 6.00776e-06 69.1069 139.853 ]ct
clp
/0 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[0.00392157 0 ][0.00392157 0 ][0.00392157 0 ][0.00392157 0 ]]
/Samples[
<~eC<!se'ldodaHRkdF$@gd*U.dcd0q`cHa_\cHXVYc-=MXc-4DUbfn;TbKJ)PbKJ)Ob0%lLb0%iJaiVZH
aiVWFaN2HDaN)?A`l?$<`l?$<`l?$;`Pog7`5KU4`5KR2_o'@._SO()_83t(^qdb$^V@Ou^:q=q^:q=p
]tM(k]Y(kg]=Y\e]=PSb]",A^\@B&Y\$riU[^NWP[C*EL['[3I['[0GZa6sCZE^[>Z*:I:YHP.5Y-+q1
Xf\_-Xf\_,XK8J'X/i8#WiE%tWMukqW2HPkVP^5fV5:#bUnjf]USFTYU8"BVU8"?TTV.pLT:VXGSt;OF
~>
<~OH>QaO,o?]NK&sWN/W^RMi3LNMMd:KM2@(GLkpkBLPCP<L5(G;KnY57KS4u1K7ef/K7\]+JUr?%It)rt
It)rsIXQWmI=-EhH?sm`H?sm`H$FRXGB\7SG'8%PG'8"NFEDSFF)l;AEcQ2@EH,r:Df9Q4DJj?0DJa6,
Ci!m&C2.KuC2.KtBkV0nBP1siAS#FaAS#C_@q0"X@UW\Q?smAM?sm>K?=$oC?!LW>>[1N=>?b97=]nm1
=BJ[-=BAR)<`W4#<)cdp;c?Un;c6Lk;Gg:f:f'tb:f'q`:/4PY9h\5S9MA,R91qlL8kMZG84Z9B84Z9A
~>
0 0 ]
>>
0 0 1 0 []true true []
/DeviceCMYK
GenStrips
} /Gradient add_res /0 /Gradient get_res exec grestore
}if
np
68.9546 3.0459 mo
32.8804 3.0459 3.63623 31.3184 3.63623 66.1943 cv
3.63623 101.07 32.8804 129.344 68.9546 129.344 cv
105.032 129.344 134.274 101.07 134.274 66.1943 cv
134.274 31.3184 105.032 3.0459 68.9546 3.0459 cv
68.9546 3.0459 li
cp
level3{
gsave
clp
[-8.11203e-06 -185.582 185.582 -8.11203e-06 68.9551 189.586 ]ct
/1 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~eWBh3eWBh3eWBh3eWBh3eWBh3eWBh3eWBh3eWBh3eWBh3eWBh3eWBh3eWBh3eWBh3eWBh3eWBh3eWBh3
eWBh3eWBh3eWBh3eWBh3eWBh3eWBh3eWBh3eWBh3eWBh3eWBh3eWBh3eWBh3eWBh3eWBh3eWBh3eWBh3
eWBh3eWBh3eWBh3eWBh3eWBh3eWBh3eWBh3eWBh3eWBh3eWBh3eWBh3eWBh3eWBh3eWBh3eWBh3eWBh3
eWBh3eWBh3eWBh3eWBh3eWBh3eWBh3eWBh3eWBh3eWBh3eWBh3eWBh3eWBh3eWBh3eWBh3eWBh3eWBh3
~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~eWBh3eWBh3eWBh3eWBh3eWBh3e;jS0e;jS0e;jS0e;sY1e;sY1e;sY1e;sY1e;sY1e;sY1duFD.duFD.
duFD.duFD.duFD.duFD.duFD.duFD.duOJ/dZ"5,dZ"5,dZ"5,dZ"5,dZ"5,dZ"5,dZ"5,dZ"5,dZ"5,
d>S&*d>S&*d>S&*d>S&*d>S&*d>S&*d>S&*d>S&*d>S&*d>Iu)d#.l(d#.l(d#.l(d#.l(d#.l(d#.l(
d#.l(d#.l(d#%f'c\_]&c\_]&c\_]&c\_]&c\_]&c\_]&c\_]&c\_]&c\MQ$c\MQ$cA;N$cA;N$cA;N$
~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~cA;N$cA;N$cA;N$cA;N$cA;N$cA;N$cA;N$cA;N$cA;N$cA;N$cA;N$cA;N$cA;N$cA;N$cA;N$cA;N$
cA;N$cA;N$cA;N$cA;N$cA;N$cA;N$cA;N$cA;N$cA;N$cA;N$cA;N$cA;N$cA;N$cA;N$cA;N$cA;N$
c\_]&c\_]&c\_]&c\_]&c\_]&c\_]&c\_]&c\_]&c\_]&c\_]&c\_]&c\_]&c\_]&c\_]&c\_]&c\_]&
c\_]&c\_]&c\_]&c\_]&c\_]&c\_]&c\_]&c\_]&c\_]&c\_]&c\_]&c\_]&c\_]&c\_]&c\_]&c\_]&
~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~Sjrb\Sjrb\Sjrb\T1K"_T1Aq^TLo1aTLo1aTLo1aU.YIdU.YIdUJ1^gUeUmiUeUmiV,%'kVG@0lVbd?n
Vc!KpW)<TqWD`csW`9$!W`/ruX&]3#XB5H&X]GK&Y#t`)Y?Lu,YZq/.YZq/.Z!@>0Z<mS3ZX<b5ZsWk6
[:0+9[UT:;[q,O>\7P^@\S(sC\nD'D]4h6F]P@KI]kdZK^2<oN^Ma)P^i08R_/]MU_K,\W_K,\W_fPkY
`-)+\`HM:^`cqI``d.Uba*RddaF+$gaF4*haaa?kb(0Nmb(BZobCfiqb_6#sb_H/uc%l?"cA;N$c\_]&
~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds [0.14164 0.222577 0.269436 ]
/Encode [0 1 0 1 0 1 1 0 ]
>>
>>/Gradient add_res /1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-8.11203e-06 -185.582 185.582 -8.11203e-06 68.9551 189.586 ]ct
clp
/1 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[0.00392157 0 ][0.00392157 0 ][0.00392157 0 ][0.00392157 0 ]]
/Samples[
<~eC<!teC<!teC<!teC<!teC<!teC<!teC<!teC<!teC<!teC;sre'c[mdF$@gd*U.ccd0n^cHXVYc-=MY
cHa_\cHa_\c-=MWbfn8RbKJ)Pb0%lKaiVZHaiMQEa2c6@a2c3>`l5p9`Pog7`5KR2_ns:-_83t(_83q&
^q[Y!^:q=p]tM(k]Xtef]"5J`\[f5[\@8rV[^NWP[C*BKZa7!DZEga?Z*:I:YHP.5YHP+3Y-"h.XK8M(
X/i8#Wi;tsWMukqW2QVlVl$>gVP^5eV59u`Una][USFTYU8"?TTqS-PT:_aJT:_aJT:VXGSt;OESXl=B
~>
<~OH>QcOH>QcOH>QcOH>QcOH>QcOH>QcOH>QcOH>QcOH>QcOH>K`O,]-YN/W^RMi3IMMM[1HLkpkCLkpkD
M2@(GM2@(GLkpkBLPLV=KnP,4K7ef.Jq8H&J:E&tI=6NkI!^0cH?jd\GB\7SG'8"MFE;MEEcQ2@EcQ/=
E,TZ5DJj?/Ci!m&CMIQtBP;'lB4kjhAn>ObA7K+Y@U`bR?XI/I?XI,G?!LW>>?b<9>?b97=]ed-='&I)
=&r=$<)cgr<)cdo;Gp@h;,L.d:JXb]:/4PZ:/+GW9he>U91qlL8kM]J8P)KF8P)KE84Z9B84Q0>7Rfj:
~>
0 0 ]
>>
0 0 1 0 []true true []
/DeviceCMYK
GenStrips
} /Gradient add_res /1 /Gradient get_res exec grestore
}if
np
68.9546 5.54785 mo
41.6763 5.54785 19.5625 22.2568 19.5625 42.8691 cv
19.5625 63.4814 41.6763 80.1914 68.9546 80.1914 cv
96.2358 80.1914 118.348 63.4814 118.348 42.8691 cv
118.348 22.2568 96.2358 5.54785 68.9546 5.54785 cv
68.9546 5.54785 li
cp
level3{
gsave
clp
[-3.23463e-06 -73.9996 73.9996 -3.23463e-06 68.9551 79.6582 ]ct
/2 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~\SD0F\SD0F\SD0F\SD0F\SD0F\SD0F\SD0F\SD0F\SD0F\SD0F\SD0F\SD0F\SD0F\SD0F\SD0F\SD0F
\SD0F\SD0F\SD0F\SD0F\SD0F\SD0F\SD0F\SD0F\SD0F\SD0F\SD0F\SD0F\SD0F\SD0F\SD0F\SD0F
\SD0F\SD0F\SD0F\SD0F\SD0F\SD0F\SD0F\SD0F\SD0F\SD0F\SD0F\SD0F\SD0F\SD0F\SD0F\SD0F
\SD0F\SD0F\SD0F\SD0F\SD0F\SD0F\SD0F\SD0F\SD0F\SD0F\SD0F\SD0F\SD0F\SD0F\SD0F\SD0F
~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~\SD0F\7kpC[q>[@[UfF=[:B7;Zsj"8ZXEh6Z!RJ2Y[%5/Y?V&-Y$(f*XB,B%X&T-"W`&ltWDW]rVG7*k
V+gpiUe:[fU.>7aTgf"^T1&_[Sj<>VS3R&SRm$fPRQCKLQoY3IQT"mEPr/OAP;<1=O>$Y7O"LD4N@Ou/
M^e],M'r?(LF3'%L*Qa!KHgHsJfk$nJ0+akIN8CgI2i4eH5Q\_Go-M]G81)XFqaoVEtJBPEXi'LE"2jJ
D[QOFC^U4CCBsn?Ba+P;B*A88AHVu5@KQT1?i^6-?2ss*>Q=a(=o\O&<r`4#<<*"!;ZHdt;#gRr:&k:p
~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds [0.0117146 ]
/Encode [0 1 0 1 ]
>>
>>/Gradient add_res /2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-3.23463e-06 -73.9996 73.9996 -3.23463e-06 68.9551 79.6582 ]ct
clp
/2 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[0.00392157 0 ][0.00392157 0 ][0.00392157 0 ][0.00392157 0 ]]
/Samples[
<~\@B&Y\@B&Y\$riU[^NWQ[C*EM['[3IZa7!EZEga?Yct@9YHP.5Y-+q1Xf\\+X/i;%WiE)!WMukrW2HMi
V5:#bUnjf^USFQXTqS0RTV.pLSt;OFSXl:@S"#n:R[T\6R@0G0Q^=&*QBmf$Pa%AqP*(lgO,o?_NfK*Y
N/W[QMMd7ILkphAL5(G;KnY25K7ec-JUr?%It)orI=6NlI!^3dH$O[\G^+FVG'8%PF`heIEcQ2@EH,r:
Df9Q4DJj<-CMR^$C2.HsBP;$kAnGUcA7T1Z@:<PO?XI,G?!U]?>?b97=]nj.<`W4#<)cdp;Gp@h:f'q_
~>
<~C2.KuC2.HsBP;$kAnGUcA7T4]@q/tW@:<SQ?sm>K?=$oC>[1N=>?b97=]ea,<`W4#<)cdp;GpCj;,C%`
9he>V9MA)P8kDQE7n6$<77BX66pj:,5X7S"5<h=q4Zkhg3]];_3B/uW2E!EM1c.!E1,1L;0/"q1/M&G'
.Olnt.4HYn-RU8h-7'r`,9nEX+sA*P+!2RH*Zc=B*#oq<)]BV4(`4),(Ddi%'GM5q',(uj&.f?^%1NaU
%1N^R$47+I$47(F#6tG;"U,&5"9\i1!s8W-!WiB'zzzzzzz!!!!!~>
0 0 ]
>>
0 0 1 0 []true true []
/DeviceCMYK
GenStrips
} /Gradient add_res /2 /Gradient get_res exec grestore
}if
np
53.3828 3.00244 mo
53.3472 3.00098 li
53.019 2.98633 52.6865 2.98047 52.3613 2.98047 cv
52.0913 2.98047 51.8228 2.98438 51.5542 2.99463 cv
51.4956 2.625 li
51.9751 2.48828 52.4385 2.35986 52.8765 2.24219 cv
53.6362 2.04102 li
53.7769 2.01025 li
53.8691 1.99023 li
53.9277 1.97949 li
54.0771 1.95068 li
55.8687 1.60742 57.0845 1.37451 58.0659 1.2002 cv
58.1382 1.54395 li
56.5176 1.94385 54.9292 2.43066 53.4146 2.99023 cv
53.3828 3.00244 li
53.3828 3.00244 li
cp
87.7246 5.95459 mo
87.416 5.88818 li
84.3618 5.21777 81.3052 4.87744 78.3315 4.87158 cv
78.2578 4.87158 li
78.2075 4.81885 li
76.7935 3.31445 75.3174 2.14014 73.8228 1.33057 cv
73.9214 0.950195 li
77.6909 1.06738 81.5483 1.5791 85.3911 2.4707 cv
85.4185 2.479 li
85.4448 2.49463 li
86.2939 3.04248 87.0234 4.10742 87.6123 5.66113 cv
87.7246 5.95459 li
87.7246 5.95459 li
cp
66.5835 6.8501 mo
66.5161 6.81494 li
63.5073 5.24658 60.4995 4.14209 57.5776 3.53516 cv
56.9624 3.40625 li
57.5576 3.20557 li
60.9727 2.05957 64.6646 1.33789 68.5288 1.05762 cv
68.561 1.05469 li
68.5942 1.06494 li
70.6997 1.73779 72.8101 2.97217 74.8696 4.7334 cv
75.1733 4.99512 li
74.7739 5.03223 li
71.897 5.30078 69.1665 5.90381 66.6538 6.82422 cv
66.5835 6.8501 li
66.5835 6.8501 li
cp
100.149 10.6782 mo
100.02 10.6064 li
97.1177 9.02832 94.0532 7.74658 90.9067 6.79541 cv
90.8062 6.76367 li
90.7876 6.66064 li
90.5942 5.54785 90.3145 4.65918 89.9536 4.02246 cv
89.7427 3.64697 li
90.1538 3.77637 li
94.0933 5.021 97.9399 6.65479 101.586 8.63232 cv
101.794 8.74463 li
101.623 8.90576 li
101.288 9.22266 100.821 9.77881 100.238 10.5586 cv
100.149 10.6782 li
100.149 10.6782 li
cp
57.2505 12.7744 mo
57.1587 12.7544 li
52.9482 11.833 48.8237 11.3652 44.8989 11.3652 cv
44.7642 11.3652 44.6323 11.3652 44.4995 11.3672 cv
44.0767 11.3706 li
44.3804 11.0752 li
45.8784 9.60596 47.5728 8.26221 49.4141 7.08057 cv
50.627 6.30322 51.9067 5.59082 53.2183 4.9624 cv
53.2637 4.93945 li
53.314 4.94629 li
56.6318 5.3584 60.0884 6.33301 63.5859 7.84473 cv
63.9185 7.98926 li
63.5962 8.15381 li
62.8247 8.54883 62.0728 8.97949 61.3638 9.43408 cv
59.8657 10.3955 58.5054 11.4966 57.3159 12.7075 cv
57.2505 12.7744 li
57.2505 12.7744 li
cp
30.0864 13.9688 mo
29.8784 13.6416 li
31.5972 12.0366 33.5093 10.5557 35.5591 9.23877 cv
36.7466 8.47754 37.9932 7.76074 39.2642 7.11182 cv
39.8096 6.85596 40.4165 6.57764 41.1245 6.25537 cv
43.4194 5.37939 45.9087 4.87158 48.5171 4.75195 cv
48.6157 5.13086 li
47.6733 5.62939 46.7524 6.16699 45.8765 6.72754 cv
43.6592 8.15088 41.646 9.78711 39.895 11.5898 cv
39.8516 11.6328 li
39.7915 11.6396 li
36.3306 12.0215 33.0669 12.8047 30.0864 13.9688 cv
30.0864 13.9688 li
cp
89.3115 16.7866 mo
89.0981 16.7412 li
87.8774 16.4849 86.6509 16.3472 85.4536 16.334 cv
85.3413 16.333 li
85.2974 16.2334 li
83.8032 12.8325 82.1626 9.89795 80.4199 7.50781 cv
80.2183 7.23096 li
80.5625 7.23682 li
83.0835 7.28027 85.6714 7.60059 88.2544 8.18945 cv
88.3604 8.21387 li
88.3838 8.31982 li
88.8721 10.5327 89.1807 13.3076 89.3047 16.5684 cv
89.3115 16.7866 li
89.3115 16.7866 li
cp
80.2251 17.1729 mo
80.1499 17.0972 li
76.9497 13.9111 73.645 11.2031 70.3271 9.04688 cv
70.0337 8.85547 li
70.3657 8.74219 li
72.5615 7.99316 74.938 7.51758 77.4321 7.32568 cv
77.5161 7.31982 li
77.5718 7.38184 li
79.7202 9.75879 81.7798 12.7158 83.6987 16.168 cv
83.8232 16.395 li
83.5664 16.4214 li
82.4224 16.541 81.3325 16.7817 80.3257 17.1367 cv
80.2251 17.1729 li
80.2251 17.1729 li
cp
94.7407 18.8232 mo
94.6021 18.749 li
93.4312 18.125 92.2065 17.6138 90.9619 17.2266 cv
90.8325 17.186 li
90.8428 17.0493 li
91.1045 13.957 91.1763 11.3057 91.0562 9.17334 cv
91.0425 8.92871 li
91.2773 9.00049 li
93.8804 9.80762 96.4253 10.8784 98.8423 12.1855 cv
99.0083 12.2754 li
98.9009 12.4326 li
97.7886 14.0469 96.4185 16.1523 94.8267 18.689 cv
94.7407 18.8232 li
94.7407 18.8232 li
cp
115.969 19.2627 mo
115.34 19.0967 li
114.515 18.8784 113.58 18.7666 112.561 18.7666 cv
112.093 18.7666 111.588 18.791 111.063 18.8389 cv
110.983 18.8467 li
110.926 18.7886 li
110.838 18.7007 110.753 18.6138 110.664 18.5254 cv
108.406 16.2715 105.875 14.2329 103.143 12.4639 cv
102.948 12.3379 li
103.127 12.1895 li
104.38 11.1553 105.048 10.916 105.387 10.8984 cv
105.442 10.895 li
105.488 10.9243 li
109.113 13.2275 112.48 15.8799 115.503 18.8096 cv
115.969 19.2627 li
115.969 19.2627 li
cp
76.1206 19.7378 mo
76.0103 19.6802 li
71.396 17.3086 66.7124 15.4072 62.0933 14.0308 cv
61.8149 13.9478 li
62.0229 13.7466 li
62.9819 12.8096 64.064 11.9526 65.2417 11.1973 cv
65.981 10.7222 66.771 10.2783 67.5884 9.88037 cv
67.667 9.84277 li
67.7456 9.88525 li
71.4243 11.9023 75.1147 14.4902 78.709 17.5791 cv
78.8984 17.7422 li
78.6772 17.8594 li
78.4019 18.0054 78.1284 18.165 77.8667 18.3325 cv
77.2632 18.7188 76.7046 19.1626 76.208 19.6514 cv
76.1206 19.7378 li
76.1206 19.7378 li
cp
99.498 22.3779 mo
99.4141 22.2939 li
98.4697 21.353 97.4165 20.4966 96.2842 19.75 cv
96.1245 19.645 li
96.2476 19.4976 li
98.2134 17.1362 99.9307 15.2236 101.353 13.8154 cv
101.451 13.7188 li
101.566 13.793 li
103.955 15.3306 106.166 17.0977 108.136 19.0488 cv
108.356 19.2656 li
108.054 19.3354 li
105.551 19.9106 102.708 20.917 99.605 22.3286 cv
99.498 22.3779 li
99.498 22.3779 li
cp
37.1089 23.085 mo
37.1929 22.811 li
38.1724 19.6309 39.6987 16.6812 41.7339 14.0459 cv
41.7808 13.9844 li
41.8579 13.9805 li
42.958 13.9126 44.0986 13.8774 45.2476 13.8774 cv
48.4829 13.8774 51.8579 14.1553 55.2749 14.7026 cv
55.5513 14.7466 li
55.3853 14.9707 li
53.9712 16.8862 52.9077 19.0156 52.2251 21.3013 cv
52.1899 21.4199 li
52.0659 21.4229 li
46.9722 21.5303 42.0337 22.0703 37.3911 23.0264 cv
37.1089 23.085 li
37.1089 23.085 li
cp
73.8667 23.4976 mo
73.7173 23.4658 li
68.3262 22.3535 62.8862 21.6836 57.5513 21.4746 cv
57.3276 21.4668 li
57.3931 21.2534 li
58.0103 19.2754 58.9634 17.4326 60.2231 15.7778 cv
60.29 15.689 li
60.3975 15.7139 li
65.2617 16.8555 70.1963 18.5161 75.0674 20.6538 cv
75.2583 20.7368 li
75.1382 20.9082 li
74.6079 21.6572 74.1953 22.4795 73.9136 23.3516 cv
73.8667 23.4976 li
73.8667 23.4976 li
cp
114.753 28.1147 mo
114.405 28.0376 li
110.917 27.2676 107.019 26.8682 102.816 26.8516 cv
102.71 26.8506 li
102.663 26.7568 li
102.16 25.729 101.514 24.7236 100.744 23.7695 cv
100.59 23.5786 li
100.825 23.501 li
104.284 22.3691 107.447 21.6646 110.228 21.4063 cv
110.317 21.3975 li
110.374 21.4648 li
112.071 23.4727 113.49 25.603 114.592 27.7939 cv
114.753 28.1147 li
114.753 28.1147 li
cp
20.1328 29.2661 mo
20.2583 28.8618 li
21.4995 24.8774 23.4287 21.187 25.9917 17.8916 cv
26.0151 17.8584 li
26.0522 17.8418 li
29.3564 16.27 33.0464 15.1489 37.0239 14.5107 cv
37.4346 14.4458 li
37.186 14.7798 li
35.1064 17.6006 33.5513 20.7422 32.5649 24.1182 cv
32.5386 24.209 li
32.4478 24.2344 li
28.1084 25.4658 24.0894 27.0918 20.5034 29.0615 cv
20.1328 29.2661 li
20.1328 29.2661 li
cp
56.8179 30.353 mo
56.791 30.1738 li
56.459 27.9829 56.4624 25.8271 56.7993 23.7671 cv
56.8228 23.6274 li
56.9653 23.6245 li
57.4634 23.6172 57.9619 23.6138 58.4614 23.6138 cv
63.3896 23.6138 68.4204 23.9844 73.4116 24.7173 cv
73.5796 24.7412 li
73.5542 24.9106 li
73.4253 25.834 73.4253 26.7954 73.5542 27.7676 cv
73.5796 27.9478 li
73.3984 27.9604 li
67.9155 28.353 62.397 29.1436 56.9956 30.3145 cv
56.8179 30.353 li
56.8179 30.353 li
cp
125.448 32.6367 mo
123.434 31.2144 121.043 30.0322 118.338 29.1235 cv
118.269 29.1001 li
118.239 29.0356 li
117.011 26.4619 115.403 23.96 113.46 21.5981 cv
113.213 21.3008 li
113.599 21.3203 li
115.854 21.437 117.75 21.9336 119.239 22.7988 cv
119.264 22.8145 li
119.282 22.835 li
121.867 25.8643 124.039 29.0742 125.747 32.3799 cv
125.448 32.6367 li
125.448 32.6367 li
cp
36.3423 36.8931 mo
36.3091 36.6768 li
35.7622 33.1538 35.7739 29.6924 36.3408 26.3921 cv
36.3594 26.2822 li
36.4668 26.2554 li
41.1968 25.0508 46.2271 24.2466 51.4165 23.8667 cv
51.6313 23.8516 li
51.5981 24.063 li
51.2207 26.4443 51.2271 28.9307 51.6216 31.4551 cv
51.645 31.606 li
51.4956 31.6455 li
46.3076 33.0352 41.2759 34.7715 36.5454 36.8066 cv
36.3423 36.8931 li
36.3423 36.8931 li
cp
91.3462 37.0825 mo
87.9443 37.0825 84.4302 35.6006 81.9448 33.1182 cv
79.7974 30.9746 78.7139 28.3672 78.9707 25.9634 cv
79.1714 24.0874 80.1499 22.5366 81.7969 21.479 cv
83.1323 20.6211 84.8159 20.1675 86.668 20.1675 cv
90.0698 20.1675 93.5835 21.6504 96.0693 24.1328 cv
98.2183 26.2778 99.3018 28.8848 99.0435 31.2866 cv
98.8423 33.1626 97.8643 34.7134 96.2173 35.771 cv
94.8804 36.6299 93.1958 37.0825 91.3462 37.0825 cv
91.3462 37.0825 li
cp
117.288 37.356 mo
117.009 37.1992 li
113.108 34.9893 108.752 33.0796 104.065 31.5225 cv
103.957 31.4863 li
103.948 31.373 li
103.882 30.4077 103.683 29.4214 103.357 28.4438 cv
103.277 28.1978 li
103.534 28.2202 li
107.957 28.585 112.049 29.3433 115.7 30.4736 cv
115.778 30.4976 li
115.807 30.5762 li
116.608 32.729 117.098 34.9023 117.263 37.0386 cv
117.288 37.356 li
117.288 37.356 li
cp
8.74023 38.5522 mo
8.40283 38.3643 li
9.47021 35.2534 10.936 32.2905 12.7607 29.5566 cv
12.7622 29.5527 12.7661 29.5498 12.7676 29.5454 cv
14.0073 27.8218 14.896 26.6436 15.7446 25.6064 cv
15.7397 25.6021 li
15.7417 25.5996 15.7432 25.5967 15.7466 25.5942 cv
15.7495 25.5977 li
17.3452 23.7476 19.1934 22.0806 21.2446 20.6367 cv
21.5181 20.9097 li
19.2759 24.1401 17.5815 27.7002 16.4829 31.4946 cv
16.4663 31.5527 li
16.4175 31.5874 li
13.4556 33.6406 10.8735 35.9839 8.74023 38.5522 cv
8.74023 38.5522 li
cp
60.2783 39.6362 mo
60.1958 39.4946 li
58.9233 37.3208 57.9668 35.0806 57.3564 32.8306 cv
57.311 32.667 li
57.4751 32.6216 li
62.8345 31.1387 68.2974 30.0195 73.7139 29.2954 cv
73.8599 29.2764 li
73.8999 29.418 li
74.1885 30.4414 74.6196 31.459 75.1782 32.4463 cv
75.2754 32.6157 li
75.0942 32.6885 li
70.2163 34.647 65.2817 36.9575 60.4243 39.5586 cv
60.2783 39.6362 li
60.2783 39.6362 li
cp
115.867 46.0122 mo
115.686 45.8374 li
111.984 42.2646 107.836 38.9199 103.356 35.895 cv
103.242 35.8179 li
103.293 35.6904 li
103.629 34.8594 103.844 33.9688 103.933 33.043 cv
103.955 32.8145 li
104.166 32.8994 li
108.906 34.8135 113.295 37.0786 117.216 39.6328 cv
117.299 39.6875 li
117.294 39.7856 li
117.175 41.8838 116.728 43.9014 115.961 45.7798 cv
115.867 46.0122 li
115.867 46.0122 li
cp
19.1548 46.647 mo
19.1113 46.3691 li
18.4185 41.9116 18.439 37.5337 19.1714 33.3555 cv
19.1851 33.2783 li
19.2505 33.2393 li
22.9038 31.0469 27.0215 29.1855 31.4917 27.708 cv
31.7568 27.6191 li
31.7134 27.8955 li
31.1445 31.4316 31.1616 35.1274 31.7671 38.8794 cv
31.7866 39.0024 li
31.6743 39.0586 li
27.1929 41.2817 23.0562 43.7803 19.3813 46.4805 cv
19.1548 46.647 li
19.1548 46.647 li
cp
130.15 47.647 mo
129.813 47.269 li
127.397 44.5615 124.474 42.0332 121.123 39.752 cv
121.053 39.7051 li
121.048 39.6206 li
120.915 37.1655 120.406 34.6626 119.537 32.1763 cv
119.41 31.8115 li
119.764 31.9639 li
122.882 33.3042 125.567 34.9658 127.748 36.9038 cv
127.78 36.9307 li
127.793 36.9702 li
129.07 40.3564 129.848 43.7783 130.111 47.1426 cv
130.15 47.647 li
130.15 47.647 li
cp
67.6401 48.3203 mo
67.5161 48.2119 li
66.855 47.6328 66.2178 47.0376 65.624 46.4438 cv
64.2168 45.0386 62.9399 43.5469 61.8335 42.0088 cv
61.7275 41.8618 li
61.8818 41.7656 li
66.5601 38.8574 71.2983 36.2246 75.9663 33.9419 cv
76.0957 33.8794 li
76.1792 33.9937 li
76.7183 34.7344 77.3354 35.4526 78.0132 36.1299 cv
78.2847 36.3984 78.5493 36.6484 78.8013 36.874 cv
78.9404 36.9976 li
78.8062 37.1245 li
75.1763 40.5488 71.4575 44.2754 67.7544 48.2012 cv
67.6401 48.3203 li
67.6401 48.3203 li
cp
41.7354 51.2998 mo
41.6411 51.1382 li
39.5884 47.6606 38.062 44.063 37.1025 40.4473 cv
37.0669 40.311 li
37.1929 40.2495 li
41.8896 37.9634 46.8813 35.9487 52.0288 34.2646 cv
52.2002 34.2085 li
52.2471 34.3818 li
52.9536 36.9888 54.0586 39.583 55.5317 42.0908 cv
55.6187 42.2388 li
55.4712 42.3242 li
50.7729 45.061 46.2036 48.0425 41.8882 51.189 cv
41.7354 51.2998 li
41.7354 51.2998 li
cp
110.448 53.0986 mo
110.345 52.9307 li
107.484 48.2534 104.225 43.7383 100.657 39.5132 cv
100.546 39.3838 li
100.677 39.2749 li
101.425 38.6387 102.059 37.9131 102.563 37.1187 cv
102.662 36.9614 li
102.809 37.0732 li
107.175 40.4053 111.203 44.0522 114.78 47.9116 cv
114.866 48.0054 li
114.8 48.1128 li
113.72 49.937 112.306 51.5718 110.599 52.9736 cv
110.448 53.0986 li
110.448 53.0986 li
cp
77.4961 54.6514 mo
77.3403 54.5791 li
74.752 53.376 72.2896 51.9136 70.022 50.2314 cv
69.8794 50.125 li
69.9917 49.9863 li
73.4067 45.7998 76.8071 41.8096 80.0962 38.126 cv
80.1968 38.0122 li
80.3228 38.103 li
81.3843 38.8799 82.5283 39.5615 83.7261 40.1274 cv
83.8735 40.1973 li
83.8081 40.3491 li
81.8203 44.9092 79.7222 49.668 77.5669 54.4922 cv
77.4961 54.6514 li
77.4961 54.6514 li
cp
101.536 57.4458 mo
101.492 57.2832 li
100.02 51.9526 98.23 46.7349 96.1733 41.7778 cv
96.0996 41.5996 li
96.2842 41.5479 li
97.3745 41.2412 98.3892 40.8076 99.2983 40.2603 cv
99.4312 40.1787 li
99.5229 40.3027 li
102.817 44.7388 105.812 49.4639 108.421 54.3496 cv
108.497 54.4912 li
108.363 54.5742 li
106.376 55.811 104.136 56.7622 101.7 57.4023 cv
101.536 57.4458 li
101.536 57.4458 li
cp
136.198 57.542 mo
135.326 55.2412 134.124 52.9814 132.624 50.8184 cv
132.595 50.7798 li
132.593 50.7319 li
132.431 47.4614 131.805 44.1191 130.733 40.7939 cv
131.072 40.6235 li
131.765 41.6191 132.36 42.6816 132.845 43.7871 cv
132.941 44.0269 133.035 44.2759 133.127 44.5249 cv
133.216 44.7622 li
133.533 45.6426 133.911 46.7344 134.378 48.1006 cv
135.066 50.252 135.651 52.4688 136.121 54.6846 cv
136.297 55.6035 136.445 56.5352 136.562 57.4531 cv
136.198 57.542 li
136.198 57.542 li
cp
88.3501 57.937 mo
88.1709 57.9082 li
85.5103 57.4844 82.8472 56.7744 80.2505 55.7988 cv
80.0942 55.7383 li
80.1514 55.5806 li
81.9814 50.5439 83.7075 45.6304 85.2788 40.9756 cv
85.3345 40.811 li
85.4985 40.8711 li
86.7031 41.3115 87.938 41.6382 89.1704 41.8413 cv
89.3164 41.8647 li
89.313 42.0122 li
89.1973 47.0386 88.8784 52.335 88.3672 57.7554 cv
88.3501 57.937 li
88.3501 57.937 li
cp
93.9141 58.3706 mo
93.0317 58.3706 92.1157 58.334 91.1919 58.2646 cv
91.0308 58.252 li
91.0356 58.0898 li
91.1831 52.6362 91.1196 47.3022 90.8428 42.2334 cv
90.8325 42.0425 li
91.0239 42.0552 li
91.4028 42.0791 91.7871 42.0908 92.1626 42.0908 cv
92.9712 42.0908 93.7715 42.0332 94.5396 41.9185 cv
94.6821 41.8975 li
94.7261 42.0322 li
96.4253 47.0762 97.8657 52.3794 99.0098 57.79 cv
99.0464 57.9658 li
98.8706 57.9932 li
97.2808 58.2432 95.6133 58.3706 93.9141 58.3706 cv
93.9141 58.3706 li
cp
6.82666 58.8862 mo
6.76416 58.4727 li
6.03125 53.6074 6.07178 48.8252 6.88037 44.2598 cv
6.88672 44.2231 li
6.91016 44.1914 li
9.11279 41.1821 11.8989 38.4126 15.188 35.959 cv
15.5234 35.709 li
15.458 36.1206 li
14.7871 40.3921 14.8237 44.8555 15.5654 49.3882 cv
15.582 49.4824 li
15.5083 49.5444 li
12.1821 52.3848 9.34424 55.4136 7.06982 58.5488 cv
6.82666 58.8862 li
6.82666 58.8862 li
cp
127.924 61.1494 mo
127.75 60.8555 li
125.468 57.0195 122.661 53.2539 119.401 49.666 cv
119.328 49.5854 li
119.371 49.4844 li
120.289 47.3462 120.842 45.0439 121.02 42.6436 cv
121.043 42.3276 li
121.293 42.521 li
124.737 45.1758 127.712 48.0742 130.134 51.1396 cv
130.175 51.189 li
130.171 51.2539 li
130.002 54.6162 129.29 57.8398 128.055 60.834 cv
127.924 61.1494 li
127.924 61.1494 li
cp
25.9282 64.7363 mo
25.8169 64.5488 li
23.2104 60.1362 21.2783 55.5742 20.0757 50.9863 cv
20.0474 50.8794 li
20.1343 50.8101 li
23.7876 47.9282 27.9058 45.2168 32.3755 42.7495 cv
32.5649 42.645 li
32.6226 42.855 li
33.6636 46.7305 35.311 50.5835 37.5181 54.3066 cv
37.5952 54.437 li
37.478 54.5283 li
33.3452 57.7803 29.5107 61.1631 26.084 64.582 cv
25.9282 64.7363 li
25.9282 64.7363 li
cp
53.1812 64.7637 mo
53.0488 64.6484 li
51.9956 63.7324 50.9673 62.7754 49.9946 61.8022 cv
47.7505 59.563 45.7241 57.1816 43.9731 54.7256 cv
43.8804 54.5962 li
44.0044 54.4951 li
48.1797 51.1074 52.5913 47.8579 57.1128 44.8389 cv
57.2505 44.7466 li
57.3481 44.8809 li
58.6274 46.6694 60.1055 48.4014 61.7407 50.0317 cv
62.4321 50.7227 63.1665 51.4097 63.9282 52.0742 cv
64.0571 52.1875 li
63.9399 52.3164 li
60.3286 56.2842 56.7456 60.4258 53.2925 64.6279 cv
53.1812 64.7637 li
53.1812 64.7637 li
cp
1.22705 70.918 mo
0.841309 70.8994 li
0.487793 67.9326 0.423828 64.9834 0.655762 62.1318 cv
0.638672 62.1309 li
0.640137 62.125 0.640137 62.1206 0.64209 62.1152 cv
0.656738 62.1162 li
0.690918 61.7871 li
0.675293 61.7852 li
0.687012 61.6748 0.69873 61.5645 0.710449 61.4531 cv
0.722168 61.4551 li
0.782715 60.8862 0.843262 60.3672 0.910645 59.8716 cv
0.901855 59.8711 li
0.903809 59.8652 0.903809 59.8604 0.905273 59.855 cv
0.912109 59.8555 li
1.20215 57.9678 li
1.18896 57.9658 li
1.19043 57.96 1.19043 57.9546 1.19189 57.9492 cv
1.20557 57.9502 li
1.36182 57.0566 1.56445 56.0488 1.87842 54.5791 cv
2.36963 52.729 3.05713 50.8936 3.92139 49.1284 cv
4.28857 49.2402 li
3.75342 53.4736 3.85596 57.875 4.59375 62.3262 cv
4.60205 62.3848 li
4.57178 62.4375 li
4.27344 62.9707 3.97998 63.5254 3.69971 64.085 cv
2.57568 66.353 1.74365 68.6504 1.22705 70.918 cv
1.22705 70.918 li
cp
119.48 72.1494 mo
119.4 71.9199 li
117.757 67.1914 115.652 62.437 113.143 57.7886 cv
113.075 57.6636 li
113.183 57.5771 li
115.159 55.9775 116.8 54.1094 118.064 52.0254 cv
118.188 51.8184 li
118.341 52.0059 li
121.508 55.8887 124.217 59.9346 126.394 64.0298 cv
126.439 64.1138 li
126.391 64.1943 li
124.682 67.1309 122.419 69.7554 119.669 71.9966 cv
119.48 72.1494 li
119.48 72.1494 li
cp
68.4937 74.5684 mo
68.3379 74.4966 li
64.188 72.585 60.2534 70.2466 56.6436 67.5488 cv
56.5093 67.4473 li
56.6079 67.3115 li
59.8188 62.9268 63.1401 58.5664 66.4795 54.3535 cv
66.5835 54.2246 li
66.7158 54.3242 li
69.3394 56.2778 72.1958 57.9736 75.2036 59.3652 cv
75.356 59.437 li
75.2871 59.5908 li
72.9741 64.7324 70.7134 69.7202 68.5645 74.4131 cv
68.4937 74.5684 li
68.4937 74.5684 li
cp
134.083 76.9355 mo
133.969 76.3838 li
133.209 72.6904 131.904 68.9238 130.089 65.1904 cv
130.056 65.1206 li
130.087 65.0469 li
131.44 61.9385 132.263 58.5889 132.537 55.0942 cv
132.577 54.5718 li
132.85 55.0176 li
134.734 58.084 136.079 61.2695 136.847 64.4878 cv
136.854 64.5107 li
136.852 64.5352 li
136.653 68.6982 135.792 72.6943 134.294 76.4131 cv
134.083 76.9355 li
134.083 76.9355 li
cp
105.632 78.8779 mo
105.612 78.6826 li
105.033 73.4063 104.119 68.0596 102.891 62.7886 cv
102.854 62.6294 li
103.015 62.5874 li
105.823 61.853 108.413 60.7559 110.714 59.3286 cv
110.877 59.2266 li
110.958 59.3994 li
113.239 64.25 115.123 69.1914 116.558 74.0879 cv
116.595 74.2114 li
116.486 74.2798 li
113.314 76.2822 109.728 77.8135 105.823 78.8291 cv
105.632 78.8779 li
105.632 78.8779 li
cp
14.2871 78.8926 mo
14.1479 78.6543 li
11.2798 73.7866 9.15625 68.751 7.83789 63.6885 cv
7.81787 63.6138 li
7.86279 63.5488 li
10.1108 60.2871 12.9536 57.0879 16.313 54.041 cv
16.52 53.853 li
16.5918 54.1216 li
17.8633 58.8398 19.876 63.5332 22.5732 68.0674 cv
22.6372 68.1758 li
22.5532 68.2695 li
19.3716 71.7627 16.6401 75.2588 14.4365 78.6606 cv
14.2871 78.8926 li
14.2871 78.8926 li
cp
85.3496 79.6406 mo
85.1836 79.6152 li
80.9214 78.9531 76.6577 77.8203 72.5132 76.2466 cv
72.3521 76.187 li
72.4136 76.0254 li
74.3896 71.0059 76.3442 65.8916 78.2241 60.8252 cv
78.2847 60.666 li
78.4438 60.7266 li
81.4478 61.8594 84.5396 62.6807 87.6323 63.167 cv
87.7935 63.1924 li
87.7749 63.3535 li
87.1479 68.7222 86.3423 74.147 85.3794 79.4775 cv
85.3496 79.6406 li
85.3496 79.6406 li
cp
93.8618 80.2979 mo
92.4146 80.2979 90.9448 80.2383 89.4995 80.123 cv
89.3218 80.1094 li
89.3433 79.9316 li
90.0259 74.5684 90.5171 69.1152 90.8062 63.7227 cv
90.8159 63.5488 li
90.9888 63.561 li
92.0425 63.6436 93.0972 63.6855 94.1255 63.6855 cv
96.0894 63.6855 98.0288 63.5366 99.8853 63.2402 cv
100.051 63.2139 li
100.079 63.3799 li
101 68.7432 101.625 74.165 101.94 79.4966 cv
101.949 79.6494 li
101.797 79.6738 li
99.2446 80.0879 96.5742 80.2979 93.8618 80.2979 cv
93.8618 80.2979 li
cp
40.2964 81.6309 mo
40.1553 81.5068 li
38.8169 80.3462 37.5132 79.1309 36.2769 77.8955 cv
33.4341 75.0586 30.8696 72.04 28.6553 68.9214 cv
28.5747 68.8076 li
28.6685 68.7051 li
32.0063 65.1294 35.7339 61.5498 39.7427 58.0703 cv
39.8833 57.9482 li
39.9941 58.1006 li
41.8647 60.7227 44.0317 63.2695 46.4351 65.6714 cv
47.5005 66.7324 48.6157 67.7715 49.7495 68.7554 cv
49.8721 68.8638 li
49.7715 68.9902 li
46.4282 73.209 43.2769 77.4092 40.4048 81.4766 cv
40.2964 81.6309 li
40.2964 81.6309 li
cp
134.865 88.2715 mo
134.507 88.1958 li
134.794 85.9219 134.844 83.563 134.655 81.1807 cv
134.652 81.1382 li
134.67 81.0986 li
135.817 78.4824 136.661 75.7031 137.178 72.8374 cv
137.506 72.8691 li
137.481 73.3135 137.455 73.7559 137.421 74.1982 cv
137.268 75.7676 137.151 76.9395 137.039 77.9258 cv
136.916 78.8672 136.769 79.8359 136.601 80.7998 cv
136.356 82.0967 136.025 83.6172 135.62 85.4707 cv
135.43 86.2432 135.247 86.9395 135.063 87.5942 cv
134.994 87.8291 134.927 88.0557 134.865 88.2715 cv
134.865 88.2715 li
cp
123.445 90.8555 mo
123.421 90.5298 li
123.091 86.1582 122.266 81.5859 120.969 76.9375 cv
120.939 76.8286 li
121.028 76.7588 li
123.972 74.4023 126.411 71.6406 128.278 68.5498 cv
128.449 68.2666 li
128.582 68.5703 li
130.339 72.6455 131.552 76.7168 132.181 80.6738 cv
132.191 80.7344 li
132.161 80.7871 li
130.01 84.502 127.164 87.8184 123.699 90.6484 cv
123.445 90.8555 li
123.445 90.8555 li
cp
8.34277 92.2256 mo
8.12793 91.8574 li
5.37549 87.1348 3.33545 82.25 2.06592 77.3389 cv
2.05615 77.3047 li
2.06104 77.2695 li
2.49365 74.4111 3.45459 71.4668 4.91748 68.5225 cv
5.08057 68.1943 5.25146 67.8618 5.43115 67.5264 cv
5.63232 67.1484 li
5.74609 67.5615 li
7.11963 72.5684 9.27002 77.543 12.1367 82.3496 cv
12.1855 82.4326 li
12.1401 82.519 li
11.8584 83.0371 11.5796 83.5752 11.3101 84.1152 cv
9.97607 86.8047 9.01221 89.3926 8.43994 91.811 cv
8.34277 92.2256 li
8.34277 92.2256 li
cp
59.5186 93.9258 mo
59.3657 93.855 li
54.104 91.4385 49.1138 88.4727 44.5327 85.041 cv
44.4058 84.9458 li
44.4927 84.811 li
47.2319 80.6006 50.2026 76.2451 53.3188 71.8652 cv
53.4214 71.7236 li
53.5605 71.8291 li
57.4419 74.7305 61.6724 77.2446 66.1338 79.2979 cv
66.2896 79.3682 li
66.2178 79.5225 li
64.002 84.334 61.7729 89.1294 59.5903 93.7734 cv
59.5186 93.9258 li
59.5186 93.9258 li
cp
30.1333 97.5298 mo
29.9736 97.3916 li
28.4995 96.1104 27.063 94.7725 25.7065 93.416 cv
22.5513 90.2695 19.7114 86.9219 17.2642 83.4658 cv
17.1987 83.375 li
17.2593 83.2783 li
19.4302 79.8066 22.1138 76.1958 25.2368 72.5439 cv
25.3774 72.3794 li
25.5054 72.5547 li
27.7798 75.7432 30.4097 78.835 33.3247 81.7466 cv
34.6499 83.0654 36.0239 84.3462 37.4126 85.5469 cv
37.5269 85.645 li
37.4429 85.7715 li
34.7139 89.8223 32.2886 93.7178 30.2354 97.3477 cv
30.1333 97.5298 li
30.1333 97.5298 li
cp
106.046 99.3135 mo
106.065 99.0752 li
106.417 94.3462 106.423 89.3223 106.088 84.1426 cv
106.078 84.001 li
106.215 83.9658 li
110.392 82.895 114.24 81.2715 117.655 79.1426 cv
117.858 79.0156 li
117.91 79.248 li
119.027 84.0874 119.683 88.8223 119.859 93.3242 cv
119.863 93.4214 li
119.78 93.4746 li
115.768 96.0244 111.226 97.9688 106.278 99.2539 cv
106.046 99.3135 li
106.046 99.3135 li
cp
7.69385 99.9531 mo
7.49072 99.5698 li
7.24756 99.1074 li
7.09814 98.8042 li
6.99268 98.582 6.89355 98.373 6.79932 98.1714 cv
6.74072 98.0479 li
6.73926 98.0498 li
6.73242 98.0342 li
6.71387 97.9932 li
6.7124 97.9883 6.70898 97.9834 6.70752 97.979 cv
6.70898 97.9775 li
6.01465 96.3535 5.35693 94.8047 4.91455 93.7266 cv
4.52344 92.6563 4.09229 91.4043 3.26709 88.9946 cv
3.25049 88.9414 li
2.49365 86.2432 li
2.49219 86.2432 li
2.45166 86.0898 li
2.40967 85.9268 li
2.19531 85.0566 2.03564 84.1606 1.93213 83.2637 cv
2.29443 83.1885 li
3.61084 87.3027 5.47803 91.3896 7.83936 95.3418 cv
7.86768 95.3887 li
7.86279 95.4414 li
7.74561 96.979 7.81104 98.4531 8.0542 99.8271 cv
7.69385 99.9531 li
7.69385 99.9531 li
cp
80.6694 100.275 mo
80.5205 100.253 li
75.1147 99.4219 69.7046 97.9858 64.4448 95.9844 cv
64.2788 95.9219 li
64.3472 95.7598 li
66.3218 91.1206 68.3379 86.2378 70.3389 81.249 cv
70.4009 81.0942 li
70.5571 81.1538 li
75.0171 82.8477 79.6011 84.0664 84.1821 84.7764 cv
84.3564 84.8047 li
84.3213 84.9795 li
83.2563 90.2202 82.0415 95.3174 80.7114 100.13 cv
80.6694 100.275 li
80.6694 100.275 li
cp
91.2939 101.092 mo
89.4775 101.092 87.6187 101.018 85.769 100.869 cv
85.5728 100.853 li
85.6177 100.661 li
86.7632 95.8496 87.7563 90.7378 88.5669 85.4614 cv
88.5903 85.3047 li
88.7495 85.3174 li
90.3447 85.4458 91.9414 85.5107 93.4966 85.5107 cv
96.3813 85.5107 99.228 85.2886 101.958 84.8516 cv
102.151 84.8184 li
102.155 85.0156 li
102.254 90.2627 102.038 95.3516 101.511 100.139 cv
101.498 100.268 li
101.37 100.289 li
98.1343 100.822 94.7427 101.092 91.2939 101.092 cv
91.2939 101.092 li
cp
121.872 107.57 mo
122.018 107.045 li
123.014 103.461 123.542 99.5386 123.586 95.3906 cv
123.586 95.3086 li
123.65 95.2578 li
127.167 92.459 130.094 89.1807 132.354 85.5156 cv
132.649 85.0386 li
132.669 85.5986 li
132.81 89.4014 132.377 93.063 131.382 96.479 cv
131.373 96.5156 li
131.366 96.5195 li
129.051 100.54 125.999 104.141 122.292 107.222 cv
121.872 107.57 li
121.872 107.57 li
cp
23.9722 110.664 mo
23.7808 110.498 li
22.3604 109.261 20.9712 107.967 19.6563 106.652 cv
16.5332 103.535 13.7271 100.225 11.3149 96.811 cv
11.271 96.751 li
11.2881 96.6758 li
11.8701 94.1426 12.8984 91.3779 14.3462 88.4619 cv
14.5557 88.0371 14.7769 87.6094 15.0015 87.1836 cv
15.1294 86.9414 li
15.2905 87.166 li
17.7153 90.5596 20.5234 93.855 23.6333 96.959 cv
25.0508 98.373 26.5405 99.7578 28.0615 101.074 cv
28.1621 101.161 li
28.1001 101.281 li
27.8335 101.801 27.5698 102.316 27.3169 102.825 cv
25.936 105.609 24.8374 108.168 24.0542 110.426 cv
23.9722 110.664 li
23.9722 110.664 li
cp
51.3228 111.079 mo
51.1714 111.01 li
45.3384 108.334 39.8164 105.052 34.7544 101.253 cv
34.6367 101.164 li
34.7075 101.034 li
36.7217 97.3564 39.0649 93.3828 41.6733 89.2236 cv
41.772 89.0664 li
41.9194 89.1782 li
46.6567 92.7246 51.8193 95.791 57.2671 98.292 cv
57.4253 98.3652 li
57.3496 98.5195 li
55.2476 102.958 53.2451 107.134 51.397 110.93 cv
51.3228 111.079 li
51.3228 111.079 li
cp
102.609 116.992 mo
102.71 116.692 li
103.99 112.9 104.944 108.663 105.55 104.094 cv
105.567 103.98 li
105.675 103.951 li
110.765 102.656 115.448 100.691 119.594 98.1138 cv
119.87 97.9424 li
119.854 98.2637 li
119.669 102.641 118.989 106.734 117.83 110.432 cv
117.811 110.491 li
117.759 110.525 li
113.348 113.342 108.353 115.491 102.915 116.913 cv
102.609 116.992 li
102.609 116.992 li
cp
117.61 117.434 mo
117.333 117.207 li
118.18 115.988 118.955 114.674 119.638 113.301 cv
119.915 112.739 120.183 112.161 120.431 111.581 cv
120.448 111.541 li
120.483 111.514 li
122.757 109.712 124.823 107.705 126.621 105.548 cv
126.917 105.758 li
126.798 105.956 126.674 106.155 126.552 106.355 cv
126.421 106.57 li
125.955 107.28 125.519 107.922 125.092 108.526 cv
124.321 109.574 123.712 110.4 123.184 111.101 cv
122.203 112.362 121.158 113.612 120.081 114.814 cv
119.539 115.405 118.903 116.084 118.018 117.015 cv
117.814 117.222 li
117.746 117.292 117.679 117.364 117.61 117.434 cv
117.61 117.434 li
cp
74.6362 118.072 mo
74.5039 118.051 li
68.519 117.136 62.5308 115.547 56.7075 113.331 cv
56.5361 113.266 li
56.6147 113.099 li
58.3911 109.332 60.2954 105.117 62.2744 100.576 cv
62.3398 100.427 li
62.4907 100.484 li
67.9302 102.558 73.5259 104.047 79.1196 104.911 cv
79.3145 104.943 li
79.2559 105.131 li
77.8247 109.795 76.2886 114.107 74.687 117.948 cv
74.6362 118.072 li
74.6362 118.072 li
cp
22.6821 118.684 mo
22.3589 118.398 li
21.248 117.417 20.1577 116.394 19.1162 115.355 cv
16.3604 112.605 13.8813 109.675 11.751 106.648 cv
11.729 106.621 li
11.7329 106.617 li
10.9375 104.805 10.6069 102.68 10.7495 100.305 cv
10.7778 99.8286 li
11.0566 100.215 li
13.3325 103.359 15.9443 106.409 18.8228 109.28 cv
20.1948 110.65 21.6357 111.988 23.103 113.254 cv
23.1802 113.323 li
23.1567 113.426 li
22.6924 115.32 22.5181 116.944 22.6401 118.254 cv
22.6821 118.684 li
22.6821 118.684 li
cp
86.3022 118.965 mo
84.313 118.965 82.2749 118.883 80.2437 118.722 cv
80.0142 118.703 li
80.0991 118.488 li
81.6309 114.67 83.0566 110.359 84.3364 105.677 cv
84.3735 105.54 li
84.5161 105.552 li
86.4834 105.714 88.4546 105.795 90.3745 105.795 cv
93.8721 105.795 97.3228 105.525 100.63 104.995 cv
100.863 104.958 li
100.825 105.19 li
100.063 109.844 98.9849 114.139 97.6177 117.956 cv
97.584 118.05 li
97.4849 118.066 li
93.8906 118.663 90.1265 118.965 86.3022 118.965 cv
86.3022 118.965 li
cp
44.8481 124.021 mo
44.6992 123.953 li
38.9541 121.318 33.5132 118.083 28.5259 114.336 cv
28.4238 114.26 li
28.4692 114.14 li
29.313 111.893 30.4634 109.294 31.8911 106.419 cv
32.124 105.95 32.3623 105.477 32.6069 104.997 cv
32.6978 104.816 li
32.8604 104.938 li
37.9458 108.747 43.4917 112.039 49.3403 114.724 cv
49.4995 114.797 li
49.4224 114.953 li
49.1777 115.453 48.9326 115.948 48.6929 116.432 cv
47.2925 119.253 46.0239 121.758 44.9224 123.879 cv
44.8481 124.021 li
44.8481 124.021 li
cp
95.5347 129.771 mo
95.8931 129.35 li
97.5269 127.441 99.0083 125.154 100.298 122.555 cv
100.568 122.012 100.83 121.456 101.073 120.902 cv
101.108 120.827 li
101.189 120.807 li
106.533 119.455 111.46 117.414 115.838 114.745 cv
116.32 114.45 li
116.082 114.963 li
115.961 115.219 115.84 115.475 115.716 115.725 cv
114.247 118.682 112.417 121.267 110.273 123.407 cv
110.258 123.42 li
110.247 123.429 li
106.028 126.134 101.259 128.219 96.0679 129.626 cv
95.5347 129.771 li
95.5347 129.771 li
cp
41.1968 130.579 mo
41.063 130.517 li
36.0073 128.198 31.2183 125.348 26.8306 122.044 cv
26.772 122 li
26.7651 121.925 li
26.6528 120.738 26.894 119.108 27.4829 117.079 cv
27.5532 116.841 li
27.7495 116.988 li
32.6001 120.612 37.8804 123.743 43.4409 126.297 cv
43.6055 126.373 li
43.52 126.532 li
42.5737 128.29 41.8188 129.609 41.2773 130.455 cv
41.1968 130.579 li
41.1968 130.579 li
cp
67.7964 130.9 mo
67.6938 130.885 li
61.8013 129.988 55.9072 128.428 50.1753 126.248 cv
49.9912 126.178 li
50.0864 126.006 li
51.2339 123.958 52.5273 121.484 53.9331 118.654 cv
54.1812 118.157 54.4277 117.652 54.6792 117.138 cv
54.748 116.998 li
54.894 117.055 li
60.7358 119.282 66.7397 120.883 72.7393 121.813 cv
72.9644 121.848 li
72.8647 122.055 li
72.6401 122.528 72.4175 122.99 72.1958 123.437 cv
70.7603 126.331 69.3008 128.813 67.8579 130.815 cv
67.7964 130.9 li
67.7964 130.9 li
cp
79.2437 131.774 mo
77.3354 131.774 75.3862 131.697 73.4507 131.547 cv
73.1436 131.521 li
73.3267 131.275 li
74.772 129.322 76.1978 126.938 77.5649 124.184 cv
77.8013 123.711 78.0562 123.177 78.3267 122.598 cv
78.3765 122.489 li
78.4956 122.499 li
80.6279 122.676 82.7646 122.766 84.8462 122.766 cv
88.562 122.766 92.2217 122.482 95.7256 121.927 cv
96.0396 121.877 li
95.9067 122.166 li
95.7188 122.575 95.5244 122.98 95.3281 123.378 cv
93.8755 126.306 92.2231 128.812 90.415 130.824 cv
90.3745 130.869 li
90.3159 130.878 li
86.7603 131.474 83.0347 131.774 79.2437 131.774 cv
79.2437 131.774 li
cp
89.5649 134.497 mo
90.7671 133.872 91.9233 133.102 93.02 132.193 cv
93.0503 132.17 li
93.0889 132.159 li
96.645 131.266 100.018 130.049 103.16 128.53 cv
98.8521 131.012 94.3013 133.009 89.5649 134.497 cv
89.5649 134.497 li
cp
61.3638 136.617 mo
61.3218 136.61 li
56.1821 135.836 51.0347 134.482 46.0239 132.589 cv
45.791 132.5 li
45.957 132.315 li
46.6699 131.519 47.5488 130.272 48.5669 128.607 cv
48.6411 128.486 li
48.7734 128.537 li
54.312 130.65 60.0083 132.177 65.7046 133.074 cv
66.0181 133.123 li
65.8032 133.357 li
64.2988 134.992 62.8193 136.083 61.4058 136.602 cv
61.3638 136.617 li
61.3638 136.617 li
cp
71.3501 137.377 mo
69.9834 137.377 68.5913 137.332 67.2173 137.242 cv
66.5767 137.201 li
67.1538 136.921 li
68.5054 136.261 69.8696 135.214 71.2114 133.809 cv
71.2666 133.75 li
71.3486 133.757 li
73.4087 133.93 75.478 134.018 77.4995 134.018 cv
80.7808 134.018 84.0259 133.787 87.1479 133.332 cv
87.3022 133.696 li
85.4136 135.107 83.3853 136.066 81.27 136.545 cv
81.0522 136.584 80.8276 136.622 80.6011 136.661 cv
80.438 136.686 li
77.4961 137.144 74.4385 137.377 71.3501 137.377 cv
71.3501 137.377 li
cp
0.933333 0.760784 0 0 cmyk
f
53.3828 2.50684 mo
53.3472 2.50537 li
53.019 2.49072 52.6865 2.48486 52.3613 2.48486 cv
52.0913 2.48486 51.8228 2.48926 51.5542 2.49902 cv
51.4956 2.12939 li
51.9751 1.99268 52.4385 1.86377 52.8765 1.74658 cv
53.6362 1.54541 li
53.7769 1.51465 li
53.8691 1.49463 li
53.9277 1.4834 li
54.0771 1.45459 li
55.8687 1.1123 57.0845 0.879395 58.0659 0.70459 cv
58.1382 1.04834 li
56.5176 1.44727 54.9292 1.93555 53.4146 2.49512 cv
53.3828 2.50684 li
53.3828 2.50684 li
cp
87.7246 5.45898 mo
87.416 5.39063 li
84.3618 4.72217 81.3052 4.38086 78.3315 4.37598 cv
78.2578 4.37598 li
78.2075 4.32227 li
76.7935 2.81787 75.3174 1.64502 73.8228 0.834473 cv
73.9214 0.45459 li
77.6909 0.571777 81.5483 1.0835 85.3911 1.97461 cv
85.4185 1.98242 li
85.4448 1.99854 li
86.2939 2.54688 87.0234 3.6123 87.6123 5.16357 cv
87.7246 5.45898 li
87.7246 5.45898 li
cp
66.5835 6.35352 mo
66.5161 6.31982 li
63.5073 4.75 60.4995 3.64697 57.5776 3.03857 cv
56.9624 2.91113 li
57.5576 2.71045 li
60.9727 1.56396 64.6646 0.841797 68.5288 0.561523 cv
68.561 0.560059 li
68.5942 0.569824 li
70.6997 1.24268 72.8101 2.47559 74.8696 4.23682 cv
75.1733 4.49854 li
74.7739 4.53662 li
71.897 4.80566 69.1665 5.40771 66.6538 6.32861 cv
66.5835 6.35352 li
66.5835 6.35352 li
cp
100.149 10.1821 mo
100.02 10.1108 li
97.1177 8.53223 94.0532 7.24902 90.9067 6.29883 cv
90.8062 6.26807 li
90.7876 6.16357 li
90.5942 5.05225 90.3145 4.16357 89.9536 3.52637 cv
89.7427 3.1499 li
90.1538 3.28076 li
94.0933 4.52539 97.9399 6.15918 101.586 8.13672 cv
101.794 8.24756 li
101.623 8.41064 li
101.288 8.72705 100.821 9.2832 100.238 10.064 cv
100.149 10.1821 li
100.149 10.1821 li
cp
57.2505 12.2788 mo
57.1587 12.2578 li
52.9482 11.3374 48.8237 10.8691 44.8989 10.8691 cv
44.7642 10.8691 44.6323 10.8706 44.4995 10.8711 cv
44.0767 10.875 li
44.3804 10.5806 li
45.8784 9.11035 47.5728 7.76563 49.4141 6.58398 cv
50.627 5.80664 51.9067 5.09424 53.2183 4.4668 cv
53.2637 4.44434 li
53.314 4.45068 li
56.6318 4.8623 60.0884 5.8374 63.5859 7.34912 cv
63.9185 7.49316 li
63.5962 7.65771 li
62.8247 8.05273 62.0728 8.48389 61.3638 8.93848 cv
59.8657 9.89941 58.5054 11.0015 57.3159 12.2119 cv
57.2505 12.2788 li
57.2505 12.2788 li
cp
30.0864 13.4731 mo
29.8784 13.1455 li
31.5972 11.54 33.5093 10.0596 35.5591 8.74316 cv
36.7466 7.98145 37.9932 7.26563 39.2642 6.61523 cv
39.8096 6.36035 40.4165 6.08203 41.1245 5.75879 cv
43.4194 4.88281 45.9087 4.37598 48.5171 4.25586 cv
48.6157 4.63428 li
47.6733 5.13281 46.7524 5.67139 45.8765 6.23193 cv
43.6592 7.65527 41.646 9.29102 39.895 11.0942 cv
39.8516 11.1382 li
39.7915 11.144 li
36.3306 11.5254 33.0669 12.3091 30.0864 13.4731 cv
30.0864 13.4731 li
cp
89.3115 16.29 mo
89.0981 16.2466 li
87.8774 15.9883 86.6509 15.8506 85.4536 15.8379 cv
85.3413 15.8374 li
85.2974 15.7368 li
83.8032 12.3374 82.1626 9.40137 80.4199 7.01221 cv
80.2183 6.73584 li
80.5625 6.74121 li
83.0835 6.78467 85.6714 7.10547 88.2544 7.69385 cv
88.3604 7.71826 li
88.3838 7.82324 li
88.8721 10.0371 89.1807 12.8135 89.3047 16.0732 cv
89.3115 16.29 li
89.3115 16.29 li
cp
80.2251 16.6768 mo
80.1499 16.6016 li
76.9497 13.415 73.645 10.7056 70.3271 8.55078 cv
70.0337 8.35986 li
70.3657 8.24658 li
72.5615 7.49756 74.938 7.02148 77.4321 6.83057 cv
77.5161 6.82422 li
77.5718 6.88623 li
79.7202 9.2627 81.7798 12.2192 83.6987 15.6719 cv
83.8232 15.8975 li
83.5664 15.9248 li
82.4224 16.0454 81.3325 16.2852 80.3257 16.6406 cv
80.2251 16.6768 li
80.2251 16.6768 li
cp
94.7407 18.3271 mo
94.6021 18.2534 li
93.4312 17.6299 92.2065 17.1182 90.9619 16.7305 cv
90.8325 16.6904 li
90.8428 16.5542 li
91.1045 13.4604 91.1763 10.811 91.0562 8.67822 cv
91.0425 8.43262 li
91.2773 8.50537 li
93.8804 9.31104 96.4253 10.3828 98.8423 11.6895 cv
99.0083 11.7798 li
98.9009 11.9355 li
97.7886 13.5508 96.4185 15.6563 94.8267 18.1938 cv
94.7407 18.3271 li
94.7407 18.3271 li
cp
115.969 18.7666 mo
115.34 18.6006 li
114.515 18.3818 113.58 18.2715 112.561 18.2715 cv
112.093 18.2715 111.588 18.2954 111.063 18.3433 cv
110.983 18.3501 li
110.926 18.292 li
110.838 18.2046 110.753 18.1172 110.664 18.0298 cv
108.406 15.7764 105.875 13.7378 103.143 11.9678 cv
102.948 11.8418 li
103.127 11.6938 li
104.38 10.6592 105.048 10.4214 105.387 10.4028 cv
105.442 10.3994 li
105.488 10.4287 li
109.113 12.7324 112.48 15.3848 115.503 18.3135 cv
115.969 18.7666 li
115.969 18.7666 li
cp
76.1206 19.2412 mo
76.0103 19.1846 li
71.396 16.812 66.7124 14.9111 62.0933 13.5352 cv
61.8149 13.4526 li
62.0229 13.251 li
62.9819 12.3135 64.064 11.4556 65.2417 10.7012 cv
65.981 10.2246 66.771 9.78223 67.5884 9.38477 cv
67.667 9.34619 li
67.7456 9.38965 li
71.4243 11.4067 75.1147 13.9951 78.709 17.084 cv
78.8984 17.2466 li
78.6772 17.3638 li
78.4019 17.5098 78.1284 17.6694 77.8667 17.8374 cv
77.2632 18.2236 76.7046 18.666 76.208 19.1553 cv
76.1206 19.2412 li
76.1206 19.2412 li
cp
99.498 21.8828 mo
99.4141 21.7988 li
98.4697 20.856 97.4165 20.0005 96.2842 19.2539 cv
96.1245 19.1494 li
96.2476 19.0024 li
98.2134 16.6392 99.9307 14.7275 101.353 13.3198 cv
101.451 13.2231 li
101.566 13.2969 li
103.955 14.834 106.166 16.603 108.136 18.5527 cv
108.356 18.771 li
108.054 18.8398 li
105.551 19.4136 102.708 20.4219 99.605 21.833 cv
99.498 21.8828 li
99.498 21.8828 li
cp
37.1089 22.5898 mo
37.1929 22.3154 li
38.1724 19.1348 39.6987 16.1855 41.7339 13.5498 cv
41.7808 13.4893 li
41.8579 13.4849 li
42.958 13.416 44.0986 13.3818 45.2476 13.3818 cv
48.4829 13.3818 51.8579 13.6582 55.2749 14.2056 cv
55.5513 14.2505 li
55.3853 14.4756 li
53.9712 16.3901 52.9077 18.521 52.2251 20.8057 cv
52.1899 20.9238 li
52.0659 20.9268 li
46.9722 21.0337 42.0337 21.5747 37.3911 22.5308 cv
37.1089 22.5898 li
37.1089 22.5898 li
cp
73.8667 23.001 mo
73.7173 22.9702 li
68.3262 21.8584 62.8862 21.188 57.5513 20.9795 cv
57.3276 20.9702 li
57.3931 20.7578 li
58.0103 18.7798 58.9634 16.936 60.2231 15.2803 cv
60.29 15.1938 li
60.3975 15.2188 li
65.2617 16.3594 70.1963 18.0215 75.0674 20.1572 cv
75.2583 20.2412 li
75.1382 20.4126 li
74.6079 21.1611 74.1953 21.9834 73.9136 22.8564 cv
73.8667 23.001 li
73.8667 23.001 li
cp
114.753 27.6191 mo
114.405 27.542 li
110.917 26.772 107.019 26.373 102.816 26.356 cv
102.71 26.3555 li
102.663 26.2607 li
102.16 25.2329 101.514 24.2275 100.744 23.2739 cv
100.59 23.082 li
100.825 23.0054 li
104.284 21.873 107.447 21.168 110.228 20.9106 cv
110.317 20.9023 li
110.374 20.9692 li
112.071 22.9775 113.49 25.1074 114.592 27.2988 cv
114.753 27.6191 li
114.753 27.6191 li
cp
20.1328 28.7695 mo
20.2583 28.3662 li
21.4995 24.3818 23.4287 20.6899 25.9917 17.3955 cv
26.0151 17.3628 li
26.0522 17.3452 li
29.3564 15.7734 33.0464 14.6538 37.0239 14.0146 cv
37.4346 13.9502 li
37.186 14.2842 li
35.1064 17.1035 33.5513 20.2466 32.5649 23.623 cv
32.5386 23.7124 li
32.4478 23.7393 li
28.1084 24.9707 24.0894 26.5962 20.5034 28.5659 cv
20.1328 28.7695 li
20.1328 28.7695 li
cp
56.8179 29.8564 mo
56.791 29.6772 li
56.459 27.4878 56.4624 25.3306 56.7993 23.2715 cv
56.8228 23.1304 li
56.9653 23.1294 li
57.4634 23.1211 57.9619 23.1172 58.4614 23.1172 cv
63.3896 23.1172 68.4204 23.4883 73.4116 24.2222 cv
73.5796 24.2466 li
73.5542 24.4146 li
73.4253 25.3389 73.4253 26.2998 73.5542 27.2715 cv
73.5796 27.4526 li
73.3984 27.4648 li
67.9155 27.8574 62.397 28.6484 56.9956 29.8184 cv
56.8179 29.8564 li
56.8179 29.8564 li
cp
125.448 32.1411 mo
123.434 30.7188 121.043 29.5366 118.338 28.6279 cv
118.269 28.605 li
118.239 28.54 li
117.011 25.9648 115.403 23.4644 113.46 21.103 cv
113.213 20.8047 li
113.599 20.8242 li
115.854 20.9399 117.75 21.438 119.239 22.3042 cv
119.264 22.3184 li
119.282 22.3398 li
121.867 25.3691 124.039 28.5786 125.747 31.8848 cv
125.448 32.1411 li
125.448 32.1411 li
cp
36.3423 36.3984 mo
36.3091 36.1807 li
35.7622 32.6577 35.7739 29.1963 36.3408 25.897 cv
36.3594 25.7866 li
36.4668 25.7598 li
41.1968 24.5547 46.2271 23.751 51.4165 23.3711 cv
51.6313 23.356 li
51.5981 23.5684 li
51.2207 25.9482 51.2271 28.4351 51.6216 30.9585 cv
51.645 31.1104 li
51.4956 31.1499 li
46.3076 32.5386 41.2759 34.2754 36.5454 36.311 cv
36.3423 36.3984 li
36.3423 36.3984 li
cp
91.3462 36.5874 mo
87.9443 36.5874 84.4302 35.105 81.9448 32.6226 cv
79.7974 30.479 78.7139 27.8706 78.9707 25.4678 cv
79.1714 23.5918 80.1499 22.041 81.7969 20.9834 cv
83.1323 20.125 84.8159 19.6719 86.668 19.6719 cv
90.0698 19.6719 93.5835 21.1543 96.0693 23.6367 cv
98.2183 25.7813 99.3018 28.3887 99.0435 30.791 cv
98.8423 32.667 97.8643 34.2178 96.2173 35.2754 cv
94.8804 36.1333 93.1958 36.5874 91.3462 36.5874 cv
91.3462 36.5874 li
cp
117.288 36.8604 mo
117.009 36.7036 li
113.108 34.4937 108.752 32.584 104.065 31.0264 cv
103.957 30.9902 li
103.948 30.8774 li
103.882 29.9126 103.683 28.9258 103.357 27.9478 cv
103.277 27.7026 li
103.534 27.7236 li
107.957 28.0898 112.049 28.8467 115.7 29.9775 cv
115.778 30.0024 li
115.807 30.0806 li
116.608 32.2314 117.098 34.4063 117.263 36.5425 cv
117.288 36.8604 li
117.288 36.8604 li
cp
8.74023 38.0557 mo
8.40283 37.8682 li
9.47021 34.7578 10.936 31.7939 12.7607 29.061 cv
12.7622 29.0566 12.7661 29.0532 12.7676 29.0498 cv
14.0073 27.3252 14.896 26.1479 15.7446 25.1104 cv
15.7397 25.1064 li
15.7417 25.1035 15.7432 25.1016 15.7466 25.0977 cv
15.7495 25.1021 li
17.3452 23.252 19.1934 21.584 21.2446 20.1416 cv
21.5181 20.4131 li
19.2759 23.645 17.5815 27.2051 16.4829 30.999 cv
16.4663 31.0566 li
16.4175 31.0908 li
13.4556 33.145 10.8735 35.4883 8.74023 38.0557 cv
8.74023 38.0557 li
cp
60.2783 39.1396 mo
60.1958 38.9976 li
58.9233 36.8252 57.9668 34.583 57.3564 32.335 cv
57.311 32.1714 li
57.4751 32.126 li
62.8345 30.6436 68.2974 29.5244 73.7139 28.7998 cv
73.8599 28.7803 li
73.8999 28.9224 li
74.1885 29.9458 74.6196 30.9639 75.1782 31.9507 cv
75.2754 32.1206 li
75.0942 32.1938 li
70.2163 34.1504 65.2817 36.4619 60.4243 39.063 cv
60.2783 39.1396 li
60.2783 39.1396 li
cp
115.867 45.5166 mo
115.686 45.3408 li
111.984 41.769 107.836 38.4248 103.356 35.3994 cv
103.242 35.3223 li
103.293 35.1948 li
103.629 34.3638 103.844 33.4727 103.933 32.5469 cv
103.955 32.3188 li
104.166 32.4043 li
108.906 34.3174 113.295 36.583 117.216 39.1382 cv
117.299 39.1909 li
117.294 39.29 li
117.175 41.3887 116.728 43.4053 115.961 45.2832 cv
115.867 45.5166 li
115.867 45.5166 li
cp
19.1548 46.1514 mo
19.1113 45.8735 li
18.4185 41.416 18.439 37.0386 19.1714 32.8599 cv
19.1851 32.7827 li
19.2505 32.7432 li
22.9038 30.5508 27.0215 28.6899 31.4917 27.2114 cv
31.7568 27.123 li
31.7134 27.4004 li
31.1445 30.9351 31.1616 34.6309 31.7671 38.3833 cv
31.7866 38.5068 li
31.6743 38.562 li
27.1929 40.7866 23.0562 43.2837 19.3813 45.9858 cv
19.1548 46.1514 li
19.1548 46.1514 li
cp
130.15 47.1499 mo
129.813 46.7734 li
127.397 44.0664 124.474 41.5376 121.123 39.2563 cv
121.053 39.2095 li
121.048 39.124 li
120.915 36.6699 120.406 34.166 119.537 31.6807 cv
119.41 31.3159 li
119.764 31.4688 li
122.882 32.8076 125.567 34.4692 127.748 36.4072 cv
127.78 36.4351 li
127.793 36.4746 li
129.07 39.8604 129.848 43.2832 130.111 46.647 cv
130.15 47.1499 li
130.15 47.1499 li
cp
67.6401 47.8242 mo
67.5161 47.7158 li
66.855 47.1382 66.2178 46.542 65.624 45.9473 cv
64.2168 44.5425 62.9399 43.0522 61.8335 41.5132 cv
61.7275 41.3657 li
61.8818 41.27 li
66.5601 38.3618 71.2983 35.729 75.9663 33.4463 cv
76.0957 33.3823 li
76.1792 33.4976 li
76.7183 34.2388 77.3354 34.9565 78.0132 35.6333 cv
78.2847 35.9019 78.5493 36.1514 78.8013 36.3779 cv
78.9404 36.502 li
78.8062 36.6294 li
75.1763 40.0532 71.4575 43.7798 67.7544 47.7051 cv
67.6401 47.8242 li
67.6401 47.8242 li
cp
41.7354 50.8042 mo
41.6411 50.6426 li
39.5884 47.1631 38.062 43.5674 37.1025 39.9512 cv
37.0669 39.8149 li
37.1929 39.7539 li
41.8896 37.4678 46.8813 35.4531 52.0288 33.7681 cv
52.2002 33.7134 li
52.2471 33.8867 li
52.9536 36.4932 54.0586 39.0874 55.5317 41.5962 cv
55.6187 41.7422 li
55.4712 41.8286 li
50.7729 44.5654 46.2036 47.5469 41.8882 50.6924 cv
41.7354 50.8042 li
41.7354 50.8042 li
cp
110.448 52.6035 mo
110.345 52.4355 li
107.484 47.7573 104.225 43.2432 100.657 39.0176 cv
100.546 38.8882 li
100.677 38.7798 li
101.425 38.1426 102.059 37.417 102.563 36.623 cv
102.662 36.4653 li
102.809 36.5776 li
107.175 39.9092 111.203 43.5566 114.78 47.416 cv
114.866 47.5088 li
114.8 47.6172 li
113.72 49.4414 112.306 51.0762 110.599 52.479 cv
110.448 52.6035 li
110.448 52.6035 li
cp
77.4961 54.1553 mo
77.3403 54.082 li
74.752 52.8799 72.2896 51.418 70.022 49.7358 cv
69.8794 49.6294 li
69.9917 49.4902 li
73.4067 45.3042 76.8071 41.313 80.0962 37.6304 cv
80.1968 37.5156 li
80.3228 37.6064 li
81.3843 38.3843 82.5283 39.0654 83.7261 39.6313 cv
83.8735 39.7017 li
83.8081 39.8535 li
81.8203 44.4131 79.7222 49.1719 77.5669 53.9966 cv
77.4961 54.1553 li
77.4961 54.1553 li
cp
101.536 56.9502 mo
101.492 56.7871 li
100.02 51.4556 98.23 46.2393 96.1733 41.2813 cv
96.0996 41.1035 li
96.2842 41.0513 li
97.3745 40.7466 98.3892 40.313 99.2983 39.7646 cv
99.4312 39.6841 li
99.5229 39.8076 li
102.817 44.2432 105.812 48.9683 108.421 53.853 cv
108.497 53.9951 li
108.363 54.0791 li
106.376 55.3145 104.136 56.2666 101.7 56.9072 cv
101.536 56.9502 li
101.536 56.9502 li
cp
136.198 57.0469 mo
135.326 54.7466 134.124 52.4858 132.624 50.3232 cv
132.595 50.2832 li
132.593 50.2363 li
132.431 46.9658 131.805 43.6226 130.733 40.2979 cv
131.072 40.1279 li
131.765 41.123 132.36 42.186 132.845 43.2905 cv
132.941 43.5313 133.035 43.7803 133.127 44.0283 cv
133.216 44.2656 li
133.533 45.1475 133.911 46.2378 134.378 47.605 cv
135.066 49.7568 135.651 51.9727 136.121 54.1895 cv
136.297 55.1074 136.445 56.0386 136.562 56.957 cv
136.198 57.0469 li
136.198 57.0469 li
cp
88.3501 57.4404 mo
88.1709 57.4126 li
85.5103 56.9893 82.8472 56.2798 80.2505 55.3022 cv
80.0942 55.2432 li
80.1514 55.085 li
81.9814 50.0488 83.7075 45.1338 85.2788 40.4795 cv
85.3345 40.3149 li
85.4985 40.375 li
86.7031 40.8154 87.938 41.1416 89.1704 41.3447 cv
89.3164 41.3691 li
89.313 41.5166 li
89.1973 46.543 88.8784 51.8389 88.3672 57.2598 cv
88.3501 57.4404 li
88.3501 57.4404 li
cp
93.9141 57.874 mo
93.0317 57.874 92.1157 57.8379 91.1919 57.7695 cv
91.0308 57.7578 li
91.0356 57.5942 li
91.1831 52.1406 91.1196 46.8062 90.8428 41.7383 cv
90.8325 41.5469 li
91.0239 41.5596 li
91.4028 41.584 91.7871 41.5962 92.1626 41.5962 cv
92.9712 41.5962 93.7715 41.5376 94.5396 41.4229 cv
94.6821 41.4019 li
94.7261 41.5371 li
96.4253 46.5806 97.8657 51.8818 99.0098 57.2954 cv
99.0464 57.4702 li
98.8706 57.498 li
97.2808 57.748 95.6133 57.874 93.9141 57.874 cv
93.9141 57.874 li
cp
6.82666 58.3896 mo
6.76416 57.9775 li
6.03125 53.1118 6.07178 48.3291 6.88037 43.7651 cv
6.88672 43.7275 li
6.91016 43.6943 li
9.11279 40.6855 11.8989 37.916 15.188 35.4624 cv
15.5234 35.2134 li
15.458 35.625 li
14.7871 39.8955 14.8237 44.3599 15.5654 48.8916 cv
15.582 48.9868 li
15.5083 49.0488 li
12.1821 51.8896 9.34424 54.9194 7.06982 58.0527 cv
6.82666 58.3896 li
6.82666 58.3896 li
cp
127.924 60.6523 mo
127.75 60.3594 li
125.468 56.5234 122.661 52.7588 119.401 49.1694 cv
119.328 49.0889 li
119.371 48.9883 li
120.289 46.8496 120.842 44.5483 121.02 42.1484 cv
121.043 41.8306 li
121.293 42.0249 li
124.737 44.6792 127.712 47.5786 130.134 50.644 cv
130.175 50.6924 li
130.171 50.7578 li
130.002 54.1206 129.29 57.3442 128.055 60.3379 cv
127.924 60.6523 li
127.924 60.6523 li
cp
25.9282 64.2402 mo
25.8169 64.0527 li
23.2104 59.6406 21.2783 55.0771 20.0757 50.4902 cv
20.0474 50.3828 li
20.1343 50.3135 li
23.7876 47.4326 27.9058 44.7212 32.3755 42.2539 cv
32.5649 42.1489 li
32.6226 42.3584 li
33.6636 46.2344 35.311 50.0874 37.5181 53.8115 cv
37.5952 53.9395 li
37.478 54.0332 li
33.3452 57.2842 29.5107 60.668 26.084 64.0859 cv
25.9282 64.2402 li
25.9282 64.2402 li
cp
53.1812 64.2676 mo
53.0488 64.1523 li
51.9956 63.2363 50.9673 62.2798 49.9946 61.3057 cv
47.7505 59.0664 45.7241 56.6855 43.9731 54.2305 cv
43.8804 54.0996 li
44.0044 54 li
48.1797 50.6123 52.5913 47.3638 57.1128 44.3428 cv
57.2505 44.2515 li
57.3481 44.3848 li
58.6274 46.1729 60.1055 47.9058 61.7407 49.5366 cv
62.4321 50.2266 63.1665 50.9136 63.9282 51.5786 cv
64.0571 51.6924 li
63.9399 51.8203 li
60.3286 55.7886 56.7456 59.9302 53.2925 64.1309 cv
53.1812 64.2676 li
53.1812 64.2676 li
cp
1.22705 70.4219 mo
0.841309 70.4038 li
0.487793 67.437 0.423828 64.4883 0.655762 61.6362 cv
0.638672 61.6348 li
0.640137 61.6294 0.640137 61.625 0.64209 61.6191 cv
0.656738 61.6206 li
0.690918 61.291 li
0.675293 61.2886 li
0.687012 61.1802 0.69873 61.0684 0.710449 60.958 cv
0.722168 60.959 li
0.782715 60.3896 0.843262 59.8711 0.910645 59.376 cv
0.901855 59.375 li
0.903809 59.3691 0.903809 59.3643 0.905273 59.3584 cv
0.912109 59.3604 li
1.20215 57.4727 li
1.18896 57.4702 li
1.19043 57.4639 1.19043 57.458 1.19189 57.4531 cv
1.20557 57.4551 li
1.36182 56.561 1.56445 55.5522 1.87842 54.083 cv
2.36963 52.2344 3.05713 50.3984 3.92139 48.6328 cv
4.28857 48.7432 li
3.75342 52.9766 3.85596 57.3794 4.59375 61.8306 cv
4.60205 61.8887 li
4.57178 61.9414 li
4.27344 62.4746 3.97998 63.0298 3.69971 63.5898 cv
2.57568 65.8555 1.74365 68.1543 1.22705 70.4219 cv
1.22705 70.4219 li
cp
119.48 71.6538 mo
119.4 71.4238 li
117.757 66.6958 115.652 61.9414 113.143 57.293 cv
113.075 57.1694 li
113.183 57.082 li
115.159 55.4824 116.8 53.6138 118.064 51.5298 cv
118.188 51.3223 li
118.341 51.5098 li
121.508 55.3936 124.217 59.4385 126.394 63.5332 cv
126.439 63.6172 li
126.391 63.6992 li
124.682 66.6338 122.419 69.2588 119.669 71.5 cv
119.48 71.6538 li
119.48 71.6538 li
cp
68.4937 74.0723 mo
68.3379 74.001 li
64.188 72.0898 60.2534 69.752 56.6436 67.0542 cv
56.5093 66.9531 li
56.6079 66.8164 li
59.8188 62.4307 63.1401 58.0703 66.4795 53.8574 cv
66.5835 53.729 li
66.7158 53.8286 li
69.3394 55.7813 72.1958 57.479 75.2036 58.8691 cv
75.356 58.9414 li
75.2871 59.0947 li
72.9741 64.2378 70.7134 69.2236 68.5645 73.917 cv
68.4937 74.0723 li
68.4937 74.0723 li
cp
134.083 76.4395 mo
133.969 75.8882 li
133.209 72.1943 131.904 68.4282 130.089 64.6958 cv
130.056 64.625 li
130.087 64.5522 li
131.44 61.4424 132.263 58.0928 132.537 54.5977 cv
132.577 54.0762 li
132.85 54.5215 li
134.734 57.5879 136.079 60.7734 136.847 63.9902 cv
136.854 64.0146 li
136.852 64.0386 li
136.653 68.2026 135.792 72.1973 134.294 75.916 cv
134.083 76.4395 li
134.083 76.4395 li
cp
105.632 78.3818 mo
105.612 78.187 li
105.033 72.9106 104.119 67.5645 102.891 62.293 cv
102.854 62.1318 li
103.015 62.0908 li
105.823 61.3574 108.413 60.2598 110.714 58.833 cv
110.877 58.7314 li
110.958 58.9043 li
113.239 63.7554 115.123 68.6958 116.558 73.5918 cv
116.595 73.7158 li
116.486 73.7832 li
113.314 75.7866 109.728 77.3184 105.823 78.334 cv
105.632 78.3818 li
105.632 78.3818 li
cp
14.2871 78.397 mo
14.1479 78.1592 li
11.2798 73.291 9.15625 68.2539 7.83789 63.1924 cv
7.81787 63.1172 li
7.86279 63.0527 li
10.1108 59.791 12.9536 56.5918 16.313 53.5439 cv
16.52 53.3574 li
16.5918 53.626 li
17.8633 58.3442 19.876 63.0366 22.5732 67.5723 cv
22.6372 67.6807 li
22.5532 67.7734 li
19.3716 71.2666 16.6401 74.7627 14.4365 78.165 cv
14.2871 78.397 li
14.2871 78.397 li
cp
85.3496 79.1455 mo
85.1836 79.1206 li
80.9214 78.457 76.6577 77.3242 72.5132 75.751 cv
72.3521 75.6895 li
72.4136 75.5298 li
74.3896 70.5107 76.3442 65.397 78.2241 60.3306 cv
78.2847 60.1699 li
78.4438 60.2305 li
81.4478 61.3638 84.5396 62.1836 87.6323 62.6719 cv
87.7935 62.6958 li
87.7749 62.8584 li
87.1479 68.2256 86.3423 73.6504 85.3794 78.9814 cv
85.3496 79.1455 li
85.3496 79.1455 li
cp
93.8618 79.8022 mo
92.4146 79.8022 90.9448 79.7422 89.4995 79.6279 cv
89.3218 79.6138 li
89.3433 79.4355 li
90.0259 74.0732 90.5171 68.6206 90.8062 63.2275 cv
90.8159 63.0527 li
90.9888 63.0654 li
92.0425 63.1475 93.0972 63.1885 94.1255 63.1885 cv
96.0894 63.1885 98.0288 63.0386 99.8853 62.7446 cv
100.051 62.7188 li
100.079 62.8848 li
101 68.248 101.625 73.6694 101.94 79 cv
101.949 79.1543 li
101.797 79.1782 li
99.2446 79.5918 96.5742 79.8022 93.8618 79.8022 cv
93.8618 79.8022 li
cp
40.2964 81.1348 mo
40.1553 81.0122 li
38.8169 79.8496 37.5132 78.6362 36.2769 77.4004 cv
33.4341 74.563 30.8696 71.5439 28.6553 68.4258 cv
28.5747 68.313 li
28.6685 68.21 li
32.0063 64.6328 35.7339 61.0547 39.7427 57.5742 cv
39.8833 57.4526 li
39.9941 57.6055 li
41.8647 60.2266 44.0317 62.7734 46.4351 65.1748 cv
47.5005 66.2378 48.6157 67.2754 49.7495 68.2598 cv
49.8721 68.3672 li
49.7715 68.4951 li
46.4282 72.7134 43.2769 76.9136 40.4048 80.9814 cv
40.2964 81.1348 li
40.2964 81.1348 li
cp
134.865 87.7754 mo
134.507 87.6992 li
134.794 85.4258 134.844 83.0664 134.655 80.6855 cv
134.652 80.6426 li
134.67 80.6035 li
135.817 77.9863 136.661 75.207 137.178 72.3418 cv
137.506 72.374 li
137.481 72.8174 137.455 73.2598 137.421 73.7026 cv
137.268 75.271 137.151 76.4443 137.039 77.4302 cv
136.916 78.3716 136.769 79.3398 136.601 80.3047 cv
136.356 81.6016 136.025 83.1211 135.62 84.9746 cv
135.43 85.7466 135.247 86.4434 135.063 87.0996 cv
134.994 87.332 134.927 87.5596 134.865 87.7754 cv
134.865 87.7754 li
cp
123.445 90.3584 mo
123.421 90.0332 li
123.091 85.6626 122.266 81.0898 120.969 76.4414 cv
120.939 76.332 li
121.028 76.2627 li
123.972 73.9072 126.411 71.145 128.278 68.0542 cv
128.449 67.7715 li
128.582 68.0752 li
130.339 72.1504 131.552 76.2222 132.181 80.1782 cv
132.191 80.2383 li
132.161 80.291 li
130.01 84.0059 127.164 87.3232 123.699 90.1523 cv
123.445 90.3584 li
123.445 90.3584 li
cp
8.34277 91.7295 mo
8.12793 91.3618 li
5.37549 86.6387 3.33545 81.7539 2.06592 76.8442 cv
2.05615 76.8086 li
2.06104 76.7744 li
2.49365 73.915 3.45459 70.9722 4.91748 68.0278 cv
5.08057 67.6982 5.25146 67.3652 5.43115 67.0313 cv
5.63232 66.6538 li
5.74609 67.0664 li
7.11963 72.0723 9.27002 77.0479 12.1367 81.855 cv
12.1855 81.9375 li
12.1401 82.0215 li
11.8584 82.541 11.5796 83.0786 11.3101 83.6191 cv
9.97607 86.3086 9.01221 88.897 8.43994 91.3145 cv
8.34277 91.7295 li
8.34277 91.7295 li
cp
59.5186 93.4302 mo
59.3657 93.3594 li
54.104 90.9434 49.1138 87.9775 44.5327 84.5454 cv
44.4058 84.4492 li
44.4927 84.3145 li
47.2319 80.105 50.2026 75.75 53.3188 71.3711 cv
53.4214 71.229 li
53.5605 71.332 li
57.4419 74.2344 61.6724 76.748 66.1338 78.8027 cv
66.2896 78.873 li
66.2178 79.0264 li
64.002 83.8389 61.7729 88.6328 59.5903 93.2778 cv
59.5186 93.4302 li
59.5186 93.4302 li
cp
30.1333 97.0322 mo
29.9736 96.897 li
28.4995 95.6143 27.063 94.2764 25.7065 92.9199 cv
22.5513 89.7734 19.7114 86.4268 17.2642 82.9707 cv
17.1987 82.8794 li
17.2593 82.7832 li
19.4302 79.3096 22.1138 75.6982 25.2368 72.0488 cv
25.3774 71.8828 li
25.5054 72.0596 li
27.7798 75.2466 30.4097 78.3398 33.3247 81.25 cv
34.6499 82.5698 36.0239 83.8486 37.4126 85.0508 cv
37.5269 85.1504 li
37.4429 85.2764 li
34.7139 89.3271 32.2886 93.2222 30.2354 96.853 cv
30.1333 97.0322 li
30.1333 97.0322 li
cp
106.046 98.8184 mo
106.065 98.5806 li
106.417 93.8506 106.423 88.8262 106.088 83.6475 cv
106.078 83.5059 li
106.215 83.4707 li
110.392 82.3984 114.24 80.7754 117.655 78.6475 cv
117.858 78.521 li
117.91 78.7534 li
119.027 83.5898 119.683 88.3262 119.859 92.8291 cv
119.863 92.9268 li
119.78 92.9795 li
115.768 95.5283 111.226 97.4727 106.278 98.7588 cv
106.046 98.8184 li
106.046 98.8184 li
cp
7.69385 99.457 mo
7.49072 99.0742 li
7.24756 98.6118 li
7.09814 98.3086 li
6.99268 98.0874 6.89355 97.876 6.79932 97.6748 cv
6.74072 97.5527 li
6.73926 97.5547 li
6.73242 97.5371 li
6.71387 97.4966 li
6.7124 97.4922 6.70898 97.4878 6.70752 97.4824 cv
6.70898 97.4824 li
6.01465 95.8564 5.35693 94.3086 4.91455 93.2305 cv
4.52344 92.1606 4.09229 90.9082 3.26709 88.499 cv
3.25049 88.4458 li
2.49365 85.7466 li
2.49219 85.7466 li
2.45166 85.5942 li
2.40967 85.4307 li
2.19531 84.5596 2.03564 83.6636 1.93213 82.769 cv
2.29443 82.6934 li
3.61084 86.8066 5.47803 90.895 7.83936 94.8462 cv
7.86768 94.8926 li
7.86279 94.9463 li
7.74561 96.4824 7.81104 97.957 8.0542 99.3306 cv
7.69385 99.457 li
7.69385 99.457 li
cp
80.6694 99.7803 mo
80.5205 99.7578 li
75.1147 98.9258 69.7046 97.4893 64.4448 95.4883 cv
64.2788 95.4258 li
64.3472 95.2637 li
66.3218 90.624 68.3379 85.7412 70.3389 80.752 cv
70.4009 80.5977 li
70.5571 80.6572 li
75.0171 82.3516 79.6011 83.5718 84.1821 84.2803 cv
84.3564 84.3086 li
84.3213 84.4824 li
83.2563 89.7246 82.0415 94.8223 80.7114 99.6338 cv
80.6694 99.7803 li
80.6694 99.7803 li
cp
91.2939 100.596 mo
89.4775 100.596 87.6187 100.521 85.769 100.373 cv
85.5728 100.357 li
85.6177 100.164 li
86.7632 95.355 87.7563 90.2422 88.5669 84.9648 cv
88.5903 84.8086 li
88.7495 84.8218 li
90.3447 84.9492 91.9414 85.0146 93.4966 85.0146 cv
96.3813 85.0146 99.228 84.793 101.958 84.3555 cv
102.151 84.3232 li
102.155 84.5195 li
102.254 89.7676 102.038 94.8555 101.511 99.6436 cv
101.498 99.7715 li
101.37 99.793 li
98.1343 100.326 94.7427 100.596 91.2939 100.596 cv
91.2939 100.596 li
cp
121.872 107.074 mo
122.018 106.55 li
123.014 102.965 123.542 99.043 123.586 94.895 cv
123.586 94.813 li
123.65 94.7622 li
127.167 91.9634 130.094 88.6855 132.354 85.021 cv
132.649 84.541 li
132.669 85.1035 li
132.81 88.9063 132.377 92.5654 131.382 95.9834 cv
131.373 96.0195 li
131.366 96.0234 li
129.051 100.043 125.999 103.645 122.292 106.726 cv
121.872 107.074 li
121.872 107.074 li
cp
23.9722 110.169 mo
23.7808 110.003 li
22.3604 108.765 20.9712 107.471 19.6563 106.157 cv
16.5332 103.04 13.7271 99.729 11.3149 96.3154 cv
11.271 96.2539 li
11.2881 96.1802 li
11.8701 93.647 12.8984 90.8828 14.3462 87.9668 cv
14.5557 87.541 14.7769 87.1138 15.0015 86.6885 cv
15.1294 86.4463 li
15.2905 86.6699 li
17.7153 90.0645 20.5234 93.3594 23.6333 96.4639 cv
25.0508 97.8774 26.5405 99.2622 28.0615 100.579 cv
28.1621 100.666 li
28.1001 100.785 li
27.8335 101.306 27.5698 101.82 27.3169 102.331 cv
25.936 105.114 24.8374 107.672 24.0542 109.931 cv
23.9722 110.169 li
23.9722 110.169 li
cp
51.3228 110.584 mo
51.1714 110.514 li
45.3384 107.839 39.8164 104.557 34.7544 100.757 cv
34.6367 100.667 li
34.7075 100.539 li
36.7217 96.8604 39.0649 92.8882 41.6733 88.729 cv
41.772 88.5703 li
41.9194 88.6816 li
46.6567 92.2295 51.8193 95.2959 57.2671 97.7969 cv
57.4253 97.8691 li
57.3496 98.0234 li
55.2476 102.462 53.2451 106.638 51.397 110.435 cv
51.3228 110.584 li
51.3228 110.584 li
cp
102.609 116.497 mo
102.71 116.196 li
103.99 112.404 104.944 108.166 105.55 103.598 cv
105.567 103.483 li
105.675 103.455 li
110.765 102.161 115.448 100.196 119.594 97.6172 cv
119.87 97.4473 li
119.854 97.7676 li
119.669 102.145 118.989 106.238 117.83 109.936 cv
117.811 109.995 li
117.759 110.03 li
113.348 112.847 108.353 114.995 102.915 116.416 cv
102.609 116.497 li
102.609 116.497 li
cp
117.61 116.938 mo
117.333 116.711 li
118.18 115.492 118.955 114.179 119.638 112.805 cv
119.915 112.242 120.183 111.665 120.431 111.084 cv
120.448 111.045 li
120.483 111.019 li
122.757 109.215 124.823 107.209 126.621 105.052 cv
126.917 105.262 li
126.798 105.459 126.674 105.659 126.552 105.859 cv
126.421 106.073 li
125.955 106.785 125.519 107.426 125.092 108.031 cv
124.321 109.079 123.712 109.904 123.184 110.605 cv
122.203 111.867 121.158 113.115 120.081 114.317 cv
119.539 114.911 118.903 115.589 118.018 116.519 cv
117.814 116.727 li
117.746 116.797 117.679 116.868 117.61 116.938 cv
117.61 116.938 li
cp
74.6362 117.576 mo
74.5039 117.556 li
68.519 116.64 62.5308 115.052 56.7075 112.836 cv
56.5361 112.771 li
56.6147 112.604 li
58.3911 108.836 60.2954 104.621 62.2744 100.081 cv
62.3398 99.9307 li
62.4907 99.9883 li
67.9302 102.062 73.5259 103.551 79.1196 104.416 cv
79.3145 104.446 li
79.2559 104.635 li
77.8247 109.299 76.2886 113.612 74.687 117.453 cv
74.6362 117.576 li
74.6362 117.576 li
cp
22.6821 118.188 mo
22.3589 117.902 li
21.248 116.922 20.1577 115.897 19.1162 114.857 cv
16.3604 112.108 13.8813 109.179 11.751 106.154 cv
11.729 106.124 li
11.7329 106.121 li
10.9375 104.309 10.6069 102.184 10.7495 99.8086 cv
10.7778 99.333 li
11.0566 99.7202 li
13.3325 102.864 15.9443 105.913 18.8228 108.784 cv
20.1948 110.154 21.6357 111.492 23.103 112.759 cv
23.1802 112.827 li
23.1567 112.929 li
22.6924 114.824 22.5181 116.449 22.6401 117.758 cv
22.6821 118.188 li
22.6821 118.188 li
cp
86.3022 118.469 mo
84.313 118.469 82.2749 118.387 80.2437 118.226 cv
80.0142 118.207 li
80.0991 117.992 li
81.6309 114.174 83.0566 109.862 84.3364 105.182 cv
84.3735 105.045 li
84.5161 105.057 li
86.4834 105.218 88.4546 105.299 90.3745 105.299 cv
93.8721 105.299 97.3228 105.03 100.63 104.499 cv
100.863 104.461 li
100.825 104.694 li
100.063 109.349 98.9849 113.643 97.6177 117.46 cv
97.584 117.554 li
97.4849 117.57 li
93.8906 118.167 90.1265 118.469 86.3022 118.469 cv
86.3022 118.469 li
cp
44.8481 123.525 mo
44.6992 123.457 li
38.9541 120.823 33.5132 117.587 28.5259 113.84 cv
28.4238 113.764 li
28.4692 113.645 li
29.313 111.396 30.4634 108.799 31.8911 105.922 cv
32.124 105.455 32.3623 104.979 32.6069 104.502 cv
32.6978 104.32 li
32.8604 104.443 li
37.9458 108.252 43.4917 111.543 49.3403 114.228 cv
49.4995 114.301 li
49.4224 114.457 li
49.1777 114.957 48.9326 115.451 48.6929 115.937 cv
47.2925 118.758 46.0239 121.262 44.9224 123.382 cv
44.8481 123.525 li
44.8481 123.525 li
cp
95.5347 129.274 mo
95.8931 128.855 li
97.5269 126.944 99.0083 124.659 100.298 122.06 cv
100.568 121.516 100.83 120.96 101.073 120.407 cv
101.108 120.332 li
101.189 120.311 li
106.533 118.959 111.46 116.918 115.838 114.249 cv
116.32 113.955 li
116.082 114.467 li
115.961 114.724 115.84 114.979 115.716 115.229 cv
114.247 118.186 112.417 120.771 110.273 122.911 cv
110.258 122.925 li
110.247 122.934 li
106.028 125.638 101.259 127.723 96.0679 129.13 cv
95.5347 129.274 li
95.5347 129.274 li
cp
41.1968 130.082 mo
41.063 130.021 li
36.0073 127.703 31.2183 124.852 26.8306 121.549 cv
26.772 121.504 li
26.7651 121.43 li
26.6528 120.242 26.894 118.612 27.4829 116.582 cv
27.5532 116.346 li
27.7495 116.493 li
32.6001 120.116 37.8804 123.248 43.4409 125.801 cv
43.6055 125.877 li
43.52 126.037 li
42.5737 127.794 41.8188 129.114 41.2773 129.959 cv
41.1968 130.082 li
41.1968 130.082 li
cp
67.7964 130.404 mo
67.6938 130.389 li
61.8013 129.492 55.9072 127.931 50.1753 125.752 cv
49.9912 125.682 li
50.0864 125.509 li
51.2339 123.463 52.5273 120.988 53.9331 118.157 cv
54.1812 117.661 54.4277 117.155 54.6792 116.643 cv
54.748 116.502 li
54.894 116.559 li
60.7358 118.787 66.7397 120.387 72.7393 121.317 cv
72.9644 121.352 li
72.8647 121.559 li
72.6401 122.031 72.4175 122.495 72.1958 122.94 cv
70.7603 125.835 69.3008 128.316 67.8579 130.32 cv
67.7964 130.404 li
67.7964 130.404 li
cp
79.2437 131.28 mo
77.3354 131.28 75.3862 131.201 73.4507 131.051 cv
73.1436 131.026 li
73.3267 130.78 li
74.772 128.826 76.1978 126.441 77.5649 123.688 cv
77.8013 123.214 78.0562 122.681 78.3267 122.102 cv
78.3765 121.995 li
78.4956 122.003 li
80.6279 122.18 82.7646 122.27 84.8462 122.27 cv
88.562 122.27 92.2217 121.988 95.7256 121.432 cv
96.0396 121.382 li
95.9067 121.67 li
95.7188 122.079 95.5244 122.484 95.3281 122.882 cv
93.8755 125.81 92.2231 128.314 90.415 130.329 cv
90.3745 130.373 li
90.3159 130.383 li
86.7603 130.977 83.0347 131.28 79.2437 131.28 cv
79.2437 131.28 li
cp
89.5649 134 mo
90.7671 133.377 91.9233 132.606 93.02 131.698 cv
93.0503 131.673 li
93.0889 131.664 li
96.645 130.77 100.018 129.553 103.16 128.035 cv
98.8521 130.516 94.3013 132.514 89.5649 134 cv
89.5649 134 li
cp
61.3638 136.121 mo
61.3218 136.115 li
56.1821 135.34 51.0347 133.986 46.0239 132.092 cv
45.791 132.004 li
45.957 131.82 li
46.6699 131.023 47.5488 129.775 48.5669 128.112 cv
48.6411 127.99 li
48.7734 128.04 li
54.312 130.155 60.0083 131.682 65.7046 132.579 cv
66.0181 132.627 li
65.8032 132.862 li
64.2988 134.497 62.8193 135.587 61.4058 136.105 cv
61.3638 136.121 li
61.3638 136.121 li
cp
71.3501 136.881 mo
69.9834 136.881 68.5913 136.836 67.2173 136.747 cv
66.5767 136.706 li
67.1538 136.425 li
68.5054 135.764 69.8696 134.718 71.2114 133.313 cv
71.2666 133.255 li
71.3486 133.262 li
73.4087 133.435 75.478 133.521 77.4995 133.521 cv
80.7808 133.521 84.0259 133.291 87.1479 132.836 cv
87.3022 133.2 li
85.4136 134.612 83.3853 135.57 81.27 136.049 cv
81.0522 136.089 80.8276 136.127 80.6011 136.163 cv
80.438 136.19 li
77.4961 136.648 74.4385 136.881 71.3501 136.881 cv
71.3501 136.881 li
cp
0 0 0 0 cmyk
f
117.676 0 mo
0 0 li
0 116.115 li
2.75684 52.7202 54.0688 1.92236 117.676 0 cv
cp
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
[/Gradient [/0 /1 /2 ]]
] del_res
/WDYEOO+MyriadPro-Regular*1 uf/WDYEOO+MyriadPro-Regular uf/MyriadPro-Regular ufAdobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get execAdobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get execAdobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnduserdict /AI9_read_buffer 256 string putuserdict begin/ai9_skip_data{	mark	{		currentfile AI9_read_buffer { readline } stopped		{		}		{			not			{				exit			} if			(%AI9_PrivateDataEnd) eq			{				exit			} if		} ifelse	} loop	cleartomark} defenduserdict /ai9_skip_data get exec%AI9_PrivateDataBegin%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(R) 13.0%%AI8_CreatorVersion: 13.0.2%%For: (Dave Barnes) ()%%Title: (ISQED Society logo 20100225.eps)%%CreationDate: 2/26/10 2:00 PM%AI9_DataStream%Gb"-6CQg$aN?J!(nitV?RRq\CWpoMeDXG[=;)t]5ekd\c1R]7eUQrEKAF7mAV]X?+J,S?nLreouaXYR'g.m@P$gE4m_r5P7%S(p:%`U<!Nj.![$mrhM,p8a*J_gE%g8f.)(48]A(o>MOGq<iI9mn_YC[N5N.^78r+nW%eG6HXNlI%'TV_pdq4&%@TAIf&Qtp$MYNqks=h%GOL$(Z2`eFn_uJdhn^[!(]ST(J,f/-Mr"?Vl[No`*1n9:5h"WgnF#`,%G_!Fmr#o;G^o;pRf$M&\pM#<oBQqT^99c8I=$HfqrT9_%^\r<Sk'2*"H[L/6E:`%_?VUk7o/F:BGP?%Tro:ngDVtEX,/o5np^QoW&+?2"cl;nP_7tGHIK/i^m;J[O[r6`o!$Atr&*c+GpXckr%4obtAWW6#bJ+HJ9eaqm((XlqiI@B,=W@\-pnW,-.#(Q7ooF`d*n^#RA]D!E(h0c_ZHMh]rjN%9!p>PE;c%fLAS9^R#bBsnJn*k,_%T<s>jSd[P?A<+';M_T%WJ%iPn$ZPXup"eY`Vt](ia+&I1RQ7g)pYkGMrrG51J>r71TtgJLJ,AXEO*A\FJtUDurT<@hm6,SumQKFa%+?(XY_YD4^IXgtW]A!i=HVaAXZ+%KZBTmfHj72EsLYI%5!FNORIJj&m57k4G9_Dl?T`V[LVK*7q'[T1fCV6TK*Yer)oH4@N?P1mn%C990d^P/BYlJ:9?GE9KOg?LVHp[7Io(sY0L2#]f%?T.Z7opb3!/q<Y8q^>\Lq:bj\i.7Tuc.DlDhgZ.\pNUb7r0eRQ_r,pIK@,02%gjHU4nC2Nips6GLG-Ur'"3ML?oFrPL/-UOsN^*8bKuSq`A&M/Q`(sn(:QJ#YS*qg1>Esg?Q%H,1_,dBPO,C8fCstJS!Q"&GGOO1a%GAMt_iD49thd`_c*q.nQnWWnmgDl:Ll1%j_hL.NGkJnh)_\=o?9Fj@M5K,_Wo*AM(Ipsqp'E5pNfI-&8Itg,'T@a?pKKla!apGcu%qh.3(5O9!]6qkfP`f*'tT@e)[NDSsT5*NP!cc9)=0DpZDN^ncep`S\BA*+tV$%MN:giK?aBkQ/pkt&@FOga1$Ck_i*T88=oOF,6E%nVH.BCk_i:&SA38^">RIM>q#QGl7(Z;iVFeM64"3ple41V1eZecc7E5$m=X]5<<CM+*/H,1#J3KgiK>6.;-6e\Vs\3Md,B][_^h"%A7G#sDXKB3MZ(GbfS\c0qo:hXHgrJl_;9%C:s%;!_joa7Y]QoSX/r8,+lt7(/.4KlFA/+k9HA2FT?DULb&p+ZDbN7$d\emE^7RXQ%0;b7P-;-.U3V.t[*9iCCGKb6EBCgi&ehOLq:IFhY\lJ0Rr8HI!L30;R;-#<1EBoDGPBci[L=3*ol>mgrh[/S?^@4's`?8OZbb'jO%r07op5CW4Uk)5`I14JgrXo/4oc!RUCs/kOlRs](^r5n`Y?b7?Y5CW4Uk)7-.+lbM2?!m4'j#;H^p;QkJ`t!Ui\FT[r+9.)pc"Wg@%n^)iJgKq(mnFLn'#P\i/C:V/n'tCkmq#C'?')ZSD5:fc.g';NA=BjYAJ'\sN10/'E@@Mj5iVj%o"l/aX4k=DZYAlXO/n1S'!X2LH%(uaLUTRlf)7;o/:GTbtu2K"5cOge"5reA`0ALhtKm'f+;aA2gF49"A+n8E\pBgd)/X@L-r@:\S#koF_rYs?K)I6`f,_2ENt:OF)T%([gElGPs.FH-\>0?/@;#ph>PF3/4p];/SO/?BfhZ]T6(&g@6X9<r.^s83,[BD"X6CR$CbB/>+u^BQn:1Zlom'79HIM6ei&o0L*0'%`QC,U@8bI_hu#G)I!ZPEh77C-in32a`Yp5EU4#B=@pbX>81i;IdSsi>/3Y#FWDB\t"!cA_[Nam$2>&!c!>m#$!$EO'^a7o[/51C:%C9WInGYWY@+r>LJ8>9eC`(Bb6T2+1./Nd`?UDGG$/Pc'WEe.eRH?Gm#QVegp'n['G7"4(#O\aaW)jc;dOdlt1QqPS;*CmbHa(sIg%>gV@rO`461$F0.M;SO"^iC!9EljH^/r1*R#157JUL`?.\,8(CB7K.4.Wusp:/P8([9k2G2Nh6@([f"KSpmKcI\nd4gik.NY4VA84%lO'<jp"C2C#Q>Cm+d2ujR7J]b@&<`=97b<ZJ<X!)KL_g+8-AQNoKpTA3c`;[edg>qUka%6nrpK2nIT[$K'0"`au=d(D-;@N4Z_OB%7/`E^POqG^kCpXN;^JT`ZF]A64ne?5g;%?*TH&H1qR\!(BM>jO^W$6=7,J<b[kPk\B._lB%Ih</\uT/$llJk&M5NIS:jN2Gc);@E%km]Hk?L-K8/+k!/G6i9SH^X[p$*4@#GK':R)sN&W\/%%fn9i1e_f5Z/-"p6!U>-L#45od7fktHt)e>Y[;aVPNg<S458?ICpCq'3A%T;.i[2$0ma_YKe%0A"XM`G\k8i%N"YfRW*uMbcLfEr?qI'%Z<Km6BE17pJN[aiYcqM.smLL;H*B:j.]9V;Y_X%"M_M>+JIsk%h9G%Cm=F'oGbM9*n$]J5OZDVWTf3f*+_tCNm]]Y]+BmLHT5[cD#nb'#J:Re@nXVUEtr5MT[im9\Y$[FMGH>fja3+dP4_Ee!VnR?8'7<1%7B1!_'-'="q-JBI,JtaVG7i/R+!2L>ODL4im-@M.Q2"*k96.21'kJrNT''Z$R[]8q<k)%]]*4f9'Xac"n-Bto3b'ODmeCLt+2A+P%_P+*KH1njIhslo?kC2c;Ie0)`Y<JYX'L20,_6$Uj0U3Df]g^3tjfStcI7lA[^UZkaDr<7m>3qri:=@T@P'Oj2MX?,tV!#mdG`FST%0h'%0,%J8sBkAni!IZTMmJ61O@t&$5*eniHWq8*u/O\,uIaccOP8BB5Q68CfM!%M)fEp]>3!jLInU^JAa(M&7k'<cN+DV.i_>`a_%$!r(J%\7+2Zc>6*A>7m:7[96fBFpcmf%VJ1SlU'8hRN9#WhFQr4kNrA(=.Rm9P`8N2moN&_Rl@\DRC!IS+'88I+eBGd2Z)a!j&=X%E6bsjhDq`G$\lh%"Kj&5TWW'h88TPgQLtY5g1J>)j#rIV2rm5L\!.AKmXDM`4NA1SXj`7*"V.`(4G;nFadc*Q&#p@UeUr=G[srKt%Jp%at77P);e>%#W+LTENdMOdDM`Q&&^*/7g>'lf/+Qn0H970OUGSAZ!cERC?gOUfRPEuiHgU5h<Ifn<`Y<gKtYG.AlbI*S2Q1^U1%SkM8pOmV0bSKk$![O.ucZ'Lr0'Ap)dBN](AS)<>_H6sQ6Xeg\OB3b\q=pgY:jW46Zj_i^E\C-mO]a$u`\IZk\FGi`TG!2U80tDFS%@?#2OXjG3T1VL662RPSf%9]bKRB6Wr%JF*q#R/>2mlp"-Q?EenMC+=i#1+aL\iLH?%k'lEd`])Y>.VR%P.m/4>,ON$T&51'd7:XF%G[2)VZ6U47M?gD4g>IWg4%-Afjk,tXmmR<n)R6/L7Fm+_%`TE7U6W1a+m0687GKu+H*L[1=F,4@PMI455,A2HL)&^TWiiITB.3;c%o\ORiB5(qJmDf/OL#bOHfeIhEATa0M-cX;QO7eNUMoZ`)jQ86K=;pd?f\D:L7r3I+X[$3!%P$Ws!XH-bLp##c>%k+W_G\O*2D*Lb%jC]-HOnG'^72rm?R6auYPIK/2+$c7=B!]_1af$@9'(UFBL,H3BeJ,a+pNto-T(SQ+":L2kA=ZI_$IP=CO4euWXPmN$iN4s\fb-*q%'?_cm$t]6<bTcYWpj&eobpPP-Iu`T>H*;ti=du\-3qUtk2V'k\^W-aIM?Tbjd8Ki5:=`ceECldm]]k7L<RH<1>XQd9'Yd(;btkFS%6W0ItR82M=TBkIo'5`"1%dc0a1*R(^ZbgqgHeGKg";6Ga_#J9-g&$6n'bMbB_q/\kn@-]N)f#b/dRE=0C&7aGnLU2qFH-DC;2H7Z%78GknMYoWE&5d^Bc<rhR=Z`:cWHZO#"$S*RoK4t&fe7,Tm<f`(MU#BtmLK+0]4%`pUhtXm(NA6)&'Pdt;N1VELk#(LlOD?1)BE&)%c][Im2,qoc'0c@6kP&:`61uetq+O.'SZnZi"[r]0p<J`[c!df#`%%q`]5CK"@3JVhKC-mXE"pL,;QKorc.9#BQ+CHg7rj?/`O_kI%'DWLk-7P)8Xq=Y/I9aPt\0&UCo=U&]hGPW.`%k9X*oieI`f_^,-l6]NdCVM6r)iZR0F#a@J(\,L]O)l[1eAmr#pZMe4l>7:'?=Q>%C<V#QGrt$,@kWE,4c]ME8:Mh21WB&B[YWh104NVC37VgBT4>XbJKhOZ,P9Vqlm:'r$h)j.rCA"o)e4^EhdtSj(X_%.2ff<\0Mdcp%9FK`P]+0Jtk^bfGn'qu/Z#JTc-bSJmI)'B9+7\%*'oZuB%Z7`*YK$$sB[>k_G9VNmCRmsD&VOl<^>j]!hD7a,-cCm,O0jtgcfUcY%j:euA==QLmWT+hF]k0jh8dl^>B?Ic/GW3ZgO3G.%$5@&9NnlAF9c3mbf8qK="$o[:I1k9^/g"Y`AY3LrLbJ-uE)`J"i[9CpbHaLI%3^<qjLO%`$DfH"kU*qia.t?hsdcZ,*>D_Ii/?B)ho#s=4DDm73H*7&SZ\G-Y'AM#S;%MffYseQjBXUl]s(f9PlJ;Hg7$2)1/lG'D%!+`6t/B4[Ims8BV"@'m*n/GT,?:#LW$QLE#p`F!FS-VEo<Y("O@<`r#>9".cV-j)EmBA`<#q0_E0?;(/jq0gP0mfkY_>S;lb#&'V%EVmB;IiN=h$,D+`CZa"+M`EFMHcX[!O$%;@7LEWHJ6"f%?TLs[^OGM4B,^_YA'2<:GW5A`^\R?7=7./O&c^$1e'C0Db-T5Ueu.L,%e1M3AA>I[f_p>4:&=dHF3BldIB;N<rpN6lpc6K%eH-Voak^LTWh%&+NH"4!r?PFT&D9*3re"7t`LJ7:Fn'eoE'7RC6TJj#&QgbsK%,+f_[le8_;@q30sc7Rn6DdG%u46T3c%_Q/h?0<e;Y#8n19g18ZV"<nCo1rq>N%\U!W.Z<'g`N+t$6)l$k2R*"0^ZL?6&Q7ij'?:8%\SE7)T'mlNU7Z\CrB+hHU[4@C0C,]<QnBEf^3e(=iG7IsHFHKP58ff"DN/l3bW4+1k4sVAdQ'[)gmH^99pQ^1Rs@3]B=UhJ9XY>R%);NhTS]?/q=c6P6g$Ru%fR_TA1"ULuFMst<ok3LZ+[aa`O`dOhl(`]k6ti3[B)b*iSaRC[\_l$Qk3::#ifX)&FrVB'lA._b8rN[[%g<IXf\!7P$1u"r4@,J8kD8,f)qXG#l\aj,)V[#mcI]j'^^O>ius7@=]Aq/8W?f->-pic8TS(OqDp#FMVg\5oQhqd0roQ'W\]:2%B%@NOpep<DF\48@n8eb1#2I'nHPqr[>GroWMBk4Qb*[o\(ZiU6]imF>:lCif7S]AnX8g^popS(DlQ?@R@tpAXdCY&6]J^AiqL^K0F)%FQ_fOQ>aHZ\),i@GDuN]gYB=tGLko=cu6(Y\Ess=I<'1sXR-[bnr]DjjJF"he'6E5C]!8V]C0Xp?+g7?Df;gc"2D%rJ%0oNO1fdf%q\h8pYQ"1arr2W/e_?R;aFUhX?bm`n2ihnVF:VW&8"&UlmEO2IVmen']DM$n%p'k0h7U:H\9[g%=%n60mdfo4_jfD!YI<%a?bO4h%H2mi_5]?*U^43Y>r&>VZmiQEhY9#m1_4-X3qYTO5Rr<3Ge_T7;rr$g-rq4<Yr'q^]!*l,pY9.]?@jg.rrT3S7p>936h`T8X+C02p%DslQg]Be5K-Q(W;1;<Vk6[ek$o\ofCgCN=/k/?ZcrS:]Eq>7W[YA^VQ4;_972YhKDon5*kp]a:#\p^5Y,fmc16E:&>:ASnE)>N@^%cZ^c[`\c`O5M9E$^:W>9^&IfpM(#3g@W^(KKPkl(m2^:N_ulTYobO.joEGJP`d5k85M`ue2$3"aB_p]bViU:46oJ+N-_f5\mk%2P%[1RW-XSF`kJ*k5Jf@K0;gup8+oTd=lrVh[Yr./)M_5$f.J+Nq8lM^Ul.sEo_`5BjcG:;qKDRnHFCRPesV0POKY.jr2pta3,Nt:tD%+$[P'I!WI(Q`J^sE8TgPf6!l4s-IYQs8M&rmB8/A*^8Yk'r7_0+(%7kBprC7Huj<njiijPJ%ds\G'/*U+):TLs2PWOh5HCFfY2Y-%e*ZURG^K<DaPmjgVak>76o"&njK9RldQ`L"7."64)R!QDDZBCibrtu'Y3m@GL$AKn#H&8TaJ].'o\1<!6MtI0>!UmD]'7,gc2F-D%Dniu;:-R#jRB*gcT&+jB%@ZSm0Rc8-%-Up1qWd&5]:4^QkkPQ"(!cE/d-K6,>I`YLKSnWh%_)0SDD((5A9*6!p`Hu+hq_V_Bu7ma%0\sJ=qM0hj4l(U/`P:M6$[4`iJ%l#5rt],NO*b^Br[iTI^A70p8,2<:hE?:7qs2:@T/OG,c<U;@k/6p0]6d?XmsfU+0`Lfumf;RP%]0G1.m.0<,m4U\^n+Z;?%*s,6?iB6(K//4O"YfrPqW$CegV8d4ldpB5jk[oDh8f9I?i9ofl/(W.IUlsrR%W+2IuS+=Q>UsFlB+)T%qBTdZIa[rGL]?J-!j+]c"ShJ9AaK:5=;]/K\9iYl!G=U*-h1h6iF,7'PIKS$qH&1H#dL1nIJ<_L8>Ch8(,aG(qqJ<(!%[9lY@BZL%If&d*_6Jumf8kEq]mk@oLboC=U)3iSoBu#/:ua6\`d@kEK]_l6j3tnM4MuI7p%LC`Di*6[h]JiZf0;T\mr'7UKd!t"7.gZQ$i4\=%Or.e%1[9ClqS)lJ'/+Ni:,2_g.UQ:cIs(:>5<M-d4P[Z]peF'jGm_=AS-O[qSM,/)^u#)e)bL6JE`KUV?$Ve#MK$hP5hEB4k_-f1%>R.bmjM%As^H22-FgEZ=@@T$f(#bT94MRH`&[#oZ%WLh"g/5"9IPnVb7G2`X4n]brWD<u9c:tp*$iF?S&0K;(CR)&S0j;(rS)F]k%C(o_ePGbdCY&*(^e.g4Sig";ZEDn+WAHAs5*6U3ELU)[C;dm/BC!`M)IV"BicQs:p4S(F8LV/BMK?HEe>]\"IVbN1jbrK<RACL56%rrohD(V<rIlqCK4CShITDnq4]6*MQ^)W1cKjg5GkSb&)D9tH)F!#H+Qn-D+9fM[GS_A1L`VK`R%!A5?Oj?>7F6@T"LIKd6Y36g(H%ok$D'[DTgHAg7Ps?,ai1\0>0dT'%OBiOXd0!"uLH>PQn1C-[4Wd,U2h1rMaJRkTP13_kIpHJ684&/P'/n.UN[^'e2]+SmE/i!RqG%^,E$AOfb6ks)YpRO%+r\&&?a&(lQiD7^^Y-DJ?iRiB#?<+*"AQ*bLKAP`H4sN1lG)ZEj]pg;A%5_)gT.`ioIM_QOYnpAcMD`=DIK%MgMrD+JhSi=-+K=(/k8P7Tll:diJ)#0(%UYJA`Nqp]F&u`(?8&:)''93(n4K#A;9^B&sV8/&7[4J0WOeXgFe4KfQYufmR.dFb1+K%8-c)DN(9*kTGKY&L`P]:")*Z=k`5_M+QAsrkQ"R%%CF@qoZeNMcZM=$8d`r&#h(G:@K@mZ::ZU9:heONIb`AK/Bk`5bp9Kg]8h94%6L2Qs;K%]#7(>#26]@:0@4/^VV7@uO#?796e=uFHHqkg/)X1sm1bL8^8no43VGhMSTpeGnNGA?H8t;,+$lS>d%;GW33ZkaoXob/Y%3e$JT3l#mO478,UR+<An379dB3(+YWjrPALDkte>8K5<T^Y^-k\qUSK!N#r)&uZc!9W5l"!<r_71iO3,"iT@un<UuN)Qr*XkR\Fj%cr4od.LhYM7SS;:JZW@E0#%*m#QEOk\r:m\J#;8ddf^$`rs>DVANE$#*sYp;1:U<4KQhmYq;Rm9ETcaQ4:cOE_N.XZASUS6>Y\71%!<)uoCaJXHq%?_rEY0p4Au.8Sqm/#mo61GG%!:n:dH85lhAhp1*(XfSm#Nu<#<;gsgQVEJco/ISW,]mulCe2G&r2"3!?uOnf7ATe%7j8(j`C=[$9GW=c'2(uMm0L-D`/9(\Bge=+YsIV%>=.]`??""A@+tZoDk`X.2?E53_u.MW^82^n[Ql$:0]T\d0`q'WA2i!\)d9Ei%Xjn)es$p;lG;Nf,%q26?>cD.'4JE\nfA7;0IG/SC/$s'OUp#$*m[\T*$_UrR/WYUOb>-7DSsIi8^n\ELc:60JRF^6Wo^kFkZt\_5%.Hhr_H7K@!i"`WJcU1(+No#rl^j>iB(<(8\lC&GGWbf2$l_I3GSW]Poal[&l8iftZ.dL*cXBrBAG289sTn^8;LnaN614<1dWcBBX%B\JUA,A>/X.7mO(M$V..M-=?,;G^,k8RIZXO_gaW?djZn[3XphO*DZm]$NR.n_+s->r;7kf,Y6)PqH8Dkh=1ePA;i'5q[E!k'/JE%I0&<$png[qm$8jnO[4kG-94CaWk@b)c_L#[g47%/8]9SX8JP%2-&#9g)M:$T4?#'C:I@IG[Kn9*`^Q,X;-le9.8B@udcm%hq,[._%O`\)X"P%W,V$EHK9=9lTRo.]_d_6ilorPb(a`ioZDBXPtNI!J@?P6WGjdW)W9Ol%'?R.lP,M"relmXuDrUWl?"Z0*n3`>BhTtE7M%W0unABBW3pmbpCnDLO3OUlI$G6(.&K'D[:uV#g0<?&"Nt@t2MCcWm($q;j'bne>qdil1.)MpkE:VnQ?)(/#<80u#DbnoW!sh9_la%99Lhs]H!n<bKH"DZ/W[lHIL+DNO7CBRcrA!qf_+GAm&ngcJV<9+D5ag.h/U:@'ZMj))e_=>g"%lV%na:QR$>SY:I8_lt@R,5CEPm%>s?9f_59@7p2+;?]e128@&Q(MN;6o)bDMBqIBBjpW-uo+p@Xj(T[7GX>RM$X27(!/EN;>:UKc"2SJfF^'8o")3Y9QV:TF4h-,3:H%$h[9+I:K:*WRb(C%ok53I&XIPcW7qJ7?*"?)1)iX;[MaF5@"Rj5?%SVIpM`LG;/S8j*835O1,q?K7@h-0,+h`nLPO0Cmn3`HIW(q%#DOR-k^q,o"/cYfA5,+Mi&$&;$(oWQ:+ri(^H(iRahJo=5.gQ]$hK%j?bq23\+M+ucOs\2CNi-.@D;6W,a##N0rZ`%d[u5<LYqrl%UKGT3ppm)*bh,YpkK\ONG68Kt=FDn%%%?+CnpbhU-r=>/:`]d>8HR-lK9hoj?X/6_fn1p2JnAbjV$cFf"Sungq)a^IGRZHT&$GJH%!u&>`6nb?7=J&:J],eh*la.f*@Mir*jCQ[kK'\fJ)d*5f!Sj4sIhKVpd33#lRQ>P`:@1XEYt<-0CSDmYFY\kX*3$8#WE$6rahYUH%:sTY]B^^`ZgM?NM)KDL7k,&D8C%Fl#R41N80N]IQ\`QLK)i>qL9E>5;STr\@?^2fGR5ONubj!aPO1YtgCNBgq*rVIAGC",O!4Skm%?YIM4--(tekO^<N]6&&>N5B0@31D1<2KLYH.YNQ.QD<,[NMT3'/P&9h>sRi]qIQ:)5Rso1E%Q!/&[q)K\j%BU]'qWpD;,SVO'Op"%)@*g5e$WHGVQl<BY=X18gmW\e15t]Yd;O2Lo7d>%KeD_/!BjR3r4Sra48?Lu?n(A9%[_;'$8p3CE2.9(c^6Xn1Q/!nfc9Vk5F]Sg%eQ(LhN]iL&14c;kU8$l*8.L!#OTK-`IMos5gKrRdp'P`@<8(U9m1nDa_%+frMmG>nL9_u?/Gm[,12a9s>:W]3<Kc^Jp`5Wjm&&]I%9&@qWLYkcc/2gC:/&gtP^^T%_WJc*DQ$,2$/1!+?F@=\JA5B1!'udK</#\/5<Ye36e:AGKY2+nSD9S>SDdij]fV_7Sq4,F1#T!1r%>4CicIKk7<2l(/1Mp61D/N;<G[Db$^fd&]"3pY#f5BHK>HYjPu[\%ZlF4]P*\GXDuT3_okeI%oQYqn%KO4BY:T56bN@2'sW&si?r%n^fOk5t?[#=EqMf:`+,S?r2T&&bBRhqaUMYH$G.2U9/#L%%]<\>sLb&Hj"g&-86VMQ_7C-asMTJQCm0F+)g#k?@7"/prDiCMgVl-%Ir$WN6s\R`G]KEDY00%k)"3ZI+?Ye4/XLtF/SBHoT6r$Vrl<nbKl;I\e*+N<_V`+TGC05Nc2JFXckY<FBAG:#kYFS24/nKi)H=1r%\h"i*A8GqmkU.>>\k3r5ot];/B_BJTp#Cc^XA?&q*C(k;BIB3lO`?A57?@/&pU!WRnsO0Nj\=_t=jA,rKl$<UmKJ*c8Gh(Ik7F@>%a4<7a.XERAHHchRf_:rlJ1@&A=W@b(cCVu_$0%G%Ep**o>I4+SKu'WJS8,,/g#n<Y8YCg,RVLT2SL0ZV`XF^2'Nf`P9Jm,?I!T:D%\Z[H/N1G,.pTg\6BK)&4&oeSiDeKAqc[1GQD]!'+OEM"7RWp>,LaU=<%Jl:12C=;t:@RsFj'>T?kO35^Jj%DsL3G-r&3m9U/.e_g%Or#(79f>\SM[e.1FO%<fZ'-^X9u:P@_6^k5Rk=PJg:d\g<Lq^oSCFq8g,4J[I_/#<34EFdUQQpV83&!%=64L'fZ4+MMf/NqIn,B(%Ta+7!n9?,.Gm#t/UrjNcdKk]:6542mBYoU=q^S<oU5[="&Q)Ar/Rsc(E<+Gl.'?AuY2F@+XsLA-;e.&0:Xi.;f"qYa)rRX>.\B-P%F6Y%EL03bV",so8f`9c/e8r&=0_KnGOjAYl$s9sR1/EE_U!4sJ"P>:eT'h1^2Sg/u@@TE`Tk,DI:J7r!noG\g=U/tlSq'\#AAU_N%_APRd(h`at(<gJJ]p_?..%&Ip[dd-'io&&8g[DiN'%aE7/6kkg.E/:A^d%0]W^j$P-2EgL't^KXRU#b4\XONBnJl*8f;'9"HVKgR%5["acB87SI>QgSK%$bRhBNQ?AUf!WqM(snWNhc7m[?78MV0"(f0Xt)T<lj?eUCa`pnM1\rbE^Zc<i\;^Vnbl)U.JDm=sPB0K\WPp%Q3^bA)JES^6T3l"Be%4uBdDp5'aj+\nre/7l^$%_RA0[?\Z<[E0uB!&I2o>6F.=[#<QKeY/[&%KkLgOKOeVP6$Xri.-0m/'%!EC"%e7`6Q\3\L?(u&HJc,K@q@^(+Bok(J8fZh[mN0i4/]U\,r1g,Njjgn:26Ei!W%Hsn23FrrN=U&uNBdo/rUlcVFBZIF*)T8&M)W&m.%=UjpABE?jZW+Sbh,4B3r=uMO;X-"K!V3s3A<g%3X&du:J[?GZJpQB-pPAFI;qF7L-OKEG@@2B^9/],@C'HU[k%180#n>'LO%E4#]%19=pC&K'pO(`oC0lp==&:_JPG2D0l/-AHUhJ92\r=p0sG]Y(a6P)gm!BTaW@ookn_%4e^5jc)]q]T9!mY\V[&&N@:->f<V$r5/""%M>I[h_sjW7L<Y%*6*/G@*P1l5I89R!C^O9^8>q/to>(R?WrR2b\Ag'GC3d%^V8b);gXdBW@%Wn>>DZd/3d;f@1Kd%H+><75n]V),%^huMJc)i72<sihc,'TamB;@6E9]cC<R-;t'>B9I(Hla<`/K<i14b2"KY&GfD]Orb4LNRf!e!Wp_8RWibqNOdn'1n)nY7L1RM]@(%%`1:ki*FhfL0SLC]bd\E(m*$URB4N7$82`,S4:k-2\u$;J7k*"LmqDGof"7_E;Znis"0!DB4hM`Cgl"OJ_@&rA,t,6#G_4T?fXM>]%SK5<97e8rY"j[K[%$hA@:'7!h2uuSJ2ko/SCc)H/[^"U\r^eCjf:rg8E#b$R_8`136O4VK.Ie)9quM^0&'nZ!MFY97d?+MK&E0.i%4sSflqIK#dmeX$U4ab]8`cD(T@dE3'Omt/1#.2^+p9)&>5&\Z/?Y;NG0h-AQnU,a3j&o)T2GUO"0jCTKaEQ3okA2$^53J?>Slqm^%mPJ326-*C<6VPSC:=Xcq+P1FjOp(*14B%lQc`XPag19GX.^lW.EX"F7@36a.qjNN0NEOi$R*Eb+ZfThYQAoM1N,4t-$alj4Eo'OJ%\Fc8mXR;Nk\\GRC?]VCQ%S7]Xn]dSsPH9@I:;Pr2^psOLEa3#44T08/+PGW6ViD/KJUs$F!ZOdB4Vq3^(Kt#If-C]7!B*R%f,1"R%:R7_N_Q&0qj@$DF@.!n*+oA!"G!D2cV!N5ABl!>3k<HuN%uT=^39VY-QClJV[d7I]dSYCPFM44KfiUec"a))%6pj%u#$D$jlg=+?%oQ2=5Y;gdl_l(aGW'6%&_Pe+@)1`leVJ[ZH>$XC9`.2q?r1J+]i^(CdZREjBEg/K[`Z'aH'fkMZokd7,Q?U`J>LB-jm2),5oF:b\%6U!9$1711_*/:4"S-rEXBPAO_JO0j:`kujlB%k8QGBfkH2"TmNAr0M4UFkb]E<d;%d'1E:,O:)e)*G$CXe9f'ed.:kEAAZ^-X%5>%>`tM^O``q@J=mRtPlI+>4HGe#J#VqH(lMeXHu5;h26\-;@<K1[nYT!@Mh<UES%(2<=]_SZ553iH5g#[<Bo-_sPROo.rSR]8%n_8J%-Ab11Hm\BL/A:7TR5=+Q=3HtfRoSb5otj]Mc>l'h6tBifNa1Aq`gl1fg[#HBSi\KDm^NPiD/C&D:;%Tp4u^>k7gt_F8^nKP`eOG,%4cLqlfKmaIOefOQM:p\S<->V%fk.Qpg_9@l6^(':D3M$#37tXJCU^h+1Z**6#J&-/6[lS44qb(V#tkr:,S`tBDKWT`E&K=#CN$8\%Y1h^.BFU$8g;9If_Nsu[)fsD>QbO9bZ>^[[f?S.rR.!6:GOaWN@_m/uRU(Pu`NJR1F=)>;,^ac:E7ZqL<S#aoi]8Woc2R?NGB.Ob%EV7e=X@5m'5"uWr"Mmmp#C\QuE+?qurgFM8G2noN8`n'3/9[jg9t-A8+pD[KX2Y0Ybs+h_WkoJ'I)]74imc<"WV>g1q`_p&-\lhc%B((]W<kj!YIZYs,W>FmVHu\d;G51C]4PH?O[<ck_h0sMFg!@q*mA:I$fIXK`0i9-)l7p%.\)VJI_PtZRmUIpdk(r7C1Zs2E4/O[Y%BNZZV4:;N=Kp2\(QSU#&i,+\?R`*-I0pY+R)&OSE@J#@)j6j_)$fL#t)GPOGTQ?e]*_G"o9R;lBh@i'4'-p_oba/orfqm4]*uE<=%m+d]ajC!S$-EhXhp_$Lp@_]j8k9;7s+EGC_#748tPK,bMb8g$H.J>L@c]FYS-;M;fdW%,>-/F69]E\:$O3,O)>j,2,pMsd46[.3C%cU.5%P&jsc4l0'g&'N7$6[W/KgR->d3Tm^<5Bea#+7$9YSb:4;S7V]unk>'fOI,D*ljqUPD`kH7UDW?qLZgt_'Q9LCI-MM$4C^HF%5J-NXl]XL/c0A-gV[gA#,Oa[>qsrCOA9)MQoXguB=AjnWKX1@V7;T%PI^WQe]D,sD[XtPWU/mF&C+jc6_]mc$%iLm3oPfD%E_'^#%A7PJ[0obkBX\U"og:/=8Vih\2a'JsJQD'OC0P+acoK$^Ab>,0P:(3aZ+gsD#-uj>p_keW,m\DOneAdbN#VJ7a/S(o<M;;2F[WQU;%fB1"r4"RQW0+,>;*rK@.LlG=G?4_KiN_c5(4+E"RN$,4^Br;QNF\GL5iNJ'S3'H11OH0tDo([IXZNEC8Ap%_TCmC"Q!V3'`*&],Y%lgs0.=i&0S4GJYO6.n53=\=Xobl@*V!e,(DVm+.ZdBf#n[`o]OG31W]Mb]s0@j/R`W8^Lk+,VUkR-l?&*,!--*m@L@;2$c5:csd]%Qk;_!,>]5,_M"7HOf+4B=s.;lC9"CS5a!h<'IgK?5rp]s1fHN9;]#g.8/OIh+?Z%&EXb2G-EU[;W)JcmA+nLg(Q'&dcZU:Lk72$;%JkFG_<e!0skF;uc3.@?`4;il+hr_,7%/X;tTK.;+?b731[I/-nSh9I[9Dl>`P>`c;^N">W9Z^'m;'NW045*PJ)jfYKIj34LN(dla%P_E,C38:uBr`5`h=HUlH_0"[I@SS637,fE@YUKDE5=FHp7,^?uiBK`h6kiniVb5&C$T\t/S</6$c7aI:lQ\/LogX&N:QA;#mYKCh%4R)G0e$gDOG5!r!s5i5^m_4%\rBTP&c9]JoGNm(9Ha1t)CpY"!hT2_Xr3Z/^M8?#oJn:?&C:j\UFoE8K?=Vo\g5ip/L<EVpGgY5V%NH>+;cX12WC!V80!W/[sSCTk%Cb9>"_CZLR;7QVuj3>3jpD7%]M8:-qX!Ia]7&3eOr/MQs$hhC9r&[6#5*D!XeURLJrr"M>kC3`p%?S9dGD_D%b^J,M_#l_m%_65`A#6tpT(U!hIHI`.ppV&\@%q1Ok\?C_ISI<C[k9]be1gV'qaPh5$@3j,?%(qPG1t@LKhV](*WP.DO%HjRqS0u3qNht0V=[%DojD6H\h+m</*T%bP"2<]g=3V?S?#muUh1A!IXDEeBTHXE>[VpD(6J5mIJ$7cNJ7puSEJ^h?Bru=`$I<>ad%5"B>8q`W!bI$o9i_Os(er>`mCH&YOj6FW6>LIFLH&GWCa&2seD9_nbS<_[o/K*-DE.MpCH]JM1EksL7FO:iS_#7'9nqVq3i0J<rP%Hjaho`^F6a!;-830L#VSI/4hA[EBm":E^.gZc\cE4ACoN36XdjJn*n]BY)#R^%dMPXtdZR=FG&gS=+"?Ce!j3ms*ReBr-fIJGMUX%X>\nRkQ)2Kdj\i8gAc0imm5lYVoF2FAccsm/ZfPUOJBeM?GSbSkG8-g9`4XXdIZlUScL3&0'8qmc#`JEL[Z;-lc:rtQf-o=#E>=9%'uc:n,&&tHW<GpX(Ksm+!DHH-$7WrN*dE$GZ(*k_H>[-n1jQM.$-6i-1[FOO)>Q3<ch$Y:RW?)bHOWq?rf`;1XhA@T?@STR"^Xem%r[hi3Oni9s"21$UEu%foR2'!nEo3o29J8<-s$jB/b^<_7?/?(_Zf@R\ElKFeA&:BqKn".F4Wfk<O\I,r<om(U&/2[(bX%J=pZ)Pa%@m->WmB@>L;n^3F,#%oYT^fR?>l.4OO7Mq!@s/(;WB'-m4dV(VHO>mjJ(S#\$aIY)s&fAT`h1WTD\S8_St2cdDPi=DI/i^iRu_M?%_>rbO!#,M0EfQi!Jl]p!.>"jN!*GW:-#P_(n>d9@Q$\Ak2@SbVG5L;(V.g2HB%:FL\\K&9iaW$UM\MT-$``/*k&cF\;5-!En<fLL%K'VMT_`\86QP=9Z.UiR??d<`YQPEPC8(q`D0\:>J6PG?V@=Yt:pC2U;(8M"&6Q$>#N9c4J`eJO7N,r/b4TNkPMG#un=/A^ic*H^F%dk_U<LD<s[g55qLK%DMN.1<8[\g;3C=S70NFhEmGJ)2aPC,G\t0P]3,[GQADq89(:r8O%ZJ,Dh3Mkh8g_*Y%!R]+D6Tl*&!bR9j=%d1TeQa5X-3P61:#Slt@%e2s\Hmbt?Mn-2"W\ImWWq%S57Gp2u2lihW+:MjJ_j@%LQY+V-`$jedb/L5mZYf/4q6po_[.Z,1_UN@-r%:0Cb%e=6rd=6NnZ-NV7'5+0bkY1c(9+N/iTi!ok*qrKqkpPdIe,ue'g8D#;K/Ph8;#FHDt+j?,VD01?l3G@`GoSIjF'oC\"e?n[U%JhAa;$jP52KT=D8nRSYd+d?,52rPj7FG:RN.1gU@JYXWhH7l&`YQGldXt*gQ+?X^DIcia^J]87[C)hH;NUUWZM`j`!H(G^kRYp*l%>Hq$j8)/(E3lW1P*^a^%3muLlg2YtBgQi!Jb\YL^d+5^a$Ij%u-A=_$2)74iBf6rN2QhWR;412\AZBhmK;g68&h_WqWViSQdhn`5%M:P2DU.QNCOUX([4XuJ`Z9_F3$LL<Tlf/E9JBa-]BC8IqDl'CsJRW68+?-XK%HoaiJZh-a8i>hL=^'/!W2hmB"Gb,@:flAd&Tc5E%f0OD@/iZ[\jt+l>K-AUqK&A&U,8<XbQ0&99;j["UTh)Ep[&$Zcs(sBC"(^!&"VhB*(G&QDl8-m?==Q?hd<[Di:dMIo;@T[Yii]ek%kkq(,1iSd>.4sV#1DJ;@F::cQ-qpW\$qDm!B)k_!HPp4s$Z8pt8a2gfDh9:o0F=$bX$B=:VAEX'.dF<c,br@CjQ'Ibco=uQl$\-.%2(0?D//\qUMNWrlL_.u^)to@^T]"/WL,V]UB3;7Ud"$47lPWd^geCn]j)]n8+Bi,mOeDe8k.W:pF03m%k/i>XQO/5OC=BFI*'KaB%C6?V/d.*um)l`soVJI0KGL[H7LBU!&NTCJ>^rCVV"%*;#"g)Z%Lf0XLNO@qCL/]l&i,rPTXK!9;)+V]?[6^$7$),K'Glo#L_V-I[%'i^U[LiKM(?pR?LJoA4s7N7T#e:\<:^D$qBB$;nD"FpPtNI*sJCWVn7(0&05_QuO)GEsq53^l[kQ(b$5@m@,7MB`4Oesb]M#*k:i%nhmb*K=5nT72[*Rb7$#+Z`25A<@?e1k9XGj&XI'nUM<''#1tsq@r9Y'o00Hd!bcf,9(XHTBCL3@UbRma]8JS0"5??PSS_P=DSsFX%8a?^qKrnU3)\kg\'&<Zr3o+Bpl6h$'/Aj04%CMnNaI)(02D5j/>!b(dI>XmH@$4saL`Z@SbU,6Q!#fY'kJaBX+2DYK3p+R\N*rOU%H-K6;Ai4!bOYRF9LeG46KaS)Pa_QtmS4XB,R[-U@i[AlsT'+VBL;mm"XB<R6Q7&E-Uh3mdgi\uS5ue9O%OTY>;T*i_o>;[QBW,3V%jIj-i367s'?gQLX:2-X@iH9g)2M%Am*C/p3Ru(Z)8Qt/JDW;BLSVUc6!t\D&"UA_t1`"6`A0h::BKUp6XB<\_a&Rd%7Y(3;C<]m]%%Dlo/GoQ@n>Qo2\f[R]<AdT7IW`+EV6cK/r<jS]bTf!^[aRipiVFVYuC,6h`jc*'D-k9lNKJY3%+MY@RNUb/m6PZ3&FiM4YNE;P_%3k%/C,o[=Q$Y8FXiMd%C2&UrRD0(N)WsgSda[/<u5]Ps9jRma`lY>PeN.2IRK([@3\'POR$)Uq4QnVX:)4YVrii!Ks^bTP\+""T-%%Tj[ePRIf#%1&Ll1$X"?!pJ.X^`qZ&EMV*L+)5ZqZpcbqX7iArcH/PKTtSW/!1oT#i)RY87;4o->;L:6c%6>>CsS"t^FJMPKnGiW%^,3UmW-KI^ad>7Co;(CJ$DQ8.PoFLYCoo=&2a\:Q_<+Au/K#$RM59=E;^YE6h?>]S9VA'5N=O=_L82e*nf\2l"r1d'QBnjBB2$<C%:9,7c8*QJe;&Tjo7[ln:/5$=Og,piVSUlT_ISh*7/V'_?COG]Q)!VM\=D^H=+^@_YTECN(KEaKX-6jQUgRA2&FZ/HbM`eks;CoHM%$r>:C%BYTuXi]?C@^&+UiMc?!]M>dn\UBX$^d;]aYHcf7gS\rK<R&8^G\C]'OIS!]pT>O)$;V"^c8P'jWEpie-u/&P&/L/^&D&&`%S'oN^Ds2Ub2kYlad-(YmaMs)_[M7[;_J$q+^sS$H$#.6iTuD[P<!p&Sb8a[<MPJFnegl%IY7r%'&n,]*?3ClnQ?C"UL/'M3W3,S=%ih=K5P[eBeZ)Z0,qZB[K9c)$Q"N-@VV4BHULN'OE"C=OH,7jH^A>30!%98DI-H<*\&5M3D4=5Ts9+Y:Ukd`<q#fgldpP-%565*$/%-bN@mW(p-R1<,H2gP-AleOP2p/Tk!tiXc/JNTjTn"CrM*42"oD70%24-$s+_&Ld!B3@2j.!'Zgf,2\KUdkE%aH3,pjUpaEsDoC%?%M(5I#(cm^<g*W4,Km024>]a[FGd4bQ$Si[;;9<g_#V_KpMRrSNlsZ]bgN&4P5bKfAVIW,q!?/(Wa&B^0,F5TFMs14<NOe&)Qcskl%\-UheM2Ml(BV;L:LDn`oULm`)B]'`]dC.Eb"[dirbgbVa#:?-aCsZ3\'PQ%d+sKe0E+%D2=&,q%%ecHq7U<T]k"IV*NZ;(p\E[1\%K5P2S)#gm"Wls[o]!nNW->$p,7iggo$_)-H4DCG1M@P#\7%/6*bS$'@W!+4>.ZEj\qVGA#B&%bO!\++#5V[iI6qg[sN%.%1I2LrY%bf,eX*[*@$bYE%A_pq.F(fQ%h.u5'Mef\4\5QX9)d>S;8%7cs_X>Q.Cd$BDQ'nq?iWFe<VU6],?`MAnr(R%ZYo9Q;Q?Tah':^t]X%^S?)\#bU+DU02IMI-mk-,G'bm,sPbu,:Yo%^3!P&<_1-@&pP&DQP:ED491qA"TYT>BcqM"pTuD#mPMSL/.6Z^4T&qAZPAl_%Q6a/%Oc0CO.#)k/l]+f%[KO05$E[T!1Q0!McoIQV<@h*hVY)Hn%sb',4%!L:"g"0n!6p^E_drC-'t:MuFces^MYT>6_Ku!i&T4E[?ZF<;%37ZD9'0=,GfYrao3l]rL!sP9Q>T(m+h*j-seHcDYMjlSFNcG?;Cr)7ffQBGm9OkaM;#k9fAnP[\]a/MV8XI3n5Z:G/>5$E#mL5n;%.]T`8QF<1/K"5*5]SinCcs_Ke!]D$,l>$FGS7/)%]c2+#C&AR$"F0>MmFO):jrrYFP'@X*lSQg\oXY`*)%0?G:!"enM5MY$*Z*'g%+RQ3h/4S;GD9iX,_nm\\A8o#L)qAeM+-*0M!^]eb:F&h>qA0QlZ,i+Nb#"(SOs+O&0/1e:l4o:A!7XFp3_Cqj>G$!KC&^M>[,P[_%n'XW@6Zmtfr\-B06D$rG$KQ?;F/N/nB*>\tS"rVQgWh)X-oekN.'=LS2<7)AQdUg>aCIFJ<F,.mL4sJ@ZZ=N?*aXq2U)=UG9Nc@s%%:BsG*%lMSjr:97Y8I*A[htUHD.E3p2]*B(B,0!@(W+-$6I%##32oUkKUM5S17=2S:u&f3)utbjc+)Xk-s?\a&.D8G^]pb*.<\H,%'caF`)g)d^`O<b&4&u'4coQaukb^-?=D["SQ:/0r&R*EO:9o'LcoG39AkYOEO0GJ'J87mXA,ig,F$+iN3Y*3EDE9(orS6jTQMhH]%>lA**!M'(:j`JVuHCbj4o5FenFqJ;qD*nmSNto0_HOJ2*_cVQ&,-H@4QqYbkaPOp]i%"hTRGe9NKI;._g+Y^8B:,@SmjF\V!1[g^%bXHXT_OED`]aIZ@HV>C]gAqRS@Bj>lNa00SQF4:Ldlp<WCtP*@),7a5Muu#;L.e,V'*`E=rGso%8u>QPA!9GX[K+Mi[CQCkREWrE%.42_Bo\hA0J6E4`9L?aMl'uA2C$_QNgXb^)LZfW@4,su3ET"iVSrLHE8fod^CP*ZRPZD><;/fUf.KuTa_/NK3mR/&6I,QIS[Xudt%1-JZNKn`^R1pr-/Onbs105ON&Zn[ch!SNtn(kB]HpI0)#R7nUZ@!CkDF[AFGB7Z3tWVT6#I>!O#n$lOKgBC#,`/1LXn&reJW"V\k%FUYk@T]'8O"ejpDC%tJD\;<sri%'B5%^;GNSTc\T98`%d<!V/')&jPqk*j*]aGN*dN(m*uLM/k#9K)DQ6a:L.L0Gr#:LcYYUY1*Q%GH%P*1gKT.Lnj>kkmA@eeE`e9`T=4c*+<5g:q^1f/_;hMD7%HI?Bn$.gcTCWgtu-fq?X#8OW)0.>h"P",(R[H,`gKAkbuBFkEQ0S%:XNdK3.<`0rK5</Wp!3IPtcReTdHPGh1dLKYaHJRFnm9e/?,DjP;J%5Ca0H:H41.ja0Y#Vo`-JEM(Nt@)*/"tNWR:\A%''^RMAui%d$UJa=X"@%d4fNmg246_m72\m3Xu%_.)7Ml159blAoqJ<T'UkKe>WQ?ec;/6GlY0>nc<&e'IQGeX@CrE_^B&M2&!s^4QB&m?;iYY%#%%\lB[_fi%_C=+\fD+(kb=igctWUj`CuI.elD.ECptT>R5PD<I8q:[qUYe*Ucd=/YDLjo2jF16hT`hbZ=!#AY<fk5YVenGBo+!*%(_N>EqG]sTUI7Z-C]Zip=V.0@d6J039#/_fcqU9m\MIAMW1aKMNX(Rr/VF@%AZZTZ6YJ5%WQIi!*'oKM2$RRO>DK016<l;fYu:"j%@`R'E(9\taChO2#Cf#6>'R)4LQC+hP)RQEdNtk_PB7;E!/As[ed9t]H!!dphds'dW=iEP^dIgu@;1>Y@;2l`L=%V2c5,.Mdck;Yf%-pol9JN.Im#B:9`,U_26k;MS5"[+TC/^0*dE#I$*oG)9dC).(?@l%PTNC%@uFa/g70c0.bQ!FcJVJ%KFqL=<G`4M3o=9*LgWI(4m%\=8IM4&-4/6]\`;!'#]iBl"QXcBQo`j'"Gh67qCVkjUlnU,a"9IO`5_01dI7O[uH@,@\]H5ZpXCm`Hu&5pE89=@)7fgBb-=]Drj?%.V=nj<.Li*E^7VqW#2)5`M:Y7UBNI42!4n42<<o>Q;KJsGkk3QhO^I/1IF$U\.kgFNI[3fp0&rC:mqS;GtJ.gSOFf6f"_Br*lCP=%=F"@6V9j?2`DfG#[7B/1E"!1'8OBiF+X(&i<$b(i;A^I9ib1(!1)?tS`<En#m1ZHl,DKZ3kh*JBFgM6T#7J31ecJ$RCjZeYEHE:!%f(>`kI5ZLb:Dn`"!e>\i#NjbOUG2rnJ0&RZ6BdG1AAmbR=q*n-"%DD/iOVQfe\/spR2KV+f[`gbQF]LK9[qWJfs5:k&>>u"`ssQX%%^q,@VSt':k@3_j@";89ROq6;-lI`EDpL/I2VD\RQh)-f\2IL,2D'!%[391!0iIHNZ$,`0`>CqVc"t\YdWQQJkpli:M4"1W5S=]u%/ZKMk2:?*C7.nJ';C4+^U27.'p#1\65.W\6Y_XcYH=@ob-dI9V'5nH*4L+JbD6dgib.aql:"I,A4DC"O;^7:#"_PVla`#!R0[uV#%BW9#5@^/7Q#Iffbp0PZ#f\gIB`3%[jc=X4<gtcc3[A!i>j-1g2LY\9LKC!9?&P9*A1S@9H$X/2G0qu_k3qd%&*`AK[^D-IuZ8'[K%cc"m7@-cNgBJ1X7NO&_M+GRfl$gO`."].&WR[hULY,DZ\7RA3VE*4J"ogEK!XHK9j>$sN$4AIql0)\REMdWWVa[TDWN!%'RNuX%s%apt,]U&sW02"^<m%r9:)coQkuoLW@K5l92U2+\$;,9*CpJHW3`!Q[Q:W8H.(]J-bW(U4PT#.X*l,.t6^hp;HDb@V->_aXU27K3oh%1F^k&4_u]1GC@!R#jij1KrRgd\=N4Bks\/988$?c!IHda#Y=V-*SEc$TdU6W['l*dJ^@fX(::9j-k^/'..]EQe)En?*f8"kG"e4T%E`F$4:@jQF?;92DB%fd;D:u4pF;'s[?mO3s,Kc<K.m1#%AfO'7Ymcp1S]C>O,7-W)k%I[>$j8FjEmeJA["]aMOgZm9'?!aab%_1_%gQ#t_bu89`qiruW03HboEA<8iX=2mLD-bXWL&!ec!%_B3X_Y?"IQJO&m7/)HUo^^_b?Zn+&6c/r'JiVA/dZDn<F:#1<Tk)p&DJNn%2pf,S>7K'\/I/r0Q4BKVS*fDUSSDQ2mI\TT"3/a.iB*b0Q,$[++]W>DB]jJ;C!BC,$/mT$LGnOeTO<i!LtO;04%Z8^OMOHP\t26`%5k-gm;)hTLem>d[-Bi4M-]EW(;CD!#fhTY#8\)gf*p45;.9#kZS-%+`OGJ4Y_.fc)Z$=>V0Q+@7B9t$m?#cg[V\9(gY.6S'r6PS(%`]cLUTK"Kp$+ciL[>g/'[+L(X(q6mtU#aPcW*@8Ydhid^Tds=,Lq>oF(es[6.\4%&Tqq&s&Y!$jN#D3u)60YH#T_)P:g37:"PM$D%Wkj];:cLrKfM:+[e"[2p#'Wjb-Q;[U'2Fq:UqkB/-h?V\Rd^AT49*t.30#C2*>CRk#>N*8Or$37_QYM(74iH5W4):],D-k<O/&i<%M$p]C*2bo*d;H6e8Spg7)Kh&e"hM@AcT]X>UnMG-*HrfI.?5Cslj*HR^h:paDF:0OTI0],j2V3A7U!58*ndGP16$>r$RdU?!Z_I\%mPERmV)Z:A?!?prDDd3;endDkUqpSlL7r?q]2O\9c]^2TodgT0.VOS!DS2jr<Ad0c\)Vh(Q\B<S(c_?t'\(QiB&1Nqf/T8bS4f(\%&TY'lhAU8D,8i4qppdF*`[:m'\!s,'=]q6W[]X<],1.^Nnc:;$^=ZS]Am:`Af?mhhkbD7&=CsjYS'(H!7B\P'$SsPA[g3Y<`+QSj%qI#,_M?^&K)hV!]9`l-%C@lHd:Xn/?N.arLJ<GNC?ZIt\S!G)X@44)T%C[Ti"#S>(APCRu0le:lp!C"r0`J0dXZGH_E?(32PG)ah%S8qjKZYg02eqr*>Q2P0F@c`8JN2PJi;Y=R:jZI21G1AB+PoU+d(2b?MW:F9fQb3n^.:9$R2"`*RB!M%UC>9+6:MM(RNn*?r])'_)%*D*HR/bkX+0k=>7TX>6:KaD`D59!g@QhsG0oQT;j-71&F9K&#rm3MegEmO6n$nq,VeY=G@G'Yl#U(h1r=</fb@odj@m+GnB7kd!`%aA%5_g2G+?d0pXLcrG?upm&XO%GH"tV*J]mh!1s`mV[-*I65Ya;,^AeV-d+qNLO6CEtZ>L7TnQ-&A[IDihrAdR4P(,p,B2F))ED9%$:qOP'84u7j/?)b)?"iU,KT"5m_"Urd&BdfE.l>Pkh^(jP>-alPuDS<>H+-^_Dp9=RkW8AR>`b2CPcOn6hXJN;N@,=%GE?.1hK]X%2R[&B&:Z=-1./<X"/'P";RrL&8"67E80Nq%UV*$)P%Q\_Pc(&<L4Kr+/nUP_G9El*lHCc0-`o=(//KOR$_X9EBX0a(pdK1iJWH5b%dI`p"S5$0]8%"U-8_"1l@iW-pA*pI)l\(t)<_NbWQHtn^i(p6V<5;I7,J;bV$F4^Y:s7d]\d\_C<M)eTJE!e#%$e0S^80d$(=!u<%Mha7`E)^E3R;ip;=>m^'99l2Y$7Sq5i=S*T2HtJPim*:j#!!lla*G8=\\8J(d;4]&RZd0QAK,SKlB,4^W2L(EH))hIGn!bU.?-.5%FW?F!I$-t/-YZG&TZ^2FlX-*nU4C3\:SugEHWZiX]Z5)7`C)7]OUjKKBCI+G2F?T[qBGXA5Ef/Scm<*C]3B&6lS4B_XWVL2A!8"$%EFp.c!G^&#*QR6<OV_?E@56!M0_J.c#)"5pOf;E)$Q0HqAm=3dLd:=%mSCO'RM2rISLJ3:n0qYP_,>P'o1M+hC+`[Is!-*7)T1eG%4E=\D'%%;G0DT"f<mW:32h"=U!H`+b'mD\MM_F:n4FkVH#o;K]XASUAA7'G%8,!C`,pF<0j)E8oAiWI&kYRR>gGs!<&Ndd7\ZgVD%R&?W"B@boFF^gf@JB9>Ki/$(1Gf21RFJOu\1=eqZ-?naS+B6[j(O*.i$c#^r.#RDFLLM\pe8_(N+ks7cK\?`bOGBZ<m*#f'2$cAs%2oO*u5.1V,MsY17U2XN%Q,8_E\:o-d'L#;N1fi`cK4ZmMX/*@^C`=s0%ud,@Et0G4eS(DuF@`k,MfFfSW:U3fEMn&Y@[i>A@"1c0%X=X3K/1Ne/h?6kclP_Y*,LTF@Z"=@,$Rho&VpHu0Sr$K6*!j$Ekn.Aa;tfN!\0)UmNI;@KSu#VYjBftL;UPn>=imZtOOfT'd0ce1%bU*ZZ#7FNG.p4d>=oDKos(CPWP%>*/F[d!,lJMo$kA`7Kc8SQ^I&*tSKa>qha#)Im2WA\4q\lRY_<a>uo+5(VI<;dmR5V''ck^cO%\:!`\O-QFaB=ah.SB\_j!pNu$!jB%pAYdO6D.T$.$+O=t>6[Wg<"Yb=rCWYBH+$OGp-IVZA:!Rp?\E%7qkA^b%./$e#1Z-Ji?ME,%%gCCAR-auj(?68np-t`:O.&>0'WT"!8,b#n1IeNkXA,C&A7^dBUJ81:_d]5TT@b^R/),O4RLC>NF$?%(HdeoU-p/>t<ARG5A/j"/%AQl.2Y4BT>7P3CrZ2*FFcP$K(a\&!XZDKpe>N?N1+UnN[eTTarMd#ae5fJ&iUo3S-f%!I1(rs]Ib*le*q8A:)X^R,bp]@-icYQ=G%#UQ$b[?*Ia`s71Y50iDc<MS_\?2Y@mF1h>P*dL('UB"Y6PO1Zo[Q]YfaB5-Gj;(p!O^^W2mLOOemUD[]PM!3]E=?&18^Ga,j#2+2%qNJRF#DMnLCB]d7]Ma!\==*qAl4\DK;3B2fQ1dW87JZc@4a$_=D&0/<RF(buMMJrM_2Fh<Il1&m!KF]5M(#Ih8[!R#pK:,uH$f;[%XR?gkl%MH+a]%)I'DWX]>gmbkO>tWb,mjT;N6!&Bq-d)n9;:[%_cf_8Ak^>/eH;"[0So4%m$F$V`D/=R-6-8lQY.)__tGe##q2ff%V`+6C.n=KbhIWcoK8@)m@@bMN;(sS;'P>gV(_9-UXlN3?"?;U9&I9(6k9W6L3c:>8_"nc*[Wl>>E6RO@E`<4kW0>fidP>4,>3`rZ%mEAib>Z-)b'rKIP;`OiAJ!,G+(u:B]fgt9RRc((6F6CU5[HI]TTu_9jF6##^k!@q1Z(J/f=)3%lVb1V54Hc's.d7lQc[rEF="#j?%ZhW/sF0386N035X@J3Nk6g[;rcJ&YR*aZ@d+V1hib$]HsPk1&%K'K#F3h06Q4f8MH1].nLL<lBZNWd>?LpL3'34$(k7Qi'i5rq@^%^RrukY_Jl_:L`lLC?=&&pV8=l6'ei++q[`0L$WlE[bSmBTH/iU0j%L/'K^(VW>RYdMg>MP^^9>iadAdSC]-@h;W@X"ifoEVmY7ti%JYrXHPV&1SboCQ>P<H2^*\]([(2&c`RY1d$e&q;Mq&Xi)nj8.f\YRNh<%ZCMLUes>3Ya/CLTQ1u]b/H+4sL98Kb1=[4#`^DibY,(%7[uL]2rS6C<lT3<<@*mbeV=m0D6kF8Ql_I-9rq2p1MPAdJatcrUSQm_4_"Wsn[A^7#?<f%LP'6"nLcPKp9#^Dktn=Y6D`DFG!-q7%cgV#Sp;JslgNO_LGHX6d4[%Z7qr-O9!;aZarT2#Kf,rl*4aqVFMm'n1H$d08^SP-+huE\2\$s,bpqO)]mZWWZIGcIP%t*Dpr-#t8%TbE^jcgmBd."GGnmb<(<ApmB=P/T'3!li&Z:dX5X5HNef;MmdqXb,53&g7Xm&SMOT6$4_1Q"RIqn^qV.9>h==<9R-s4L;f-6sPqZ%)QRBsP_X8jm9@2O&'S[rJO;G(:0>>?R&fC`0V7TG6Eim"DppL+CJJE*%D%<P>jD;Bc"7Rk4rqd/K_Eq`Q-iNn&E%4b@hpE3boC=+%'fm1eK4i@LG*qr-bE<?h.]8PHhqIaB?p;I=iO&/Q9<o3qOjfL0CQHB?A)8U4`&J4W[:1JhiaE;bBImlEbA'Mq0[&2"MenJ/n?k[@%8sW#D[0=Qak);[nTgFF<g#.PpTIpi:p23Q@7>4'nbt>9[mCMI7T/&ddN4(G2%c".I;5.^R*g<Q8HcM;`FX_Z!R3HHI74G;'k/!$_%2^TGjDO^?'8f94he3-bk4dRV#>1:,sa3%ia:aT[c*s'Qna:^4FYg:=',t"BKBdMKBFrb[l:Un6"<\[A7FP*'>-[V\eqCG4q6GW%a%0fFYcVhcQ=YC9TkRr*pjQ1;^<8!Tf7gqb1I]+rI/`#Kee'@n'BaZ6LY4/gN"@qG/H8%)Hc1S9\5d32=tZr-3o],j#WVu.*$l^P\K%T0ZPu8Ja^>=-KYF_OB32$m)aLSM@8:@1AQTqFn+o'Lkra9FeFD`Dog7Z8pGPeucPag[pjR<9UP8U%#obeJ2]O>Vl=iF9kk!CfJ$t%Y(mMY.6j3ER9gFo02sJ^_YQS-HL%<<n7TCoW7p"EA19,Na2VUeIF:Q'!EUK^pENR7(R*-1E8P+Z5DYuT@uVQ)esMe75*fV`5`#ui%@IS:TD/7*%BA5N=A-c.;CdbndY(HiH.5upt.\K*-R,m@F(N`cJPsh2<XiQn%/hapPQ'L`.h;7tdiRNr`"AF=U\iaYc-ZisPbXR/`%P>gOIRW"2EL8h:04/gM7__g;?46&%3gR@kY#ZQ(c<4g_>Sf?fjINXgVS'D<?Trm3OAZldfYH6_KOg2DA6Wnai%N?7cWD>RrqF20h%7[)!!mOedlS4Id-Hs;#=N(<3,9S6en@,6M+G_boO)AoEc20us3\fMgE'0\P-mFhIu[qE@]LgI7W&g>$Bq$lJlih>-&Y_(m^KPXUd%\Qc>aB?NegohQ;p*;.DbY&ta6.Lu'#.NOJc_$d0T/hth#Dr(S?F=<An%'!TKht)Ep$pR9?]n""WjZ\li-eY+&CO"f*)cS7dSFFJO%YM?lL`TElJ5<YUs>>r2K0@2bA:r!>@*)GVFV?MbBe-DS1l=ED;6?TMtAD__*c!rs!`!\SpPj^DB%r&*;@1=k,,h&KrJ45e[3nhnC%S87I4Wba:>LNVq).Q)Ip%OuQKV[Yhi'0=?^$;m**7u'DKa.V.qG!0r7:\jNIc6h[+jUqBp9iV_E<39:`SKrQ@8f'm\V3'[<Wgj7o%3b_;fk;?iV'fqT.#']0L#A2Zj:%O5PKds!cC>[b<cs]-"a,Bb_.<101=$h@EkmC\jC_/s>!#u]=Z<F:J.o][-UC"?9%X,_-@s1Zq%6W"\F]Qq:9DNhcTc&n\rjg<"Y>\hqWL\ZTB0B@%LJmC'o)(U(uXPq,"p/II74M"j1_Thd\4,%\[B<7X>eueIaE=?X,%OuQKUCH(]%LoJGM/K`3c+]-2;W-5:K%ise2I_:?KM'UTJj&`!&JTuFuS7mYs?r4u^k3hJ/JjPaI6$9PM*Dj&Z)RG&'*QhuHj-s0u/N7U8]4Dt-%3WuI!2QC%uf0b>hPTS6F2c6>Ag)if!n;tW,)I>CsLO7FDM.)SF/M++jS(JBRGoX_DVY-0h35o]1Tu3a[_D)G2l)5M44?t]pcll6)%@8skiY(mMY.6jEmE<600We(-kQG.W(L$OY?&=TUZ/u*K\YH!@mk>J[<Ein/`XMaCt7#)6$J864,a5!b8USgJPMSlB![!"TSR+M7\%Y/cC"Ln$u<EZ!iq'^f9A&OpjESSd=P0e^4T_ukir[HZGsH(IgZ3[bT6-lcL<]m.JRM-s9ge.gI>]NFJgpC-XB1L>-kbMR]bD>9[e%#sI2=b[G=VGh:E\0rJlO@_)*/H9_,QY_%([Mg[Tp.ooR!FD0:;NOLZ'bQGFq4[$H:3r9"8mXr]`g)M+?AK6>;hqIb9p^7"9IY\1'%*3V0I>KJG."4t8B'ccPToV-KtmBB1O<SSTR;fQ'n8nPe[jj\ntjoJIC(l*_[aWP\MZ2@b3!pks="B?Knc+^UO\)BL3`=)L4piZb=%jb7F^4b\YK]MkV^$1:tM44jQQ/5\&L.LP;*@5,*dFmEMYeIJhd$5GTs"s8-M%PbuA,q$luThsjV'(&o8r]/3#git!G'Aid5n'@qQ%@e=(<a.noVO)RP5"(k-3'(orY*YbP.g0P*N>3"AVN7!C56(?%Fno/fgCgaDke6!f7.$S][WdS[76\kK%+"uc!k1Po.YQA%[NI)3)%G.&nk5'/?^^)=-A=JnELf65m&[E`rMaCBBiTgNf:]_L)'-tWmMbNX4@LI.9X9!rU)HK[&To&GED:ON%qVA3(UGCEZ3Z$Z_qQLN-B%d<l>H.AV0:/>:k:K\f.&\#/f7[`7[,6ANgEagfj450siWhBlHh;;<Li-ebtO*?9l2\a^;M-RpgLc!TS*f#&E_r!QTuXj&8OOr0!.%;!E&j:h?r(h"7_RLo<&]0KZ5[Tf=%Ih@\["j5*OFCH;Tu>W/TflUB,/o-lnqm<7K2Er0C2DC'XSZZfg;X)@!c9pPGgIjsPr/P&T4%jc@.<a1$fbWYgd+Z\&T*MSm7fn^M'gFPJmYkn'fafVi,`G!.e.Vu1eRgIZ;hRWX)+):O@>\/hK-Q@k'J`N7cs?NR?+m9J0mO[X&f%0=JgcT\24PQZ.@eMF3>f>7>7W#ZOY<d>QSYKC'XTW;-)LqO:#fmcMCG"F<%]lVSoQ?VZ&%#<eu!+UTPUo9<!Sl^K2eQlU9/_$=5g%JLrV2]>bV.&6*X/Wa0Dl6\fs3%sBt(6hh;.+I-$4!?]%KK/`OnKK';H#-0phk_4TD6`Ig(.jEKWDN,MEB'm,F0IV&%$[VTP^)Ub-%.ZpG?K+<SjN^:'km<\1STCV"GHpPR%WeGo+`mhmEm+r,6E2h3$-@7f`*a*F/6^>dBSGKfSL5a!^`pB?lL@X!4`EpaO&D*&EmDr*P%itt2]eujW8o*I?^a;MqjaoiZrLc*j,f'r4(@]Xs?]8F+aPG38oUunB+_(o>amTS5I<]SCSYG=RANg3i%W!_;m1EDX:ECGXLQ-i43%Ds_l70V@prL"ntA/WZ+r^stXdT+-[7WDV;1Ve"s=!f'MY<POD4Wbf+A*3M/b+1%M&7I5OmK..gp<\"R>csg=ReFIQH-rbJn,l?/q%G7O55'//JPild:lN?2(JITXKLf2uIMA$jKGI;:A*OG`clW3SESNGRL`n2]YHAd9&3'SjNjGTW*d>jUhsSdp<$Vi>HCg@`g$539fm%\UdlM-t[OB1%tB]$E)n&9QLQ,8t_H<kuCA:H78MAgY$)o\r=iMLNrok"qCmYq>aQNatOXH#T=`&07o4!f@ooE@6Wen9/qO17bFrn%6.:THI%95p100]AX?"VR]d\^$Tupt.UiXtq9B?><fg1<%`SobOdN+CZ=D<.YLHq-L7^[$Fkdb+cji=\J6(Ccf#./RH;*;LZ[>WO,%fdJDL-gAn['@5G"TunH".'-Y9@I6,"H"dBD0c_7hWs?UK\44r)%Y5OZQ0LeRf5niWb)b^IJk1D+-DD^po+5FCT;oW^9e1RbUD/^\%D73g[6+(dI=q6.lcM77K\Al17R]!fOCMD<Fju-OGkNHTfa0qet[<=]TR+M7\L+A'[mCE`E/>GRc*Lt::$FGaT_D1CW:"m0`Db?ME%[+71i0/5O:d:#!=>i*3!7,09D?<E@V:ds?!p8pgi#N@U"r[*XJ*`QoLm?li<H?eVYS6p;>8a-5$*E#+Xp3UVVE#aqWjZ<.IDVb8R%Fi3R=h@]C!WKOa/>ih6U90*d03!RpI[HjO(I*.KdE!5]";CuS;-!@Jj&+>g,J@fR&9:G2CDB17i2S&2_N7ir1dMe#e:MGgA6%odh%.>*[r;%>Adl]jhi%YZC!Q"o41p!@,2ji7c)K%4^A2Emi0Y_I@';Dn0B?:WGT-Wp=kC*'C6[R(;'FW9Mb#@[pSmeil9fC:2UJ[cIG%.HecKW:@Ej[W_UjQqt9_6Co<k#;"^/T57ajB]lj\1W?>P%;L6p<(^)55\777ZXL40%r4?pl_$XtZIkhfk&P,aq-6P5$lTh[/67@N%CY(S%H-M-]Es/a!_)Qp4PntOnnBN>$R:\#^>0$M-d(@FDGc7oNl](_k<5u8J0fu>\Tf<HE9#u>&"j90?2&u`u:)h`d[HjO(I*.Kd%EWkpGE?dQ*<7f#:>W2Orp3q7nV$Fre"1`cgRq_*mg:#`$mN'j^ctQJbYP&S1O14UO@TPr'e<o%7]Pa9gWh<caA]7=;J5iFmUb]Dn%'TI,\'=/[HVpZkGQlJlDj%r,6:h=[0&r=7Z*cqd0NS-UO%V;u!CL&u^Gng;OF;.eV_c,r+07%N':\jNs+0`?'@HFsC5HNf\%dZf=%H,s#a$dZ>:i1\<P1bq:$CHC4V_X!j]L#R&jH3a!Jo;Ls>kn'e6f_fi,]BHZ]4lsZSrBD90.;F`2-TtG?Jlf!K7L'`@Lf:NZ13R^J%`bECqI);tm/mJg4Km<uq1rXJAf3%\YF3/hoV1YG\i^'tfm<WH5:\jMhrsqiqBS?k.^\Qh&DXWh6IYi$]me59>WkI]F1-'dKdd&>o%#9E^#9=S#\?=Gf5lDWo6$Tj6JV<aVg\`UiapBrX?("t>sj5$8]-+&_"NG+D3NTft;f%dlc#Y&*:me):fOpe6LF9:sWSq(caQ=$ZV%&E2V\D\(6.$BQ>jaE)4#*tIPHa"MSn&.k1jF[>J"IosV#-+Y85;W&5EM:D30-Uloq/l:sV]gF0M>K\P/=-t"-kg3`mpdcoSQq87O%^a^?32(f9e^30/4[12^V5@2FSCH+[t&>Pd9no/uSQb:iRF+0n7pdk*nRM&*GTqpXTH?YJHg"*ah9@Z.:#8K:adg!#9j_b/V*F6%=%Agn`-<DG'p^:!:#_gKUf(\71%Cu;2*2sV&t&'"?9:&61VMhZ@QB2h"L_j&D[Z:u]^Ma@8%YOOYeF#2[(lf'KfP<!dX?M4O7!](lJ%_60p+SAT]jM&5dU)WkCrX\)#R*_tZWb:>?!db1U`U10?ZllN0SVLfnjenlu0%eB`_MPbWCj`aP'0UGWcg!Ls>A[PD&>.Yh:bbtA`%+\rX+eML$S;:>?Z.GUk@S,Dt`/Y$r1U#Q:0al,%XAA(7=JC3Co13AH2A9#9LN7t'\CNIf;W:<n;FferA*7@aq]S(omoaGK6&Mt5F%n<S%&p<ai<7Jue+U6seIcJYW:M@4mBm4)n2DoBdGQkrSn6TJuP@I&3_j)$-7%Y6+!NG@)!p!@,2ji=\J4F2-8Zp`_^p4\..nY/@O%Q/=Gp6??,iK`W]KW:DqBF01qENRqZ`:n^6r34OIkRpsA_NARj'&?,-/S@2brgb>Akj7uFkkp[!B;i8N2)W$3OJE]dN0IWq$;'dq%%<<e"Wcqdm/DRH")H",.c;E0t]ou0)VapFLe3WuHV2QC'K7F)G7.6jDNaDa/ZQrj-'$L[cUiA+0#2li-:YLTmK"[SD8Tso@%g6K9)%bR8*BK>A$kFcTU[(UEE0'a-AuO/SV5=4]aUI):kU+#<bVj_`M<I/,NV@$\VlmGt@BLQ>n$;pVn[3XXJ4*V4!a6#pOSVB549e>k>`%'>@Ck<'F1'%dH4%"l,!_Gg)q%NMj[\\a`Yreun0Go-ln1aQoAk,m.cVCRLXqSEnR1s-ffj=lC:cT5FD91,mk#4KmL?.gg/b*QSu+%naKD5Afr*_CHMX3`/Q.r[iYM=GYbm>1;5)Em^%2f<oR]l[mDoMT>;k^_dlZP#(+uL/&u*FDNGh6[X6oCfXk6KAd<H)DAI1A7,p"_%U,AMP?fK((m9@1D3m=N"GSsj%a#hW-E1N<)=hq-N%FSK./&!Q'CTrTj11FVM#5L"*Fkam4Pi6a]=5[Zk[k]cBmjM;uC%15$4N5%B%l^bq?b);U,2j'+3/8n&%gFU-@KEe,UhOHS5ek@+A>#W"f.[r"!e?po0:Z#Z*cr&Y3!Oa1/*q:X\j2pfPD*64[[HjL'I):l0nMLnu%SXS4J)PgQPXU#@CNP;*$'Wf+\>-1k-h?MXfc0MgkQSp\5MpRt/[opMK"HC<7`G-/F\C*8CMHt#L4,<Qp(GF]h&dabU&$3._!cA0T%&6d-RW"c;KmTJ\^.rBoXo4D6Cd&Yj"()gciFerpjE%=2[^hiOm"W]5"Yb9^XG!0r7:\jNcYERNGkLF9\Rg%RsBooPE'1+-KK2=Xk%m7Q+U][h5[ljHl6hRk7XXbCU-E%=05n62NS"V%W9c%9EV3dT-(n=K41fcDLQ2TcG4=dp.2MU*D%a*COt7\Hk:MVVt/b"0^"XhhX8%VjJLSb1`rT;LE)-fa?7\k\t*M(/uqj],j#WCOSCpj!6'f<iF$\g8s41Ig-5+G?\#u<C7rFD"C'<g/,iPPEr?OY!_KI<n(^bQdRZ"%m:'fJ"g4ZGK&#I@C$qNF-(dO(G;!YdiP*@"V8LQ"n54FBC2$Y%[j!\.Rn_[c8Xg%"a=64NCO40e]m<($46XQ+oPc<Cj"ZT=24b:b%d`,5Q>A(-f%J)#5StE]R=Gsi@V7MgJ*^0qW+MI1h*E&[;HfqnQ-#FuTT:_B-e^e7:>F7Z14(ra_D&.(>4lc'm+uPr!?dcsCls%)N%)r=M"]TAc=0RqY?'irap!S>IM88sZCgnREb6n`KfZ\NSq!Z#!)Bapkl\jl%:Y,';DDM;^ci_cMkPMo0gGbTV%f0>&dPT)::A[]6r%M2mn/=hq0/%+79"\0t\$4gasS]95(n%kX@8>N;1gD9L!S4/aZDZ[gd2AWM*NWUY**OuAnHhqIbM@6WenMg:aV7igiB<mkR\\&'p7%^;i'q<Cn.rA']=[e4SF;8&1Kaldc*'MRpgoTWY*8!cE^)4Q^BIC-3NeQ*g'\qpqp*%eD,6?HCe&bXl1#i_%oUi)Y(,Bl84uer%s"%FK4;qU^d%Q]F*7Oi+qE:2.d)9-#FE:XZWpTCdi(SA@Rd\$_gpBf>3%5PT):7DP@35UVNXjZrt2Hn-m`LoaPe>U^!Nd[70<uATC?X%?F&/WMRTj=WgFgVQ*a]1V=;\1ZPBHBd,@UN/?!`o(Hj_$Vu1eJ]8<:FMXakARg%SR4,Hdq`tA#&6&q/B1F4q,aB`.Vi*'X85g+j=%bRWo1g8s4P[as9L4(6EM3WuHF2Q@Rq?-`uO.6jEmEZtP5E)F!<bmN>!XP+lEE>1:&Q-!``a"QRmSVt=-lWrg:RV4b+%ViOM.laUo%.^Ff^b"=5K&?+SBWY_dC%isdi5CS&./($A<pQT>gRh^>%<B9%FP>rnRU-A;1TdDhRZ;=imR`?$&J_<>U;gcBWoZRZKPc7g5@7>$6%<4g_aLCWpE++K3TN"_e+8p3I1G_6Ji9$^3+B&.?RMNk)kKa1uR]RWn09=L[cY'%QA->)]qAd;UdK-!5C08Fh;WUY**U,JTXhqIaN%?p;Jh([qY!m%1p?E>5f`J?AGPOZV79P*Dr^c=K")mu,mn'eN)5*n8cV2LCeW_!IbiW6GB+B"^Pob1(YkHr1hYZu>=mkV/WJj+Z8S%+JS1[b$7f5"l)_r^k)tQk+p#$,j8_C9,qjde=nkB%^uhLX[*M8[2PDqe.oAo^od6fa#qMoGWL4L)c*k[m<[tMTCV#r*(#&?l>5Q@%Uo;N>WjQK$@*Q"uASSGr2;2r3't$>>W8ZiAQgRN!$XsXRU,ECXQ(IMZX-K[S6r[7;`foan]A>QlCJMO0,7'Z81D@W_g+;/_H3S)d%a_YK:;hI6?fDiCU2TUq#D5=6jbd;8c_@3c'\tV(j\<WXg@(%gJ$T_NiRg%?F[HjO(I*.KdEWcEL'es_tD,tU)4bGSX1>BE@\4dA*%YUB$IXJcTFBd[HAH5_&_%eB`_%31QbUEHCG(7:"e"HAH$(I:R!C[HH30V@pr-!W`>,:n>lMV9W><dFrVcIJX%;PjYl;mIlI<n)lT%V:hRfef%m]52MR(QlXZk[9:?-Yjqk%Q)Rp5iJQ>?W-59Z4ZCT_r-5Y#L_HdjWhU<:=i$eu9mYdTW$"[Y#RsrWY`4l]R`*$cB!$4F%euiEk9,fjOl/:K_0Y+u(/^!>BW%KF^WEurT4Z(B\r-5q+Lk@gZI^5\+$TKgG,X@b[R7TD[9i-MgfoD]KRS$/BT#Q$WD&oi5@p<Gd%:fl.Y"fJ+I/'N.;C6"=c>Q]uN7;LLrLO%.*B=NOa;6psJ.r)DB9Bd=I>(+RT<fhT+Lp,"p-MDnc[4<0X0KZ3J[9:>Vp<3lKPc7fJ%@7>$67(_$QK*1Y4)h/MkYfq@%Fcl@mY_HBHRAo+t[<eZIVIh<Ah^l./2F,'^Zq'G@I4Sr`fgEFtki#Qg`a^'$C-3NNW/[_/[rsnS%R*Y9^"WThDC@<rt7;WfZ.m8OWei\rQ2\&\Mmo&Q].!#Y]TOlq?j6PX*g7)RF:fl.Y!OpK5*qLdYj6<MFW/[_/[rsnSR*Y9^Km^_r%[Okc^Rg!&4cQL?K^!;>Te6iMi@&&K,UJlt[eN2`9,hmAS`#e-"g+;/_HH%0NASO=F^8R#=g:)8()jnrjj+TT]^mp"ifi^IU&%1[Y%7'UQa>+ll$?AV]eeiXZ)Ktcr"[*AC&Enc%CZlWsND&1K,F#gV&9T>sd(U`c9qpqok"7lgD?Ha!4Qt^B?.^>^+$b2In6(2l'SL5jb%K0==[R^AeIaH&NQQ*%/E-I#8-L"Sh!;4@aE9$]%B>FCo`*Nl?cJniokol+;&_iGUS"9J,T?K7_JD,tW/p'6bO+!,:`C#`H.[$:l_%h:S$1;&2$If!$cX6`YOCQ(D.:[5'TI,$\!7"i[XPl^Yk?b)2PT!HAFs(R2G(2@I$[Sfr]<<W/4=2;#T+[70U(A[4B=XfYG1gN]Ec%@.mDue7JlNdPD9T<i0IpLF[,GT\?e[o\;-mo&JCe?u_l-=4CgcYEIiRd$X2HF+mD';W#(Q<>7UB8X_EbI+gWId+4R#:b-=fJ7Eht%.ZQ9)9%DniF>W0PGcG%bf0b>hPTS6G!HF3b3N#p1AcW,L\-)h!c&0P4CfGF\iC&8IK3B@t[C-9;ipZs`Z\,j+2Cj"Vqs@jH))o6D%=OSEiA[:nj>\hr4_gKUfBD@#PjCG+/Xg$%W/dI.<)Vh4GUc`i_m8hkoi5lHOqUUijE";L>ceb/[-*f(]UA"h9#>e8/JXVL;()5r*%SSd*^"c$-0#$cMYmuR),-R,J2.]SA8=Eg<WIs8Gm%9Zgo7)k`/R8U"DfZ%"<:1E_#lra4]E*Q-hNEF\pjsIM#LVuE#Y`3*ahAOuP%Pfq$[1l@,(j?9e<0cZ;\mN-8@(aq\_a5AA#m=s0&D9A]\q'VMe@qk"I`VDC^&>ZXMjO(P]9ohAn2]DaO8S&s3GX&J\i\C7S2kG&0%.LhCUa@B>NoE6*g6$B&TI,5<!K-+#7f-X"Zke<AE;X(h5:UrHM7W-mB_+#K$I,9iFC8nX(6au.WGYH0Y1f`4c/^CuuP`&ISaI(dC%3gNU&1GgY&ZB.'7#2s"C_?:[_5p2K3)Y03U;X(h5:UrHM7W-mB_+#K$I,9iFC8nX(6au.WGYH0]1faQQ1LL,jE@q\1=ZFRB))aH?%M8=u]D\*nS/^c(:D*-Z$*D`Y]if0j<S4qsW=I`j\)2<7qNG$UUD0^_NbPfeTQm$,eD\ni<ili?K3BNX`$sL5;JaHMWOrY^:H%Q)G%g#<iP;7e+>/\GY5WAsLh;_ChBn['iBZ13c?3qL?IC:CW66au.WGYH0i1_ob80Bp\"?b%#-'Ec.7c#A,l^em$J%E^!%-YhZba$Sf"%E0JG__)Is+ECPqc?#cHqB,&eY2kDb9[H6)P/I0(#&saXsCRO0_4E:4WY?[6DRT]3PIY6)_a4a+_hdF!,qbOsMLko$lD:r,C:;?=`%]*b7eZ8g1M1Ci[A)pbJ=g@>[.Q36&"[O$_jO!=KLiq+0c\N$@=N)g[ETfe^]5e\bO*"f++&=MS`L.\l(P,\:]Q:n('Dg^[E!"-8J%ELr/&*7F(1Sl*,-]eeh'#Jahs99=*D2ZT)7IcDjnB@L=gb4jl6Gr@WB`siFlVr&'^/W"8aUtS:0*7uMe.j]1?P8iiH/a"(JEm*H)%)p^L>dr.@DG&)G;c<Cd/a1/[9hDOGnhtW)^))Ys+Op?u<B1$:n3YKBq2[$6f79HQ!G(oBi*FGeuZLo!>1MT#]HZ33_X/M2(,%]7s%paT""\(hLRJ+*"K@M@iT(_3M:_JUS(o&VNKW*96o<MUpFS@$,8jAm95LWE+#2Q?tU9iZ:BD;E,T9/L#!E[_qt,sf^#/l0V#I-'c.%33!0UTU#;,-,7(24$HP7`i!REnVQf+g'XF6+<kKEb>P<PHi`^uJ47Eh&ke!BYtUTLq8K&Elra_bGQignAu(\[ed.N+)EkkN8i7At%Km,aboEGHC`&%%!gF2ReWFQobISsCdEq!rHLWs0/m,L4mOa/FJ=ekLSDfF<s!l[E6EfYmJfDMXn]=fej.!9k(\:Oio;DT,af_GQo%$HA8`6eA.#R[.,(]6;O:a,2>mpZNSd.M^Nh\:F_#Wl`&Pi8n`j0eICb,E,F+7'm_L'k40(`_IEDPYsP4a1Xo?($Ce`n6e+E.7Vmo%1VNn>)TtOWCc>?/;2t$Pj4-oSa+fMq2l,qD)n#_IW)00Y!jgCD!eRo(M*'l895MIIGh+N.70ID,lj-Ap3A`lR'NRNY`Xh>YHkfUp%b=2_PbFm#g$g"lQP3h6ceT-j?*U0dtJ-jP`U"Q(C,;YPZ*D:(/dPJlC<DCa#lO1RrOU/b@/?+"C%?,;g#d7A&,Y(@5GRD#YM4kTt%P>F+k%bf0-Zs;m=1ddepld,f3V6c<V!kZkeE6Qat-)7tacNrWq6>(.lK+G1ce&7]B1kV$oLai[m?q2MR"V3_E52blK];::bB"d!q%m_/^?mPR%"/2XX$iMb9h!=%B_*hL^,ic=)P]dZ0:*49K2jN5O,2gcZ2rGFal&t+`*l`$!lD'oj0c.Zs.P<A9_)kCg;ZQss$WI960%^NOAZ\+aN9o=WWM/1.c8]2qNEs&F^?rDg2G4>\552^@Vn<$b7<5ARr`olX14[.W7VHg?hA!a`+K?KeRc-_d(.Dh(MFDPAQP1gPC-%Fe2h*,bYuf,,"4Hj1i:gk5/NS!:]2AcUecm^,q=#''+?(UB(HI#gDh?pk1@L">G?L1/RHf6Aa'o6N<0T$N5l$m7<e[kXW58nBX^9%a9h05rC=HLI8e^\\sT_o2t;>GW0%uh[q:diefk(jB0-h^`_KO^@3,QT:4]MG"9$q;+PTJ7=<LD&!eP(u`l0Bt+Cd-Od;7CJJ37Nd%W1MLr8cFL,.OGJ35h"iI3ATeb7We(W&AE-u9(6g!Z,&ud/IY#ql&q>o/sH(!/Ajqe>iFhUB%Ve:i>qt:[1[]56Xt[7T>6]:H@LE&%\r#EqZh9q;q#P)/k'"*$;Z$I[h18jS"EOSWWd+7:ec'CS.SB7k_(h1k(JJ*\Gq*ZZ=Cap_HstcR%Wams^[$l4QsB4YDtpRB?[bAi%J!*:l0R8#C,jS9QI@;;'f+Z,e)U'D9PXlQuI.7/H-89Rd*Wpt5;Yt:GHB>D(4N/CZk4TKqn+Je"Zq^WS3;2\<8bgIB-dVa1a]uNm%pDW[,D",5Ujj2ZP#B(5K)WH!cE<<22DO6QbNB1iZo(k>i(XI&mf=bmGI^]6nW`oo)=F5)%m7sG(ACXA*X/&bS\eA#[b*B_W]Pa^E%@B>'mnKhSZ/!iK83@Mh[DTR$uW1M.eTW9qs2-+)GRqZF1L:CBr_j:08D8%a+d[^V/BV`T^e5s+\F=13t0h`'6iNqK))icL4PRcSV%;Vh:5($!n[H[&l=p52n&p2is/Pg*L*NW=[<X"=P<BaBU)=$Ynm)D\kDc=&>?WD-(9TH$@rlba[Y&ZP7+/LdD?^@P?6+ICdbF,t5q%TGL8a%@K1"*+=-3F?$Ac(+"63a8]77\EZs0i!BE'Db3;=klaU>?VC*Q[$kN$RKBJ,M8S)08tZWZPLP[CW(&<\ES@bt<t6KMCp"s#%(^eR5_%Bh]+ACKLBo"C7]EN229lULmg6,%#>uI@>gYap(W0!bqiUXKQCsesH>m?&_Zlq1I"+b</?upcncoG23TJbM`U\Gu*g,-&:%`1'[::aX5(k#s,<8tgl)j@tQs;(0dlF@47^$rGdj`uB`mN?LcDfYhE@oo7!Y\q:aWm"b&UWdHf$SW2'/M^>Xq!ppg=.<.bEAoW>W%$#0h8jDi>r3^DJb#GUKCOA^o;=qEmT^f1T)au_m=B/qHFbgqo9bCXmH1-^C$Mls\3Tu$4/)%#%g<B-$)Zpf`0"N?K6J/[Xh9UB9)%^?D/Z.\Te.PXdE<=-3>f&3)S^Lr,3)k,ogG0c>^dcGFjl.CNdnp"5dkWWo@Bb$`;43.;7$BsCseUt?l'%@JMU#j:IY[Qo*Uh>QE;%G!=Rlj\IYq`;VN#%iU4oj)R?"06qf#LT<5Y`jS`UVQQ+?cr;WuKUTn>B.5-HZk1;0-Kd>k<D*JXq>:MPBjQ10V3`JC18<ci6FirX%#,+FhYWfcK04H%,1Z/Ni`"$E#\h&"Ycj7Q"/nIV]b#dK[\7IDWKkHm]m:X8PfKufM!8;/o#>8a[1B$,ES#qu!0nsp*YI8Z^K+nP=%@LFk)65uFdl='oW2mVZNV>(RZ_8+uk2ELD$+Ufot?'RsGP/a!QCe/O2&dO#UM?nRe;e!%!Q8(eG#`bg(@M9:f&l[tN$YQ=ZB*<SR%X;E-/Oigp+OLA$^.g"r=<-08h74`um>6dGZ+j0n%n>3Pg&5.Di/?\&R0uV$f.L:E;&R$K2eHrFUA5n!jb&R5/Td;L-Xd<@WW4C$n%pX^alk#k9&jpE82It]i)j[A#GXD)@O>,sTF]iL:GgsI^!lagpQ]Jge;%VWYcqE$*t"'Y6HG2"/iFPLJUPllSkRWJ$6C=GH-2B2Du%2P)r+o3LZ=]#frolR1<qSjqr$Xjl?9ZJG8td,k`O^;s?/?t6QT#mSI!<NoJglTkG&N)_*WBo'5b)6gX'Ydh'uiWnL=(nlh:9T)9?%_F0,iEdhqHl8JH79G,Ff[00b`BYH.,<LZf7.cRnpXkYZc<>:WgM2--q:B/G1)aBJHESb45QH*WO\:TjJ-9`RP(Y5`Y==LLZi0.*P%i6e("EUb\aZmG]sjH?KhKUa[W`)SM9[2VLJK)Z3odACB:BGWR>7RHA!d??Zm(tk)Ia)F@"L`1gA*'Upp_KeATObM;M:poa"<sTLL%^`_oWgo-BX6uF4<0DI^MVt^5%M+7+O"'64$3Pt;De:b7U!R=]G*Ea,`FJ2cO6FUGjG9/Dfbg1tT6(?p`6'WfA[;F"eANH@!XTsGO%_5=,E#+;&LW>5nn^<$XGPmn5WKSK*Gh*Hk-.h"mH5NG_`P'&]E#)sb$c!`+h'ihE*\h4Gc/eB"c/RZeh'8WI4[SFu^a2D7T_g'lF%hRbr(^"2A`+r*Rel)>#<FS>I\;sP*dq0uL$1up.qBq10*Zh=7p"`e(YeuN4U#6.EW0oE^?N8jNh_,78i#^j.Hbl%5$ZO)]a[9g'.%rq,#^FD3j,EMM!^rP-h""PT2W4hn[[eiSj<XeR2#])W`='L-n]>fplhqs[[hdp8-r;rjs.e^,1'lXG,uU`TAr=WC(t='YO8*]d*c%brSNuN<("!i`W%#7)1Jn6?;IIIs6pt<\nR5o)([UcQB*>%A"NB3MGOVF7sA0lsm0`HgU((&I7h2Y2oUWKYI4_Cf8<Rs"YAMoU`h0%^"1fMbK9`D4C%7(E-ht(*jC[7kkL4f"cVRCTV;:5JP*O-s7nl])ZRukd/A?ArkG!?Wtq:?;*8^F5/ScEep)[mMaL[Bk.f)j:!:C1%QdVOPrTClNH]'[3<q5(<Q"m?<4mI@/[/M#&'*%@`j=Q=P*AEbnj%SS'IsWZL,3;iU@N&%E*bYW\NL/LAk8fN$34%n"kPkP(:KZIV%laucD-t=OR^Fo@K5lKG)phKG9FjPf]*JZH532Z#coahA?Urj_e7NY1ljV+DnRZ1(Jh.^sMS\H)bemFD3)uUl7kSKgThqQ99(2AX)%9m.GY5_9*pBRTV=hj]U9Qc,f,b0#7W]uGQTaDI,lbu_5Mlh26fr*PHH?E99;WdWHec].qDeKbAfo"Ee0[i<F:b_?/^Z!j+/B2T\\%:@bX:I7p/p[bq+?6nou`)t;iGIZ81CUC"@WN'I-lBmmI)<F,,OIf/#;6\Xad2)/Gcg$@.Vh0'6(kkT.1pV!0b^Ae_5V.JX8kAK*Z%Vt\]@Fm?1lT)]H<k4p%,l77^0U9[cTZr2-S9kniZeR=p6E&2t$?q!f?ZOeK(Pt;DD<rK^5H[>^>n,4h=NMDW)'M^bej1j?jK3Im>%]CsrLT![4!l."''oO3<7Ch!l#XNfAkB?a`(bjAi6rr2jB/MVtk?8UQ3JQt2A#7[U]d%&=[Q^#-A5/F.$*5gL<HJLNgY?L\<#HMaS%eaq=kID.MCZoR^-g[>;LA?Z]6H:Mq@NSW[8GHW;HR?,UX:`4K?$npDQs3P7M^DQIfs#nP3@o$>^a#^>E>4%;EUII<7/uj.!T_U)@%:gW[;f(e%"o`4=`XlnCcK"!8<)c@LKC34VXjdPc#F#4<1=8iI@k.0$A2sU>D8f!Ik4jRUUiI'k9Xu./jI5p[@Rk9tF-f:DH0=SN'%Y;ZO_,fJ/pY`]U>-;tb\>=%si@I4"nB)aWY-<2L4'JCnf0$=[W_fKO/^)`]E2=$2-qtQn@QdV4>[i$EQa\.<Rr@\TaJXY@T3K"7I%=udQ.rH40h5Wb1+T+!5R/N0hHojOO_h\lp+!@[5iK_D[UU8tF4JQI4W84+FPOt"TI]"QEVS[M(.\A:-u-G"JMNR`5qSiH2GlX0/V%ZPe*dm<\-=WC'LpTaKgZY1RW9$L_=EBaUK*pW'>fCGCZV3_"59Nbb-=VA<I(=s&?Sp/c[^])QKX]Q>++6.Oh>ebW\M]Cc:\mCp=n%CE>VgYTd6(-Y@c8XOqiEs(oWP=6i&`pV(D0kc2!bVdJKMX8VtL.6P).^j^VY;BppR2$KIu,!kSSFZ]7_X+R32!)Qef"o-GKX7JOa%4[NlqM'08BY_^p^N:=1)0"f0)pK..Bg94j*"Y`H<4ra%ULV,kYaBd%Mn%b+ZhKr`1nY"GUXN.>+d`@4j:J^3$gHZnMc'R"3C)nbR%@6dhe2a5bQh$Dr%M?'qO*N2Qh%l#OA((m=E`$AgAQJ$p+>5bMQq<3,p*M]nWFc<o[W+4?N0t4kSH"lsZp!7gEV:CMKgig/W)AR4D%DY+Qc$c)_f1i5QZ8cJG6r,93onM:t*hh,[X`aM52O)Z>pA.Fc;DEV`iLUYp8GIh,G<J)DhWc<*mgC<WIq5_<E%*r:18+AdP@]T7S%kX5CjA.E/eiS@r`-H6q[W1bD4@LBOW>"eR;B0[%1DGj7orLMa1JBcIZ^ocOC=7(eT\/t>X->jbD)X[hU<[+]!=I^)eSnDkj&e$Xq%6)((E3`pbp*@<gH-+$\hCpF7`CLFg];+)qB5G.t95YtAA\_2rD.FdUqIgWAV.&ZNCf[>:2KY%_W(nF\hI)qP'H'T_[:A=XBcUn^[%>b@"j,h"NI`m[#<"-MBBfm'X0L3G$r"_FeR?0>-TL0N\*%UOBj[r8[#UXSErn>A2+:+gIjK+oS=M]UJY)!_<!/!:.Hg<UAr!iaP+%Qo_3CruT0sjEj%YJ17i(DEc*M#c)XGg#S/;f3[mG22DVB:Ns'#F&=nI,d/+^?p*%e^c[*XcE<1'IV"^mB`ec9'Fg5&Y6B-(-K0;M%\6laQ&A9;-]OK<3cj]4Q*+0clK8CEfGfBqE(kH4"Xo%YF#5b&2+X=6q#=u;PD7%BH*K`5,%^0kjO;AsbXf#H$E@#;jq0E*J(J7f3%o02h7eF7<,.%sD!^c#:0?R&5Bn96[]]eQ#/#*%`_pA)$_&^08K>gn\=b3j/hgh\)[@]R%>o?kjc>s9!g@d\2!\+\D%nXF,As&ddi%K-0(lH*F*JSbL9r0@':3cLg?nD=^3,=VX`?grcVhQHJJS/#do9mPL&$j]4U3;q[q<:28bTr@O;&\]poc%^3??R5uB9Fl5NEQ$1mF%l8(ZG(lYl_a&Q^6EGl:V=N[aLo@'1g:AK5eGBe)7\\FUpj%hTu$H90YP=RcrkM%Lk=67HdHEm@Y]QeX@k\U7R>^K[Y;bMgbp1sB'%EjtqV\TRe:X/Y\0G10,bZ9MHhn`H0/9/E)RTDsHKrSC--SdXf4_F+8[[@gOG;OO*D!rfh=RbDL<]A/-\msVH4ekXD[l#(qqdQ"'f%nGTHE=6ZDUl'A?oF"QG-bUE-ePt^5j*EVE*pU(,eQbIOAgSn>NX*"q5S4_Q4e^F'tr7q9FUuC^19g86&DPshjrRn_c3]U5u``Yc;%#h%tGqTHBt4'2dTo^9-"'@\J!953//IMYqYgON%k3qpVK<H+j+jm;V.qstr/e*ckA<@47\-MPc-BD%&9]F=5XaBn%qSrXBa4.WD.%)aU#]0A*C)/aolu!8*a3Bm-d4+e@KF/(Ku]Zf"Tf;p2N4hSV?VQbL![gH4,7kc/A^=3hs[Vh!Dq>@-f*FaebB*akmK[o;LEX_Quf%^\q-<d&GFX>L`hPbW7nTS+Cc;RU6TmYYH9$GAg3GMmlpIl$CU[X#"KuVtXtfVdZ.abikIk?bT:?(Xh\klE35Iei4-,oLC4>qIesV%+K3cEdc]V)8>k&2oUkTE2W9r&F#@iQQ0SA>8RSGpeLr:e*,YZ\l;XakhY2DgP$V8"Z\QS\mBB>)b4^n\T><<H\l-ru`QL($e8G/?%Ao@K3#HFTUhW-K,\XJ"3c;&)O>JEA%Skad<.L3SGNh+Jic#i./O):-5%(B0'>:Kkb09+=R98?aG:LTgN/'":&B>L/,ci$P5pBtAR%"jL%-44NZE:(OdmI3YQ:>=1F.4j1F-_Hc/>^O'SugUD?6VjC$E4g`]0`_l7XXOCIjjNIG2e_mtZ3-1FSeBqH-VcW];g!EKt2DRqS%DPr"pSo3GNT*m1D_4;Y72L_Qqk;.[[hE=RRL3B"VIk6&om=idWf:$`0^L77hHCUI>cN?lGG5A.EBA?6j?+eugh;$<mK0*@6V)k14%aTm!XlQ_j.D*9gX>(23$(]X7k9r'l.C@dU2qr,cr3rSYXIs";[g>$FTa"(k!Ef7'V(3[:9:T<Nro^Vh;.<N/X9r.`/h)]:$XOH$0%cGp:@b00r6)XX]:\E@E65Er:PM^imRn9'V0Gtb-u)B&DV\ugGY=lDt-ImlG);tomt:8cD3c7++ef.IOCjA**h1Sn)tce,4K39H^r%V>ffTp#bg-FLmh01]:']/'#W`ad;I18oo/_Jt=`SSC4$Ro:^)T!nR4,G^;."$%8gi/_:dA\(j15'?^XH41G.PAKQOh3'DbIGZoTE%G+\K3raG*`2>li/A#9h:o_A=DGL09k_jk!n:AERVDd2>mVrst[j3X]phL`3!6L:SA4^QcjpsWT!6;oLD/)T;]Y@^OAgo()^]<Zls%,2V1%gC/T.e%Ep/4lm6eqoBb4^O;_/Xs9OPhD[cnJoG(&FWo?9gpkS[_OmtF?7s*eQ6!l!J=(YiWjfk&55qmu'`)ok[bZ7cJ66PE%=#'OBLQ8"(B+A!-psZ-Y+2ob"?_L8:bM'e0$aG6F9;beYdl(W)bi1DoLl-F,be@5@Bm/-NXY(dk4kAc<q<!H9.2V`]2Q%L@B:E\I%Zh%'Y2>[j?[SPJ4]t$c.qH('7dU6gR]ESg=cNP08e&D'HVedOd82.FTnmLk7_`'YUg>'hBSs_[,2^d$I=/Y^O@RsC,B<cK(j"fr[%@Au8b'N_HPM6R/uGZf4O53nMV$IW<Z%II,o.eAE=SV"+VT4[P>SYA#;]=n#/\ddp=']ZVChWab+c\p.FkB<I)YHH[<rflTWSBB!F%)J:j(Vkk&*P<,hlc;%$jS[2s7,h5Ja6lRN0RW$m'g?iNlVagA4][NipXUs28YoG$he9uC,gYjl_e!l,K::Fje?`/af$t-:[695:h%!]6'D=Jr&/i'#f/oZ2I<>Yua9Y3HEZ>nGn,^!?BM8hmmuj"R$B]qWGY;0e[=gk\gg-u(BD+IIOdd!,=XGE+q$e_-Ad9sB,tftOV&%F)/oN!_2prcrLsk(8R!`I_J,WICf:!%gAf-/j05;c"sQ<l5n>-^pd#ps0kPF5/m`]?_"pX=g[P1kBR;3Jc:d&HQ?BV;"&,i8n[Ic%$(($.HY,>+I]Tt6olI"kqg<K^)2>^$LK'BqN$a9a0"s2$e+bXLTJJ7-@m41c_<n+'S!i"C!0lHV]"4.R+%VY)LTQ,[Wci*AO<I?!%$Q&(0Ib`*F)E'3V]b7!AA[_:;!M+VfXuBXU4D93?bgQKA4$O$\dL>AqG6RlqDf.&EqB:8nESgr-M"hBA89OJ<$*6,PQUm;X.ZN>F%b@,o9NXSOTqf1_5MKqaed6.K_>O'dFG<6_L>eIp[_D,i*&/XobE$p+XLX+P6VndVX'Q/Q]:=`u!Y^ENbldtF7Qh>1j=c\q5Bg.Z>%^D]$=*=i.hOM.`nEDi1#8m)^*DP8Aj)`f#[a;j^C_Z^(Q9F1"Q\$Wd9o"N;U@o+KEjonF158ABWYV+eS8Q/htr,EQ.2+g6h=[GJa%0Q*)Pe-F_]NndcSn'A;i%m]ij?^pj.'1rD1Q3VVOg+o6-1A'N#/:O+D/edmJU/'O'%@AOm?-X!U$.3AHYfN_;>scAeQ%(iAToFaa%`?hgNmV5\T3A92gUZjD"lF`M^UjYb:Aat1pEIiKkkt:Xf!mmZ"oe>J[VhAQo"\mGLQ(6KT\5DYRJT=]T8u$T-,XY2"jcM^jfoV=:%C8$hB^9qu3rE>T$\r!e48Z8NM=d&/<>1c*kj%?TQ[Q7dp>n%QC+Za*e/q0%25-ZB7f4!8I#(QXn=*nE1Khm2]J`Z"BrP4kg'tTJM%&ZTY@Kahd&N$hl,PD0dKck0E+Hn)(<YjeT0qc(-j-9FKUQWMO*7k5?BXP[SQ0u:lH'qRg>kf/LtO"8U"*P`Rl-9"M=Oq?(h#r-ij%LbZ0Y&8e,uE.-P>l>sA8\D"3g)ghP]383qG4dpF_$>hI3o[Zompm@jb#?0aMN`X5]6^>?mR3<#NZC;f;P3)"93ftI"3jUP1P8F9?%V,;TLM!7A7<"*1f&&gj,&n@>]9K_2t&i#-8N]iJQh/Xd.%%u*<T5@]"l>6c^W#am/*l]tZ\PklL2\o/b(=t=2*?an,MDX&!mV?a.%%fB'2=,6Ub4-X_*:*=c:5CNnl=aY2njUPuQ"s?@joT:-W$?>Pt"p4iGk,t&=*=(frr:ID?o>@6s-.9[4rG@'Qp>[]=nr30eZ$)IM%#u5)]b0/S4CSk=Uo6#f?jFI-@BX_G[-t!q1",lu=qggUEM0jd7,B.e/9*edgQ26HgrZ5lu&,%W(m<K"#e3al19@.;e1Gb/gn[i=#%N+*m'mJ/X7?q3HjQgE=1,43q=7rX[-e;R'XTG)qu*++&AYroC?"4outqt?JC,>H8TUPG;c$&R\2qL/(Yf'nKE+'6/V?sXU)5DS`Z%K_T<o2ElUb(ackr^uK.uWm\k8<P#m4<Mags7WFMFm9bLRMqmr$YS.qVKN.@;#]Ee#-6*H+`?00(XGh1;%Mj^O[Dh\#V7l>_JKs)5%d/M`f=q/ICR!?@&-hf_:8u/4:?,@TrH6Y0FNao:i.BgB'K`M0UX<=a?2BF416?LoZ5!_+u%cnu'U/0:tAsG<(is..DTY"m;$hc%m%'@)Sq&J\Cp_m_-W:u6mt4)A_Q!!![PrN4`)8oJO;I!mo(9aY.5!0J)%`ttKkY9>oN1]_s_fZk<J.(@'18Zn,6g.jc@k??kR3u+PG%mge;Q651;k*,UVg]G[>5M.MBSb),*MiZ&.@;rWnt?u^fnc25FeN'4mO:nBOSJWfg]Qi`_7ib4[\IZ=VD0f`EH5_K?i7\!bsBT>QV%e>go4-oOSJV@EZ%'3LT0GEB&6PLS6Rde1R)3#\lei+V/t5.2,cUG3_rDeB+k%HEX"YkLaZj5js[;1B!:g"j[Tnne+</BWR1[LR^H%MPOOb4UHns>e`UTI6$9kClj%TC&8>'iAEDr:5LWM4X@r5<+'4pgSLM?r>9>d)@JJBA$?hCq\=8>f<=-AT)dZVljIP8j"Q,?M,<S,%>ENJCDeJDJ#h"TH:l"MP%rNbDi">?&PRK4cnQ!3,OF):nLAfO3b(eL9K.T:JA&Y^L+Y])FE8MSa`oB]ZD`gJDBSo%s/2m2Y2YgUg%Z>^d4#-/NgV%kT$Yao4qqk-u/ouEDR0UbO8-t;.EZkF_pULg-k_d&0L%Du^bSuo_.)IAI<NoZW,6cYIGPkIIsVdeikfBB0f#oON]%V5.DP7X?U8d-4K97N"tUIQp%Tp(i9'j(Q$NeAoc5Y<ir,og3K!\snN;<lMJ*7HYi+Vqg86@OOXSY+rku!f,h_;V,h)MnJnG[&7fV%=F09/`6r%CEgVsn-=s\3dMKG0_qon.7Q:G/&XVSG\X?R,/MuSF]CE#H:qJ[=R(@c$)%Xhf2jQZgA7r]9ad#1i%";So+Y!]9'*NVH%=>(_cL_u@<UmMurFT),c4s3-,\.AmgY[ue8QEsq9?gQ%0e]Y;l@]t0`e[]%4E&6\jl,i#57;'uPN1mLtk^kj<1[*Um!liEWMpA!U%fn/8Hcp_To8b-Go*4fBc#+_583*m)#8>e"k/hC4GfGqKd$p$=OE4d1%n4k]jcD+[(O[BqU6&0NL6k3LE"s*;@N1E>fa.b[6FO].h%,)=G[O;shs[*nYOik]61XOi/=@,9nQ@gm(5V\]P;M)O[t4k`i=EfTI+1>A?n0PmAZQOdd5:[b/fg(.N$i&s9fi%-^N4>r^#?C=%$%-6Ub'YSAB#N9i&_4&PkKp`^Uq&;Lua5Hb81,BGL2r;<.ed=FJ8\;q(J7cr_2cW.oF"Ku6[o'f4lZ$FUFYMG3tEd4A_WYhEPM0,h0%PFHr7S@ppC8e!+k'>sW'?tr!-HU-**TObMD2ZE[KrmllHA)DreNiGo+Bi)+i:n]!Tg_'T#^(i_o)1kTYo.5W4bSu-khlfArWl-6F%b^>AgZ`5a=?BHg!_!J1'I7^:<\"Dc$<du1JTBI!/+WP+p/?tN^jQVrc,[l]hYN+!npYLCa3kcW8EH5it_k!=c=K/KB:`e7S[;2-l%^&^_?`6RCa#3NZCl=OM$VKlYl#G`,)`PBBaVF/m"GNiS<+/,$^R:r!-5EF.V_<fKnO6r75D\(!Il#4]`V<2PEq@nT+`eCtRd7H+2%9[^EK0cn7;ABYGeZ&#NDi?8t[(db=DI#d+@l5tND9_nP!4!9_;ShAc%rJieB&e_I)1sqXC(Wn>H)OMG5q06q^P)fY!\U=?'S@0a@%-&/\6'AqFM4!S2^PX.\r+Z0gS1l>hW\gnem.Q?>o#n=>Pg5X/epSp'dAF[5EL\:t*_]-oDJbC8!4>F/&]](M:F281U;n4i1e7W)V%k`P[i4nA>bBND4)0bfl<is"1T>ka9)<9hf4%7lS=i]<bN;-VK_e&Um&knkkOb]aXnn[h0"GP^?]30)hfEc[Fpdq6q<Mk^I.Q#TZ/%300$G$HYdbl"i_4A0Qb]&J:4X;m]%A1!H;Fo#UU-,d75LT5d&P?B<=efH(obA,=F/e@9CSYJ!aocK-`7drX%;g#5(L_=g&d9q<5M%C9C&R+M&eH)Hs3ZnEBJ.p*Sa\_'Cje7dBIa)3UOLfHZT9!>mTs@%rj+W"--mI!SPtZFmVjddnp21rj>r1ees$)0EFRcoK.l8_bC8%P/.rUe_VCgWT0OQAl)0>S>cr2^`Fh0(4W,hKe<d++4K7]$P(=[M\S(l[>SG@`Ord%A(M;DkduXoTFVGB&^[dm@<0Rg]hH4*lIk+e%qVl?UN0=c"fj[iKh!d%@^;q-u5299'O2]D"MoN"njhme$B?VXj)#8,j,?2_,LD,!>-R3N1=U!m(7@siHWI24[BW0&8_hjkAJs4h6%PRiO/et3O5:j*;9%i:JL.>@Cg-m((a((8gHWOO;ka&N@3o#2pk'6ulQ,%Ki&EFL+FU15D-df*fnSFh,i`S(42NNGs;<e;NJLYUjb%m0oP:e`V^]m>RNE:KhapONYe/,G$X#0&5j]NId-,nU/gR-UT:$OGH9`Pi@cJ7Q$-7PnCbWVB8Ni$nm6nPo7BX6HS^P<bV%(D&hLt%p*ge+_\`5j8u&g.j(t,LegkTMgdF]%bHild).G+Kr@mb@HeMTs[VJE4iMSQY"WRi-.:*5]<9YNX3[c6Gf:N@[UoIAY+R:n67]JKa%-]'Zl7]JL\N+fdn*YO-M,PpW(==JBVa[j+6:e'a#6o%ZD-BsX=(&&PY:L%7/r`9%Rd%5cAQpF2>eBM761!l;IFV-4@i^V[KP2XE>%kQt"<F/<!/Ln7IBi<GeU4eYh77[8CQ,a1rV)ptf.1)2G&%&+'+_F:*R0WA#2[#kTnL+sC[^-dQ:X8oA(QPg2o&KZ)S&Pduie]48m%'08sL6>SsuA<OVAG)YD,3_Z@]m[ai0:'P@+j*(G&+3;7HGqo2XMnHj<f,2WS^**s$LdX:YG`WU`]JV;QS_4pC$So>tWI4<X6YbTN%IOg]@d-hY4<.<0H_@+dBq!A:S'0jNuFhC\$0=A$0>/:`^OOKU0$TdSm1Ag3*!:+aWFN<Eood79g;qdrZS9MD(2&hhI<liJZileRL%/ShOSA6.[2`klN!Do7aoIR[TZpH(FRmcEX`Zr=V<q`1b,H;H5[HQQVj9U`"8faY-R(7k:T;8]H3`D$6^`SEpmfE$M(_DCPCWhUPf%FD=OrS:52HTc&#4OVr=J,J;LmKu_B`:@T[a\+':i$;m?8b_:5ol!CHgI%@hdG1LbMr@WTf=k/8E]-lLg6=_T2lX+Ysh1'o3jd=nd%Rb%,'qlT2EJM!=/%.BSI`0@$()m1C-r+"MXPNb<[YkfAh92^_1>JC@]YX`fI3U#,qGc<hO?Ylk`iclC4d]_$MQB7K7nC/M_&f`^N%YKtfZp.]SUOG%hWmp=CM]h<c4ac5S>gPd3u)''6?pS,ofRTol5I8TaQo`n8'nA5WYM-T9B#2K*AT?R3;h_bs,"a)7VZ;eDN+;W</%L.oXbQ_a`70a*6CqD*9.\TH?\Rq+G5fRB2iflTN'5_'Ygb\T>de6"?ZJFd2=aJK@9$&XPNM.P.]\^M<UHZ7EdFCAh<9K&@mfP<Y7%CqB.3#`5$F(EK81WGK/=I@?hBfC?02jN9TO/o502oPD)]5Dsp'j^b[]K(s+jin8EncFFiXRuUR9F6NaL7E<WL$PGp,AClL?l%4X8%G,m!V9c'$ekJ&`ar+rs;oqV.7a_\Q8*SuWbdga#iGS8\O,=-/0Cq;$N9eMnf:6s0"flXK?XN&D[$dq/N\^cnbV@.-(^,KIUflTNl%-,aj^d;1kS!WS"LPKTg28fnGOo5T_*\tE<>;#)ke2I-kJ!e'*=A^^hEdY27QNLii\1a-iC;2A,-K/1J*!-)YIqc*(Q\F'iPFAqrd%?Hn_d8fB^P/s+`'[>P@I<u7]=9^]X+T\Jc.[#:;jRN'7hOq#YLs1LKrZ&"5<D_^[,oaE<t8<Ktr+OWG_:d_)!8ji/<GMo+uB`N..%A.HXgU>U-$r//U)A-q8'LfShNM[5NH#)-4S42HO8b.`f%7`eg)>]U\u%hi"jO+#8Y@^*oJCN&QTmdR*dJJ[.]8Yh7QOGF^F4RP(N%,)\8BU:[\6\Jr\d3:\qNr>rq.Msc>B<=6>"c?BnGn3qOgD]\<C]ETUOEs8"HplSHAk#pn`(Ntbuf,0oEqrBZTp`[F];p.X+/J0e$%/i`QDW*!h;o>n;5\;>=$9\(/^1+:$o:'U'8XL.rIYesn$a=t`_UHjTCEmtP&E^!@f@BM8UW:o.>L&kpSL$eVBHD&ko2d1>"ak+J*%TeQ4X@aS""?SS=LU(]@u&#7tjl-"IuB#YQ@Um:aAWun[=iAP;",J11NKo+#'+"L8L7V!;n2B^Xg^^]YE`7f&-I`V3X"A]2S`l>O0%fH8Lh*g<#6Z7?WRoi\C6CL(I<1.$hb,DS#N',fpk(*hi8L2d*.?aaFBmK57D5eIQ9)^pGV?HR\S`BN;:@+bGILFeHPqgIWKO.?#*%VE2OtM2LR<VO\$`&jY.gq6k%I'c,+;\uR_gX=?\<-p]J:;0R9J!_t2a9Y<t?!/L9`O*&9FIt"6gNk5nF:c,!Xc,W;gi@^-K55l"8%,4fdUA/Kd5h=*AbNKR'OFAq&kAE^ee0)U+r)#5>[Dn(un]oi+(UYTl*o2KeTIQEI.T[/.A/F6qGM7$EYC5t9#0RdKueaQU^E9?0`%&o6$s]UR_@ni9dIS[dOXLmT^Hc6Vs@o83)B&o423Li&-*E^o97ERL6D]"EUim6O<;6AP)piBsN8%&%Jo^K/^pDmuDFbH)5B`3bn/%,G\FT)H-ni+$.e]HX[i0*?#mAC_*8_LJBBZFc7TC`JcZ']+S08Ekhk4M&9r#f9)K5E>1dnX+5h[H!sr/`DA'lhrKW'kip&.S2%$l%p=/ai-?%\YO?'I&0s5li3sRr!,O?Z///ka&j+H!V(hotSY'V^,pX3@gB&jr`RoniP`P!^=SEh68km_k^h5#'r@7UD:Y/+8eOZJr3%Y[_qF5rYH$VYX_i;JLZ18PQ!POrbtDSY[)ClK>/Bo*l)BSZpn`r<H7M?@UU$n>ru\A;G6oOuIG3j3*4Qfc8um[\=s5e<:EpSXX?$%AO5LiLFr*SF8?Jlc/#Qk3[tU-4tu_lV5BN[j,d$<l'\E_oH;mAhDDnBLebEXApC6.gRT;2WBU\BOe2P^IK'XI9oI)J/,`S:mh,2h%VWF+-0;KjUH<6O<i;*&Hq0(EPD`:PhE3DlIVa)oc]:H0Z6Yea];7q8`la.FMc(20(nQbn=n6Yjd6T\$@R^Oic^q103Bd+"-h4=5@%.["D8FAKX@'[6#lXEqq9%:;9@q>4o%*Nu8J[+P2'pde%e''J&JF9:DV%KgW&A:.^K..c]u1dKcKLJ?29ftMk26*Br=?5-?5Kj&>c%VDL8C-p/eiI6^=BebN\`C-\#1oL>1jq/844%]p@2nqWQdpg@SWlHF1:UuF!I=dMrEc,BuTMjK\e>\I,*<a%+t8=jmKA)Ynb_XR.)%nlfO\>MP=b5sm+1U6kXXG6=VI''Yd9$M5!m68)2U>/qGqZ*?LAqIZGcB3+5+*g"JYO'UQmKI970p;(X+mG)_*G/#o6II!C#P](:]%m.+s%IhHTp:?"TE)>DoUbYOGhk#'I4hAXPC*#^nr=b(!(6471XSM)nJC;Ip,UU9%Ua*_$rrFa)LA)tkRj"Rm?ld/"EL:!)Dj6V*d%-/<c*W%[FJ\APJLO[nA'%N:XA2qY0olOP,:D\"sQJa"D^,p&N2<XQU<2f9fW^GEjtXW6A)[Xb+h7aA8rHdsY,Q4\c7XmLfK[=R&A%msZuE^E4U6:a?+f%*makSI4!hE0j5Eq?=n4Cr])rM2r)"B?``ObRDm$`%=#lIt*j*]M`<7L^hMg).Hh]SI%V6@cqcVLc%ME6smO0%B8:^'/ASdLTlaAi#[)[5<CZ'Mp782qf#0hS/1Lm$f(t-I!fWTN80[Fkc2ntr6\X?W4BrY0g`4+c37s<-)WaFO?`_,+=b)(m%,`)`%3EC.*!!h8-^0T-KZ2iqI!!_3!Ccq[&)Y$_>d;EJ6p/8VdN78/@aqs;BR+S6_M7?5hX@r@OI-_rePg?t*peP2<8(Jtq:m8GSO$jMu%c3bWc;SJjnY8le)^4<jA*)qUZ9Lgl]2;!,RT6lLL"O;`/^"%&B9Wj5C%5lkQIN_X"\,)'tD(FN02fbG:;"sfThs*/ofhh$A^M%8u%^pB_DhWm*[^N't]qJk^%]/';O4R0V/dC8rudP4^EOV&@XYMV%%>SDuqm(:e$5e`2!Y@$qO_XFZJmU!Z4JY\P#DZFeGoo#D<@RBhc%71jEa5Pe@Npja5%$TEohrM$9XC?+@3lPD/:4BBlIp\MFigd/FGNHtYks'EJ(cm^">4mp"4O\sJ<8GeU\f5D9^mt:*%)s0>udI6al%>D\6J)Xh"I^/d@QZOn(S6f%&E]qIc2arC@e^[Uk0][\Yi+F-,!Q<;Y=Ibq`hdI6adgo&8>GMbm)f.T2C3]J@,pj;r@-sjL8O)rLl%o,]MnCigu_juj-_f.ScDO*@e"84O*$eSh8\pkCuO,NM&&Z1B"TSm2._cfSncme,nTEoen4(t#dsme)JJD"[R2a10_SqE,:;>Lp=Y%qQ36Dl6e?A`k9nVHG;HsMI=MPrBf)"h<HqMqtOV'BuIWEDiDSU6q$bpme)LPeSg8m)uB$rMfTV?GXgs(p\KSViF8SeV3g`@oa=BW%EgL49XL&$(l`Q[$:'DX/?GC/2LM,2!H`nNHG4;V__r&Kn8eu<kI=.gFlPFuMh`1B#`QuC1kEc)@qMh'TO#`&\\C]%Q_k:648BfTe%me+alhWdU?XsS+k?]Z2a>1s*g'=cXIg2&,JS%u^dHsFLsqSi)2%_UD37([K\Hi:g%''ZNI'8[dK+[t8Q-_E:]cFn\SMI@^s;/ZR)%onuS$%?SXUh<PjY8p77BUcp]T]meB!^`FM.cq.7Mp\G?$_i/]@?cYi'pg`6W)@N7bRn/\)Mmo4p]meAG6$V=AGj%AD\,p6FiE>!$%E;LkDg0Pf^0rkGeG&O-\])r-']kNC)0-?rCEICrMkt_iCUWOomLachG+NR/QF4EBe\a\sD+MupCSPhX/qn7,P^.L]E=drE@BN.$`%'s5,pEHdU<V44oURTiakWVP,uO-I(tG*lM1>V,&==$#ZXMuC+FAa?:s.og4t?)c]:m6E>Z$f@l)JR,ui%W6b[.u3`PJo\:VB.@O)%CLuVepJYA.S85hfQNudtjg)QYUKjoaD(9bM+8a2dYAgU+m,je[j8<UpH!J)0Fui.h\P@A/cK]LUZb)ds`SPGUh48GM?OHWql'pdX%^:$d;Xgus?76.L'RG(p+AGYl[q<CY[;ln8Z`l$3Zj4RmUl?r%\T0'6JbcUkHDHJo]#WT<BppHBr%q^=/P2rX1oTi:K;k<Zp@f#lu%n<BmK!G!kHQY,,>SQ,%+pu/ab'(;#@Z8]>Ujnth`=9MS'0`hiPn>u2*R/,^1X)FlGV.Tne<n:<:lM4F[fq*)PFLn<L3lrW^ae@n.%Q"$??76/>.'">;u(H^G[XX,Nhp8RDC8mLpi?"lqm03'Be^\,C)pLHC*?oL`Uk3o>-GW4bB]g-YtnEN'"ak*CD`HDbVQLIesP>o7U%H]MQ=`S3;#iC01F%SjUYR;+O;hKk$[e](\VTUSJjlsF&Sk;F.)hporrmOhV7?b`TOg"UqJko19nNZ$n3?uS>*kGdRMCB!MXcQZl9%k0BLlQGFO<51(1"Qg3q]PH8-&A$pgj$T&;0G]Eh7(;u-Mgt(T[%Z]\<^380^=5I^]<@P'h))>$9E2V2AR77*_ESc,:DVZru-dqq?%qL\SM"PggCIo%^f&+71#fD1%$`I/kQ^V-#RR:b9H;-%S<k="uidPn@9c+=LB4q2'.74K+2gW'Ym#+*eOS?F"3][3nMH/L29LGa$K%a^LG<Ehe3AKS&#Bk9f(CGmVV'$D\<F`Wgm`.`ekppo*6!CYGl(G2=dsoukVpZG\.jMDr.X-)$Z_\g/DAF'Kj$kiIt6>&)i*?Rftp%osjp&RP%1-8X:,0.W*CJ]lMC/m@>$Kp(HU][!8:S/Qrr@Mj99[fqla3S%[_938\CU&\IVLdE8ripCr+`ce%XO9*_F+T\$_,d-FP8%hkpPm<GFdfKeFi9/Kfib0T@GQ^X]26oAgk<q9S3FGHLdAha(_d!E<7Zoh.KPTS#12D)p9&L6=^[0S*c,4o1QI3hHM[s'?s2p,f7-%m+Q^bg&#^4AJhptP9CbD;qoA).5j?8.IaF`.b4N+!9+G9r[10).J>MfW=Q]-Q?HA>`/\i]NSb1=o@V15*8Qsl5NF2>gp@=e_9?.[%h'LK[23?f6LttXQ<IDRL'rW;S^9EtL//&`3Xh>jD#V=WU5"-%QJIaB+(E4c=e]n4<F.!'*SCNlE+7_VW3bT,`>kSO<^KYqg.;nQ*%[hQ[_'_?#\jnc\@<S9#)Z!_QXO3&I#dCbiTQJQL/W?i-k#KPn3Al0sO7t-NQ>':5IR.da_Y@q.>*ClaX.Na3OB<3hOHKE/^G7:41%GqD_LPF0e(q>5;Wa0q"KX4(j_7iI<No?QlY:E/[_dp@Bkh`nq((A*U3O%nbE*RnFsh-$ANC@eD^&8rq?HL^su^8bao*8Gn9D4/+m%I34i*SEE-8)ui=8b,q1NeWkHl\I$F.ZT!:R's-MFIPMb>Y#Wc>$s25I1-?*+O>l]sp,DO?FRhrMIqF1FH]jskb#0`K?c5PtmGX>]%(S66uLg"h?+u`r=Wr=@;h:jU1^_q!>o)k39-R(2:;LOq]Z<q0I.3:E'lLt1WK#_P8=]t.<4=g;ras#q,"`LGge.+TY"6]U\\>\OP%k;:]0I=/RT^"4/[>k0;4=hFY)W%&/mG/*^uf;VT&mTa%R*"%87S8rOmG*c-6Qg7VO\4+^\k`g#4[;sn6#BTeE%VomuBRi;.:ln#%%6gQmgSYde`NUH0b67IVZ?B_]W5RZmBUdDtWmTLS9lad4PoQ'5ZK>8nH+RgBb69SnE-g-dS]4^Po+YjVCDiY&5Y.[)&L]IR*rC82%%5`eN\^2%N)*[!"W)%]oJ.="KE&Ag`;VXAREm[(9W"9\]Z*7%o!lM!^U49/*MV_BC)O$=HeZu8qK_=R2j%hGK2YrO!=goJkU;5q;:%W<!;A4UocgO4+4pM0H<]clHG9MWj7<5rV%qa1uVWO.:r_Os>Pkj9n!>C5ck'%mf7n?nRS:T]+*^,F-aY@O8LH7VX+l@q??kj6?kJ%G=KTq;:n7U`QD%<9Ld#o\Ud#)!"KYB#oPBd)M<s5A1\@%!NWK6psJ.sbbtD686?`?Z2LRYARaS/1e+uWl,&!</@NoH\YZU<H1iLY%,AMPjAR4@qWorIc!b00oS\M&;0dc]5A5b3qQ$![L<#j(N1Ti\sQ5u<3ARu!q8[o=i57JDpij&tWNb*i>A=,*q#B:akZ.MdlU25W?%8.p2SAf@GG`k73A5#?PNEYQL=O+S$D,%l=Q>CGnui'7?$GICMu>V.]=9]#&sSW9+c/IRm<odLg4^J],f(+o%[Xa6;U?9LEI1=hAH%RQFWs;G2DrTmhV@qDh[6q&cS=A(O>t*oEF5c=<!jmPC>U4Z1hTYG>cOQ#^WJH=90DBd`peJ,d'%<LLGTS:8$Q**`8bnDI:6p50(o%$XXDlji=.\URYgHY1bNf^FsVfdF>5[CUo@_Ksn;$H?".WT?@2fC;@mPF2X/@N_TGUaH1?n@Se`m4Z2!]0&iY4eC6s'.@&TN0$ks9%V>Lad[EJ=S*iscri4-,giLm+-$,Np0b5Ihl_4DZ\q>E4:RCURM08J06=OT[aj8o6B8EG;rQI/K*6%?m7%cdh`\:C2q2f&]pc3co;%'KmDYfYB9A_uZ23pr4cV[t8,gVS,72p7G?j:s<"8<O_MY#b0Jb(SC6P5(8-e*hIkYZB'tL%.n05!I0;C4N");fYCX)iD9=ZSLEZ'%"rrB.>CL0BZ#gMWhr=\tpji"BKcmtI:(Is#%kuJ3>ro$SLYZkOIj$\9R9@@E.Y<&&oh6;!1dJ[Gm>rX;I4t$I:j0(Xj4%%>@nJdK%Z/9+H.r`)`0cJ^4KPTZrdbWF/gnm!=3jm)B(u%;q@)D6Z,=UG<keKH97E^/3/$93:CDO%*5OMR-\pZ9?T^4>gY-?_@1f>.FXVi8!%dR*TqL)QRAmip,<5g8cCG6'T8.Vi0MrVVp.UB*)igQA$=RB;19R5,:EkZfJk;\GoB0irLk?!/+q+aep;I[IFn^-21!Oi.E7n)<u_%][D$c?)>ii<V,blrPh^;i1$^tV_mb?Wm<KpEf?ElpuHu6YuL5ZipFt#Ee.?/e2o(n+WjG$:H7EagPYI11e%sSCngd^#@8IFM;K)]%!_VKMC2>[=*C2UpmDpV0rTM4Q<!_I>obR;7$`f24hdU^.)U;f'hq*P:J7mol"bDSAQ!Ru+3>O(Vg;26B8+r=Qgmld78p7'7['-#o%h&pk'#YO[<GV%rW/T!d&RK_\gR.\!i6_16A.F>bmg7Kmu?!q<&p=S(GIXZ!XUjRK68:9:.#L:W>2b)D9AC5PeW)*0&2&OT\K"A(e%B;jNMII5M,l/LGj%_/@@YNCW_4MtZ^HkX)28/$B]=*fgZH$ZoKcg@fk0VKqg=i4.0o3YL"m$Cs$%@&te0X<JU2LGCB$'1P4HMW!?%_Y\5QgmV96dUtLSVV(.J,tZJ[`r"d;%.e6FO(EL!Qi#\+cp;4`J\$lUp_@p[Yn!-0@,9P!I+:idn?X5-CPP_4A#nAO717.YT[1>:%*b(H'P.H']\tin]kNNb^;U:lid*724pLB6-.Zn?7,$Tsa<uHk5jW#$;]1n8/_i&iFb-iWVj:Ug*$qql3BI;[*g;iPHn_Nt_.HufJ%`>a!b9N1F0093$0q.7,B7Nt>4ci3.NhT*SRhUeiDRFh:q]'r4p#o4[lY0"8jE^&0L2n])dGH:nXC:I1CPC1[$BUdngMnj*DM+#qC%4mhbhKql_:.5)Kq)Q`%a!_E6iXmXE7X/(V:]6(*Ka0Z4kT.&dM)g,f\e:cEh$:pd<=O&?nD\:-X/DRu*i0g0]Vsmm@9P]^BlOq=$%`GZ7bQH^?u<%f#l3_GK6J4+Qh9&!PG>%.5U1]ZT<(QZ.Pd^&QDLA&.TirmAu=YTC+<Ijcn_(iX9Ms&.IBoeau=4HEMHpu5MlMEEK%,8fONi/Q:[,ok@-]'o\4.9j9]#b>Q"H*%H=GP,HS-%%#e>L+C@E:JmgB/Q7f^ps)YnlD>%8[a;<s$#0\4)#FdTbto_!cM\=e'iHY%j:Vj06>4Gi-S73,=<`jc7d,N$qbt)H0'jaa.J4j^R1I4"U@tPOHcf"CCR7p9!_/Y`S)4EBSQS<P?,MqD'5UR=J)2djO5_7C_jWSQ%=:3n3C1F(eHirN:])A&6h)CT=GD&t4E\Jga=rr3:e&&!iJep-1VNYJoGJ24[]:@4U>L8q9iqq3t)X]%Xb"Ll=#oLeI+lQ5Nk#r31%FG:bhoIG`OWR&14]>.-AemQ9r?$k3mN$uo<d.5R:``tZ`_s0oQ,PF:,II(J3:P!49So>sI8,tV`L#W!ZaXfnIAGpmlJO2BTg_3M?%C9,c(;':K=lR/"?.i6"(]_d$-isHV64rFD>]F=50NU^0eT5YoNN58QLr:,L#@CP#fL-L]VmgJG#LbUcmUDuPcNgfiI?W-TDpF:-`%B3=>df0aC*>?aRQm5eJ:p7KhmbN,,=ig>&^^%sW_('cW;?._Uu%ZYm_`5Nl4))MZgi_[m:LrE6`NHs\`0@.oqH<08/T($fo(L[)T%(g.:7S:#\h&X?Ig'B#n&>P^f:[A'"GXTM\Z]+ZB!o\%OcTpAunG0)S^DEP<(GQn7)b0UO;RO)(+jf8#nCRl#;TPnZ.X4im=ittj?%#mP/3WB9F'&LuJ/jgpp=+A6nFi@?dUA4No$\/>91a<jB?m)>JjZ:E)\4@c[R#(1']>m4!"R.2L"ds"FA=?8#7UV$^mq0QNgKr@^6%4r;DXP<l[`M%6kFQ-<BC$itQ!H3'V$jM1jL*JG),Y+fOG$<7mNXE49;/-:6K<#1=b7e9sgfdritf+bVDip(nkID.jJen:&dZCX%C%Np3M]K.2)r7$T@aZIp(:XNt4<[p9smL!BJXQs8obi-JpTQ2*$6L&0!P2:,16])h3H`k8CMIl+dIju*S'&l[:<CQ!up%]ih?=1=D=%\s6=1RA--tJuW:a&C"eW#dp3LnhsNMQqk0eHV'`?&u=qK![li1"#q9%a<C\;FNaMsb->=d[gl89Xr^OR#G4@C\nQ[!>?`K?Rm&p+%Y@,#h&t&'dNA=R9hSSc4>"QVNoP=^S])mB/>g3"#38fP+np^1,A./CX?sqF/M<Xr+0;#ep3.HUtk!_++]-<('BZnqZ9R#`W51Wq+%H`@^X$SA)5\&3<]m*Z6.F4Da:`#TKTrbf(iPSd-MB![""f*cR77q<'FT+`O9Ht&#?fQA!cq32(ee'IX$_R9pSG)_)IUead'@ZWj]%,pTmbl#e_bN2@2M\2GNb$,hcX&XX\;k;LiWK2W2MIp5Ac]<=BIXWo*[&hNV*-<N3Q.<Oh(mFV4mTk^^1:C!eel:tc5&Zqk(,HnD\%PB"KUJ\r2b4=5nJ:IL;VC/R@uFb@p,Diebeebi+MWpFT'-/p!c9(6HU5mHPBn@"I9CZ81d&oH^R;g6YDMA$Ei'_pAKc2jUrQAnY!%*+k^GU61oDk'!i29FP06T%bP8G``:Oe;a\a$d(Xs3\^>NJV<urWO.O6)E;mu$g,\"L*\D@__sR"2D'M.Yjh5okm@SRj4L0\LS*lZ%1#Yu`RZ?A/8$;E;\Hsno^L;0Ko6Y!Jg?-[r,uf;&\@Ci1jfN00O'?C"<9OT?/cntMP^U[nO6V\'^4j(.mT7M:k\rHN/9LQr16,Mu%PLj2F4LN_9:l-3GU$=u+G$3";3SSe#T&OajF],`4%^H/,#\ZVk-(6E!P6,"C,5c7.$B24:naZnq6?B*cA`;KHnZFr-Skgu.BH@t`%o'.4f@K:kW_ARtso4OJ!'=%9j<J%9-aX6;!k!0&1QZ^!.94_>^r)u90a9R=PW<fEW06UNoNu)N"5J(\tf)lR)>X7&tlO)hW>MDD[%Fa"Yq/$=(b3^:12LJN?o5KA2!5[)KAqe*<$V6KnSEU'X;pORmZTLn7Rp]eMjqK%,VN=2??i>u/8@u%nnNVDf`\9l`jI(?uUU?Q.c%kLpB<_!.ITb@5[5M6LK^6Ao#SIh6O[IsW1(FojD!];]^RD/nD.j-rMc9=4J7nTu#'bg-BY?Z?k+CaGZTcI'<>e6sPlgi<Y##0&Z)%o\##f&g6(LemhG%_ZcufX$3/A[u"Z!n*Y*-h=>^k.&(BjS,'6NN1:*12`8(d7n^8D41#YN86<tW`TGa&>L'04)d=FtDsfoiFaJkK%G>_RSXMCS`Oh9&-o>!O*[m2CSbnHMGATuk/d>/h4JAtKF^hfT/0rsE7Pr(i`4'6erp#1I75b,4VGg>$9S%PoPrB-M`nhEQh7;-:j%Osq*E$jRcqY]%8qo3s<tK?&uG-U/D'(dPZrB0Qn8f#5bN@ZOIcY*<KBB>(D#=ZLk:c:hAHa[qP.1R/^STTYX^H-/?)f(amRU6NhW%Zh1iF*uq>!EXiE!-b2>io273%"M='DK(M=nH$d#N&R"_@q0qEr)?=`[hr!q]<$ab[Dl2IUaniZ7A+`*m?(nVt&o^Z]Bp8r&@W#Z^%V,%D:osb*(Nf,a/#EM-*T,/tOkb2]X-au/+bmt4p4t#XI1eHmSS0-3]D@Tpe4RueaU&E2R(2M+"Mm(C9MsBl!n_9BLL<dISnu4>@%BGe!WmZ>ZhAn?QGE]HhIbO1XE3$k6?lM=cGHuldB0!0b/?)nrpcS[X?6d'pB9Jc=PW>SSdO+^h8a#&'s-&+Nf'\UTlnGQN6quXUg%W\"23l!@S:Fu<C&Vj^Apnbc:n?q_im[$eT\p)5>IPl>DrHR-*S-gXGN1r's`6eTfHh"3V#P-[Ol?lC;r$U.VFKL^"[kfdGa[$^[,%WG+LkmM82oqan*@00;9\`a5P%(5VE;nG'>Vqt4;IR882A&[X7dL=,Mf=ZJpjkom%pj2im#a?YY^]59lh36$o<!_"/iP$>=IG:JXq%)g,Lo*HLj@6ie5i&h8Ukp-kiH,kC7UPO'7gCGfP"Ng`o^r%+FgIl9@.SbLb1Ao]'"PULG9Wp3$ZhPt`;NUt/>H^h/#n#o3eQX!3"%2pNnb]-VO)n_C-'OpbeP*c4J@;reR<cllOp6l@Oo^,Xjh44C)X[ETNLB!j:'Q%q$?Gb/IY(Boj@?O@Y'F+utRS#O&@W0(>dTEK6`%bO)5#olE.n=Dc_m\l/!TkNR(h=.V;cg.-MUqbD@C['P-[W4%-nQWp"f5F'KceXQ0qb/VR[62UYfrZZAYh98e=1H&k5.8*#!k+9/P%Va0_N=RN/XGq()k5EL6WAtI/5BTp_)FYcfrhX3UkHg547MK;_rJ_X0_o2PFs9KMptD(h%NkAjASbYr*is!,(PDWWCsNW5-r;`F:^%C&agJ4`rPV'E;J.WLJ0*XRCWepXH$GOgY,ujIYL%jseR0*?k1,B7fs]lkJno^-&`6B'\:fBo>4PnfG2V?I!nF0(&D0:A-GKdD1UB%!>>,j^KiO:2SOEfAo#+Fa"pMP1SPbY)<XK`A9_;,WH<Dt1GhZ;HRTc--Ih>R[OOtN1*\uIaI&/mHsaS>+smsIa=>#%??Z."Qecb@%n&J.1W6<AF"OY";7V$K^5??JZj\@XRECJ'-bf)u=,]N=]4b?YLBmX`\_!pSc/@n#(?M^PQ(*L,R5sSoX!<b7FiMR(e(lo)YO&C>+%oM*OH)42WaQ(sEW+CLbg>I*LVa<2Uk;%O:>H80GB,LSNm'a-XI1Q`G<Ln28:<r?39-?)c`M0*)<j>c?HRcnO[qiUP/5dO;I2Z[04%5):DWks7LO&9YhE=OR9ICE]VW+&tcg;(:R]T8&lBNtu)2]P1V%(4A3Z/kX++%0m8=$#LkU"*dGmgfnA1l;e^cAi@4$bbpJ=_Wf=+%2hjqnpg+#jLq+Gh_Ei&_`Yce^LQ1:[bn"!;g@CB\J:@BpQK/8<D2M3o@\Y%\d:VBI-):FQ-JB2G+=O!Q?@HKf,n4so[WfkH\$W$q%D`de;W?s#o=]Vm*>BT8.NMF`g\_b0P4GPJMHOR2Z+:9*H!mL@d+jTq=YO;+bO`te]UrD#)0?.E<1621"fU5kqN\ufeHr],b2B(&[%J1*;C(`8;/8+C\n*fo<Qg8_NMP!k>f`:JqY+&=)]chWjC=;:dO<W(nr;^.G(#?/l\jVr?/]]dagcSB8'_k'5DqOZHWLJ;2'4\/nt%8$Ll7WQ!':4#bB?.;V4\)<-Z2qkhfCHY.%b?;bl9ROc=u5YjDM7Ajms^gF/YKd!G:B%Yn.fI$,M5&9.D:4@/DHR99ElL3ot8,%0o%]Mk%:Zn&?>J^;8%Ihc(0;V=M$M,ul-c^".deYnBr"_&i%C!rpfUbTgP,F)H'4):bho7u,pdq]F:qh#c`J;]?@ikqN,WO!Pj$ZY/r%O]^9$o@bgKm0@G#q8WYQ<d49[a9FYGq;_uQRe+2YVdEY8,-FnPP0SEPjj1g0r5QkMbJE??DX&dg%/$/LPkL^'>h62BeR^Zb`7LT.%6=]p/IiPQ"mU!5D1=OmiqcS7$3;]:mhtgKrS-\^kFg7:gLb0Tl2tso9U+iCBDm%d>I)2uLrg:.iUOqjkWlWTe$JKs?6\F\sjaP<%%Z=2Q53-M-^n'!"VI5'bMIcq"%FG@PTfOPhKgmG!4,$[V@?SMI9O63-&)UR*=[V@"\U\6scUD`?#!PP%K:L.UJ;;9=Pjp7XeC<@46%+gcu:G$^)4Ke*c)X;64CreOb`b[#p@'B/$Rr!!2]IRX.9i:FUERAsKcoij1ZUr>GB6L&1aqFdV1$?Z"aAt4q.o&iuYMJC"tTV3nk%p*eXIZnJZZD6N-T('WOan,BN@"CNm#2`tn6lge(D,+XIOZUXDqN>9ZmEoZi+Gu4CMd7L9.qPV-$RP^1rBp*tS!sL$;*]t`(Fk0Hm%pYKXsP6]?#qOtFHl#".!@nEfoGB+:RXq)$qFuPVC8cK`&aUF,%H%:+365K;V*al>c#pm+_s/uAh2bJ&=d#sPCicYWGRm9^=X7k)r%D:T[+V8(?&Xj5i%pJN3/YSf]!J&@=1q!oA]rW<fp9]"VTaZ=TcRNOKQ#qMFc-EjTc#A"5QJ.@-"5!K$23l2("LCfWao:Q'\-PfNL%]tp@t3u^o#9*Ii7*4G\8-'dOCe^9NbM9JgT3M6(Ab^[Ml`sJSM>Dc]AP"J#an/LbnTIDq7#%('K1goPU-!G7n95'3W'i[g..$P^M%BgD2)QKeXs19e-]'hmFaTf4A'e'Du*=K3&d`;tq71.);&W?iCPi@#TrZOL3X197)6HLdK<>_8*JKqq-N7VAaX[nV+:P[Q47M=b7C%4duod7mItD'f8p1Ulf/FW`CP4VS<ZH"Q6'DgR;X#;WqB7/^JO3bgm3G1Eb3tW;+ju*@rbpVKY'tBUG+NJ%K6i?D+9@6*j7CNQ8=V%g170Z.d88:fJTF3BmgYHWeQ?DZIOO-o:r-CN5Y?)WWgl"f`EU+8`uq#=(ImtTk)n;.)6p'7sL?X(#@AQR;P#q/T_i"5p6c8R\NH.%A1=($A!jjjFXT&j''mNF<1B1&XGi-o/>c]LD6fQ"fG,.J:fTZTWoG5c*C!*k&c"6QP*j!Ll2\JLVn-I:cs-f42\aGjjuT.q:l8o)%TZg4Ic*O]PAj[Rl?=9I:3*s8E9c1/#`@;l_NT.<1F5>jK,Ws[O:h][&CB0s,8ma"iMdu':6oUccLG"s]&<tk*DaK1Y:eIU/5#B87%.a82*%G`rb."e4?Tk4:r)li&<Es%NU,kN>mh)#Hc/?OCg:fgS<+'oe7k]HBe;T(XeojKnG.^l1qQu2o$CLj.lW^<+k&E8m.*D/1/%[MRJ:5]m(*kC"a'hdf]A1-dS=L[$pn\mbC>Y61fjI2&e,oF9=UP^[//;;Hi%Wil4qh#^PWD9[k$(8/7u71:Tm9;HQOD(S.+;tj`*%'\^"\j+%o<RT]3U'pN^6'UWc@]Ujf@<ln.SfVAtT"$lCC_N8TF?4s-id(O:BR4XY+[*0O'N*)cY<LOJH<V;OBSIg0+']4S:b]\)H%-\1H]`J;>c*F8bTj;1Z>^i\>Xr"CPGUR%MSg3Q&[PP::Cg8Usn6WpBt&h,1^h$-QNo$t]Y.+>.<Q8.48TboP_-d)f*3L6"0TZgA8%gOn`e#)p7V_fQ8??1ZOJ"c0>T;7$Y6VjpkD8O"]JLgGZ:dHJFs"iggUN/1el"gb-Q@AQe4![1J$"DfS;^+re$%1jD4/<sDC[Q:DP%[Km/=R&$f_0GRkG_ma'=VI=^b3blK>]FnC)i1$W<l<>_QUQer(B*7`016Td0J^BKd"gT2V!/$(8]:dmc;(/8=GqC!Y(sDGZU0GcE%3!a?Pdjs]IKLgYX5c<(EY;fG1OWgHN8l7A.geFFZ%?#bYRoFC$70"PIZmh$qU)l..>7A:iH@9?Nke]%<bG)@sHsO4FUd:%8.b3`R%cP1;KQ?<@unhV;/8L\XVJD[$D/:bec0*D1tO7STeR'8IA[O?8`P5qS42'(V5\j9a0%)p&c9s,f61,<h,%:m<2MAe$$0QgQrg.:V2%#&%KX7LL[Yn6(CVXJq_l!J1p.)A`n?<rbmt<!*EAcq$)6m7)_jQV9F]`^"bd)36Be[9F<K=*%J&,uC\VAI<ro\*2S@'QBB%%!8`p%c(\c7KaqB,Rk5*7(2ORk3kDJU;IK35$("lF@Cdafm?,SB9n?td^i2qDH\9ua:bZl=BFMqVTEXGCOc]amaFN''W431X7cY7dCa/!I%+e&ra:aM2?A5Y,^),(4k!RXHj!0R\&BoYb!.$0F]GN10Jk%>8t%U<)ccsg!@dkDL,2N5k%<5R*me`fD^dLu&q,Uqah(X,/mTE:+k%/33^OJjs58RR(S`>6JM'+42X)Oe2g+oot#8;b]WWJ/4u7XV"Z$MlIlX@6EVM(ZA5ZoFq@f<5D`_8fOKZ-%38(A5HIHQebO`;bOX?%"q#:[FAPm`j9!+s)#&[5Ft?7b;CUP46+NTpROl8u;Q<q*!X"`^=#?e[JS(S(&a?H,L6POA>[1N[27Z9pM9L^+'F]2sn/B8@\!2o3%g*M9smM)%f!c5j(*&.UtlCdgR;QR-[DX7Ajl=qaspWUh%ZD1SnR>>'GitBCL:auR,dBG(lY`q^&5Y8iHTg;#Xnl2i/K,Vn6X:bdG%QU2Af/AuG+;'Tj/BdEg3$aJ9gUs]?@.ED[eS7*it$`D8-;HMqY-GYbDIR/[n(k`6T$\X`G+#"/Y2m2)e&o\PKpiejl%5)5`PrT/f%cK(,hYgOXJ!hR;1JWEW+;10bc$UmI@6]hlF6SD#B\>lLp:kWk)+r+"J$4%SIGS*_:[W*2h/-8-aDo6XOie2ra4=ZJn"(GD3R?TO$%KS`93-CQ4pRAEg>^:K2$k#gF6'j;OLXb4G].9m-C#PAa*\&;PTZa#3VO.qc&!?a8&X-,5c)fSoSR_E"T7\uFJ,]q1.?'#`Egns;j%^CW$JUH7ei@rRE8&?^$UVH&H_XCP3(ig,Eiialqg**)#U7<pZh>_dH0HB:H]X]l!_>6;N/!MpBKV4'<=E27W?a?\YdTZgktn-XBN%Z*J"'E/0;mWMZ$kl3LA9\?goF,*49?YjbLQ%#6>VP+o-/W6J-L#+*>u!k&P\63n<0/p!:p\WikNg`fhW8`(h"/gG;(FSMGrBEDoi%[8noDqfYWg;7\?jZdH;b,UrQjd#b25dpPljcH/[,[1QH4p6<ATPZSff_/lVs\NQr@W(QV/E4hhPRC8i:`s+D<gQiR'WJhemA@?A)%1\s\$L8ctuhQd\lTS48L<H=#e?-m8Q)WoVgl17u!1eu/g*U8;ISQj_!b6Fn=<&$+Ya&&Xlmt4FmBIRVaG*6sB;46SW&]On[X'A+Z%@0;#gDb\dCdN&VB5p8qFW/hQV;*o:JDi7Lm!KgKXXMe?t8@=>t5iEVKUl<,Vdn@9]VO.cNLN(gL_.*PL&r7;YdX\pJ>llMF=G*h&%W>(YcBZO!SkbHfP?!5W._.4ged:![;FmRZ^V9mX*:(HLTPKOMO9'gDo'W_;-Jg>'X@YP:]#3acMMP?"cL??B!cNN29LFc[0Un9Yo%ej,5"CklFSESl7k8n%NH`?:@7B<f?TL"]rp.OLd5)$(!]OI#"-8c4JJ+]-XSbBVoT;JrI/;%Qn6rSLH]3\/!2a3ut#,CSmpg$I:3%kD6i<'[$OKIeN;@_kB[WOWGFp#@H=cBV0n.Jb:C^'\"1[7>GGB.rbGI3&oCFK9L[I=R%T0cDIaZ;JK*QgK+`$:ha:0Hf2c.2J61p%$S7"$n.N033_[FF4S>?\Mn2>CM+)SSarHm;&6?q'd8^3i?878bNgCg6;B)N"L1B.G:hEW`7oH$<$_NU,-7H2\3/E(/A>@Y:CP/&Z%6aKc_*i,q.I2$BN7.ND\&ja"'ap`(XC<.^<p$.i7W\/I'1H?1P$?SWPT<FJ>OJ*('!@=Vi3>R_hQ:$o<[uAPA`%=fbVTlJHe-6AI%Q=p]0^hA:lke!Km1!"s:U=D6\#;$&.@pbXt;>j6>Pp^6r?:WBg\.kh-!'9uaR1VikN4B>P\X4]2oTWtt-jh<7iN3D[Rr).\m>R\s%ATI![18rKPKbiDn![3*kL:#/I8j:N?C\l20Z,#6Tr16-0N.Xb`aYVUiiSS^SHZL,%ES74s>N4JG*dW$:_6%ttf@%8os5*^Z[2Eb4%T%+gn7F-2,J\Pq*i1tsB1N[Oc^_]V!PR8Tu.0(7h]a]2=_(&;S\>^NnMdNkLAB(Ql+Njgo!AgDJ,*:_rS!gdeJYIb%3c?HT&)^ED%^3njWN@`I9PQG@#FPOKJCc!FHSTG!\\lD'Kb!?iY:.Pmp:h&HM)<a^3Z*/,-]VO:[flI3oHdi:>Y>2*sQ.S!Qe=p/ZUJ$3kA9'-1%@0rcD-Gg;*+hJ8\%(\>:j:i^@?j[$V@?<P)GB^j\ZV&<$EA@mUE7X:1Q<]/^7$SUQEiG'G/Wnd;kZ)"c+`qk(MP3,V7[GMV_OaJD%4-`dU*g".9P]UVJLkj#k1q*;'PW*j?@I-:2WLB-*4#TomXq;Y5AlH/bk]/(A5i[P1i][h1)7Td->hptV?psapC3s^4_LN\dRfoZT%).\q2.T>S\,[3T9b2MA5%#H7&N_\C7"VYH+L0HXK:#7a""ktdL]Vup3U=DRNfNf8l%.%ZJd:gR<.C(gE(+0P)+;j.3mRD&7=;JeD%0o0D,B$g3l$4(Pu6TYsH.D(7[Ff9^L5Wfr?AgdbmZr-R:@*r@&*707h.)FGb$(jO,3#GgbbpKB%JQ*o9VXY['*&ZR%"ZlfH)q#:2%`?c2J!"a"3(W0W$h"<&B$gt+c*JM5E-fCYiPpl!n$ss4[_CIMfAtTUEVl;Gb`$(:?/g<ph;^Q01Q,8[cDDNjMQC=L#e]]!:p[L,!%D@09A!2bWg\3kJ]e.PmaV-oHFd?;PHJ,oXTJO61g'#d016QN-?i.Kg8D(H?[`%;",PD$c6QkE^2`\G9WTYW!dDZL]*b')Ni*u$Ps%nf;21iIK=.7,/rip]X/RlO5WJ!cIHf-FXC()hXJVPMu^"](''%.DZ^W0L=sffEA*E9^tH^G)-A@(PIPi!Hes=*g_oR.oZR(M0jYY%WAWJZ8s8R:&fC-b_qP0S,d&38AIAcm>X+ks'ibC99Nl.-8f/q<c-RSl`N]`68o47KJ[Q$C)KX*kD86:pe@d_Zcdb@eLK$UEK01Fi%%4G^]-3AD,.&+(/\4]D&/0)%J@/5s2k/oN'D]-b@C_*shU(i%I(7,8:^Q!%M.g@/)Rke#AK^U*t76=\QLTqU!])$EqQsrE)[!f@k%DC*s^9r%5i[LEB;7JFHO]&T(td.dp,7&;n%F"&07bpZMqI&4VUoo^hn$$upIm'm5?plT(8%:7s]FHZ`%:dIUOVc5V.FrH4g!6.Q^%#_4l?X-O+oRiTJq.&7k;g$'Vf)Q)dQm$kWR6O"^2fn9XQ[^)`.+#7Tq"BG9mR,:_Al)$AH30:2.EY1%i_,f+ZP$ANmK5;_pEJGRB%.*tU-C']p*%75]c3`-81FHOS&:t$9ej5;Pk@M/mfC`VNrQ3F*iWbA>bTI!5(@19G\2KPC]<$MMGl8/hr@Q1>]olX(;7f,s0J1[1d%c%qt0!>.i,6I[,TL2Kjf%oDMQCLZKAAPp648.ZNh]d(lN,)eo:<<CdfFW]X1UYPtu.2<`kndl6=UK`PP==&>+[gIsmiqi47)09KV%7!01Yd0iC6@]6qRkSGPG8?di10A%c(R"4^Z,!m,t:"^XSdpQBh(m,,^Z/[9cjUo4+\!6,W`!o"\CUi5#U.AD*bFY[H(gaQ1R^bFE%I.3q*G6jN"F=ngUM<m?)JtOOY)CKtFYp,Sb8lF[]`82?sG,tM#B$#Dk2>J<:>*7ZdGTU>$W&1`'W'G.kh[?el3InarHMqYC2.FCV%eVn"[I7rPHZ->%#2bMSc#M]L+bGM]cW(jc./dbSteR[30l-9LcJ\%`f?a*-jAX5s9d>s0\BFd+oU>sOagT`.oD%9Pjb?M<+p'*5X%7!hgoe?Mt&L?LND9r3?bPs@lf-H],gSsbLK'<nI-I-oGKms*n*-tq:E*gKD<K.rR$hEctPkhihA>6K=[r5sYlAJ<C^OgKXVEG?U=%bHD4g!ri?,$c[sQC.DSXdD[MGkYi352Ah)_fFJ1;QCbbg_Da1l$+L#7GIEOZBh%<ukkP8YT1;UP7hKD[bKlo(5Z/#7MV34L9=tPC%Q:TTCn"EU:*L)=!3,\fYOFa^:N,"?8/=/`f7fJr0*jp<lNTX??%Vph&1Yhg@:E-^f_cj88ra0n/RAk#hDDMDTIqa&>kT`QS5b<*@%e;'#h#ANh3p\/=\_&\Mj?rc89J6?''b]5j6$K;MG!9Zqh`;b<p#[i%,-lK5rYY:lU%A]\WAsXnL<b5.S#i1lEN6*XR%0^ir`mdDU%9!h0k.9]]t)lm@k]YrBG).@<(_*K;HWeoRCeZqo[7B&uG>:LA_FBauAdm*:n+>b;;RRR9pJ<!<$C(T60Y[CFn&*fYki(S+1&a`12%_i79UID`UaNKt.W)e_AO?EQ'G"clM,[2n<k\5sdO1@Q(n4\\?=nae?Z7&/VXNX^b]\HDG#P/)kn@dun$@U[bAYTSeUi@?TX)steh%G;4sm2m:BAc4ab'#$r4@kdu4[rdku+Sn1;_ga!*3NL9nbI?g'!XalgKU5bh?l/Gh%1,Sf!3cu%GV&8*$,@'">0trK`D5hGN7bj1E%P#l\bRO'X3M"rL-.$[AP9;Q*^DMuqZqWD,jKLQ)BX'#L@)hfENBs8sNfV#r#N7<.d<m`'.)N%!YGP8s?==P;*kS8/h#UQ!1:!Y.E%Yo`m"ki@9CL.4+5-(H;&"$#[6*J5MOW?*=CeZm3t2:+sZON]Q`:k-E^!_`o>F6lG4SP%];QuE97LI(V;8;-AQ%G/LJe^QIV[h2so%@OM#<ClDO/V.A[Y`"FLT23ka,<E8#R$`[)K98l/ZQGXD)b>a>1MRY`f(Qt#GnA59b%_>$_<&X.o&ET-%-YPD4=Kln&+HliT+QbC^%Ym(W363j]_ZmS+(7Ail>N)WiV+F]JOJ?Ya\S"6H.g7[7%VQ3:["+ehuhfQQTNb$=R*V]g2%lFqa'!3C.5L^o-e,ocaLP.W3W+omr%K;8K64j`*\?4ZYKWf4_2giMgO7dTM[DJkMHbD=bH[a?k.jOqWEgF)IR4>YAMln2^-8_@7)YXFNoPTbnFL[7scZ^7t<I*$^sL;)'G%"uL6LArcWaMLuKeF<n,(K?qG!2G+@?\e),3/Q'be1'1(u2M-b\Tg,\;LD9Ir+6\1D[B0]j+jZ3[o_llreDQh54C5&8Kfm/`UK9qC%I]C,\?B>eZ6YS'7:OrG'WU:9V^:Y<gC8_ItYZ\?EI5)pXHDuiM]7T&(ii=7ff;/fp9jGfWq\G@?+al/6d/ciYlSRh%17_YM_SNDa%gn-ga#ZI2LEpshtP1DAcgrpLU9/AA5[r_u:_XBmlj8Mf(FbsnNo8F"6c=DfG>$^Usneo;+Ao#iEgJ$IT<i!2$Lq6gII!-cl:u/`p%5hm*H.KEneiWL-?`I%%LQ#F9U]odb/O`BX\$rgcP5?6teb2VHD(Fu`RU*X9?&)Z&hL#)m-i:-"kZof;:[+/7ieG:djQaS+>0tei$%o,:8+E2FCDd^d:O_.#.@\t]'ggJJ:oFChorn?5ogq\/[fcZu!<hIM,MjQ"d[9=_N9h"[H7s!QP-Hq7ZU4J]>@`+W&7HXEo^2;/c.%iU+PK+Pfh#Bc!_=\VKieku$n5XiRFU8afJQjN]EG]YlJBJto8p#L_'WRbP8a=BWB8r?n"YF3)k"!h%S[kP/W$=78$j=hYNFF_HOQ%Xi.5:g3!mCCBI4#),:1G'A(+nk7VuZ!^g==r?A#7P&^6XYFf>/34JYtRY6q+?&2kE84.FP:^s3PLK$a"d^ch#fZ6<[a?$_8EtZ`Q%(8.a@-FBcfrt*TeOu6dOq3^n*)bfi)=k'%(3G^3F^;46g\&mp(MU"8Ym,-mdd`o?S:#!P,L)?3l8$?@5k&+?sS&hMAIFl]`97<'H%oB^=0m-_hV!7U-$"Cot9%\Yi#'tX:m;'W2he]+%"$o`MF\0N<@h@)YTRZluG2Q7.#+`k8Pm</t^6/Jbl0$Z`oNd1FG!6*kHTkN)h%>B^$8i@<l^7/ua0g"nQTV.9,,h6PdLisqiVTD9bjSL1\S]*f_WcsMi'UU$#jl=%ug35^gF=H2)3'bqYn5Gdo+!Wo<%DC2qJBGJl)%Tn92+h?A+g/GZg2db1N5nb`k@[E@eM3a]J5PPrHuchfFB9.GBAFZ*VbLrHE$oj17WO-R25c`Nak8RTGK>Zdt#?gQZlj*DsK:fNWX%)8W-S6mQ7_<:GXW\Q3(!D$c9J7i7e#e!c^;DV;]\M1-3QpL$8E]AL)JK&^&bgBXFUqeBNCXhZD0mB+"W9?X$toPP;UN7URJT;N5>%4RHQ8GQtg%Ds&\5U9AAu%MsV<N@$ji[?@Xd6FRjjXJ_7rJ;9$5`7kdLmEg#ug\k@/p52U?*=U#:B+?@DV-V/>p#sgp,O:P9@A3g*%Vdt'fH&I(:a3+q'hFKkA'jHNb#YXES2P<^tM4@,uG:[;$=?XOGEuuK+9/P&LhjHa:1B14*#F2.A9/mMkX[dE^cI[-?C>R<_hZT9W%J<tU&Y-&3&m<&uE^kGR\bCDph]Gl(UiMYIGrSbatJW5LA@2&#t[;-^01om2\fQjS?cn*,R;qb-3@rd'B:\otC-$Gop&^o4!KVK0>%bqH2beYsWtd@H74ag-jhR_g]!XA+"@jZ`-I]/,e-c!,oDa5Q'=9:eq)$[]>-[;)TH;LKje[utDf&.Ifl!Q'Th$Q2fAYrVQRj!rUY%5f:agEP_XJ+4hIrLTk0ml0^qN-#J6uEM!^=<j^McD?@MQnp@H1l7=i=[/bM'"M=E'BBRNWl0X1[FB9=b8;Bn.]a_O+#f/H4?g/T.%D*i\Jo:V:kbAR:HJ-*VBh>;o%#N7(2Q5)Q!=l#;EotdK[,2FMf>uh*UPdq6EfqkL#NZ*4el1*G[gt'o']TMpG@baJJ11-4V#%Qh1%6l%jO;f^>$0%+5-!fV<3\9&b=hU9mo%mudQ5L6XmdPQ)<h@IA8Xp+m3`&f+$9tK/edF+,a4-n@'H[C!1rT)Kk):)\"Qe^`Be^<L/%>r1>N\:)$>NpD\s6]R7\l4#<$;Gq@-n)fb\4j(YIhR>4d#3cBOF9,*LmqAU:Y(Rq8P3udnKtfu(&qAF]QAJJ7+4aEY!b@]g(_<E;%?ZO3.0;Xos!ieeWI\J;d=9O?"`dVjjOM67U&3.X\ks:V;ja[,g7s=f.(%fd!_2G&u/c8A+$pK!9h<gGC=]I_37^[@(E'oF:3e_(b%+(-)>Fc9-<B:A`VrbKe"#EJ"j^_59BN7D1&bsK!&VJ]nZM/.qUV>BYMZ6>QAC":kJ`En&lB&<L\D?$IUO-aT+F^g*8a5/%1qNS@?%Y]V&-g(5mu\1OB6^rpkk)V"fOX9(hT'[OugX\IRm52Jl`38e5q3J*NK?NsX8mTEQoS2G\9;CiR;)M4ojOH'l5J4Cj7*DkIu1ggn=%l_6'Ea9MeB0_sS<h?44]FL$T3`Sb5*T[ZeTi$><C.s+Q'Ai8$IKu^;sVk:Z-PC*EnBT7Y./;u+r9eDXpj@:\[eI&'0jJnW4i*Jr>%ked;1]s0"nCTH$*=kXSDiJqt)J^$>ZEG(:IZBeu:2_g9hS=T$?jd3]\`q;gtToe'k"=e7(O;W>N*Eo*%6mA7l910KTAO5=QPoB?T%YlXoq%*B$.e`'C40=YKm&/dQ`f$j6mghr[Y5UQ<tWm9BD>J6?ib,jD`*d'&ZJO=#]A].c\UdXu_Op]JFBlt,LYi,42MY-8DHVJ2a%h9dFEi%)Vg@rTJ(%[f6p@&+;b]iQ<bn/[m55ABZI+ZQbFWjZ`bI?9gg#"L+Bm)M^V/\J_;06cZ,,D?q=DkiTYog*A(*$@[cKqq)U%!O\%db7U:6ob80#+juSi-#Br8h5K@k*0uOC''jA*`A%C.OYUCS.<A;RI21O@/h79CP=GWY84F:[I3Z$h;VkF0$RhLnZ8'jK88gA!%CfNd^Pj=8Y8JN49g"3;uAU".cGXA\HrfXUJ^E6km=I9e;]ub1Y`1n^odMdU?QL_jWPe21*]'KW4N%O6#m7PrdqpG/$a+]3(;!kZb%J!Hf<\/Qg!UrlY)pD)MPd@hj(;bM3SBfY,G&gd62@+j9]<#i<8*h-ca0VB.n%Hjao&K<1K*0#HsMr3F+_e#9Qa1>8ak7h?8Fc]Hd%LGU$3YeT[jP^S7MMS9UI3O:L[pCXAh?g6k9V$9T!F,.Cs*1N=d?`\K5jNSqFL*,h]_TQjL?(T*h,Pf4EdQ=+8Xn]E`hOh-XMog(0%J/LPg&f?n^4&"EAVC4CEX(i/hBNVT^i-r5TMd/0u9gn.5TnQS4#Z@hmASIp/Ne6YU;fJ?p!>+K.l!sgDPc^K:1LS1NPS/EcI,2,%%/PB8;?>#TA3`0(X6c#I<J51HgifpOMJh6jCpEFj);PYFY;kE3l-=(Pc+%i#VH^Bk@fXu`b^D.t[Ji0R+4ApRnmWHXq9bc-,jRWs0%0EG^%JTmbkcN%SBhPG>H4lg7$=[BXid_-'(&Z0A#qdim^l<2ctN0%:n3@i_j]V#E?^\"Bs%trmG:,SkMH8:>Um-t!%>n2I#^:J&&%?rk_K1Qsm2W"28i4;c*oeM2]F@Cd5;<1fnlK"-uqlk0mI4Wc%!aid^qX;"3H0=KH%(!"A<rOLcU5NL2\(83pS:\%F^<?nJS:/KAA%XV%t@P$4ni8@ZKO"e_MI_?B(.VAYsSmrlEBc#_&c*JGIQnG9M\Cu"0U%:\&YR?IT2_Y]I9Gc$mW6^1@C@^kuiJga&a^j*I6TpiNY%=ZQ.Z2UU2I2P5?PGKtM,=B"bc@/nnL;l1tXDHW%U=.*s1Ko@;g4ssIiMPWDH!aQYY%=crh%*ije18(=hf<3)/R>Qfraei^/I&a-=%!!H@;N9dFa21d#$gSb<^3n4Rh)kc`G#N_3K!3YeGD]GeEdQ'M'X/.ZKQJPj,Db0@@Pcc!HekkiUc>,1O!&)iM&*b#u]!NIpHI:XO%<8Hm(NoDrrOHn'/[VqIN^AlR&l]%.s;`d8nqt,d$Vrl,BZ(]:*'$`[NE2qmB^7\'S/,h-J_a)5)!U8$%Ytb3ImB,'eUEibi%!Uf>%PVi0@,nYTsJa1n!;.rjP+!?uHS"lVj54q"Yh9c*Mk,Z$De9(iK[HkNI?qR.+1q[q=n`!1hJ,;-PFL9bMW[9kGFCiCo1c6=G=JrnF%`S%Xc>5dJp!ROITAea;hmHdJiqKbN8<&5uYE8oos#$l/CbR*<7:[@CEHOpO[XMd8u`''36;-/<''<"/g)dVa'j6thC4T/'.,EsP5%KteYoZM6;iP<dFW8(^,KK:6k*IY@0G/].oX>Y&Dk(8Qn401d/d6X$6MLaFFf(9f`S/7u,Y[<Zt3,=4C6"h2MgRDDll!WDVRG`.`e%7]%BBN<Au4DAgMQEf\D8kS?aj.LVCp<\AR+/CgS#5i>*I!I-b-$]"RMp(+PFTc3MV:79_),5bf]7F&QuIk#ck9==BGE`fqONS6Cl%@"6r$5?6b68me+(X2k)eWbB$)\)eN([C<229*?cP!0'`<$<VmS^rhOL%T%uYS=#S&i,W/jaLl(W[f[jGeLj1"MBjpdPg$TQ`,^[_%Mb`aQ!sL2i[tk$q%#tc#Pnc63L%KaG8R(BHi1kXc#W6gl1o^2h5Z_>6Cjht+VBIZn#D=Og5A]<iFFM7:`0*LXDF8#<%ld5BJ?UZJ%lm;OdUa9$nUM@(GC'e5AnT'u!2cB!VM2F%KbUJ$6)QA=7bR:4iTo`,f#.%k4i+@=JCmD>KXmWkT_Z+L*dIWM)/!-3TEYI]Q6[q.3%>fJ9SI7n:R+g"OSd7)NU^+6!N081)*6oh+,ZcZ6E<cZ9Krm(E9_m`=*rJqIa4)j[=dPTdXR`Zd(p,JS_6d2AH5mHIlFFfrppa.;]%-30YY(;m7hb7JB7^*Hp';%V/&(T9M<UYJS+6,cXiifNm16J@km9*[,GWE?_VFd-%([[u@P$/LBm.WXmAZQ,(/,2M.6g)g*+';-+?%J=Vo.a?*B`J\@t][1g-4mlq*M,%"4N",t/>dR=-__jcIX-d(E-pmar;=K4?N0&MU@<@CD5b+]30:ZXPjO4ngUclWMRH6`B-D,-=+%aNocd;:=m]2!8+@euUm"*jm@bc'1XR-$U"$G\(58FMAien!S$(<gNoL^X)V)_>,_h*q=MYYq&4CW*!2g9Ul+EbW%jr$+2o\</iS^%n6BH\km1/oT?N/!9rnRA<+?1F\L80sdO`'C6@8OO>H-Z(!dNn:&i#F@a"3O^qW]gfg&#o)'[id"FNHVikA"m)asSnbal+%?FM3gR%5,*3!KF>3/':u!l*>'9PgePD#(OLY<'r)OLAUuuU9G%sNjJ^M=.[i_J>OEV=K2l3=Y^nI`R59LV"Jg&olO*A-XLh/X+=_IUb`C1_%i\XCt*mhT*@ddE0kDuZ03$V2c]U:;9O_cU<pN34^=#e(Abe'4;JcnGE!W`DEKm"!VoE%p`:b2E@h-\AMED^0^7'<JRrc5<=q;Lec%QXQ!aP>Es((t;^=fhL'M&:$Eh%<Uq=KE3iaDIHMYQ2TW40%CktP-2+=1tX[slBn.#Q4rEOGc;b9)_$oW,r20qiD1m9#UCE3-qIom%iO6IIL*b&3]:dTQ>sa(T(l7p#E.e:^&p7>#7j2D^k.5BZPtW"42<FIsE\cQHkVV:o7NRi*=6:7E1JG._2L$Iqo$B`Z\7::SMq<FM%ep0+r1bMOi9Wn@jP-Njn:1u473P=a@h+gXEYi2#);,PDY#6I`SX1/P1XgZ.=bF+b-Us*U0\99R>,:-cMCmlJufdI>BiD(f0a?VF@%5PBMTXuB7i:0H[??Jr9tXo]lY;!9:b3XNSTHiem/EKKYhWk-f93R,cQ<*uV(:m@uc;`,,DHlUT(*;NH<?n@SrF*ujE8@gao4^q0_%jC+[F:kD33H2tGuY]BG.PSf1?%8hNDgmUH!5>SbqC)O-(H2l5QZN$EBRG)q-[KB?0[LXBL_Gs9]]i]Bq&.FTa2r`*'1fI;hP3MK$%Uehj?P#B.)02$)gIpVH?[1^\W.h^O5g\[L]EOKk^b)t4njJu33V2/lJc;53dJWK(k3AdF*80)#Z<_nJ;Rs&%TU`W3Re@P#AmB+`m%;Ot!hNcedIALV:XM2$+(a:e.4OG0fDX<T<kB<\&I't`OK?`RJ140$8]mQr9'dbRNk@@SBj3d"G%5YbUe:/8Xco]r6*3l*Oq.)Ab"%n"eNdFb3M3dntGV7a32';M`7h'WFO2dMQ=ifsCnSc4o/\;.7bl*I0dZB#B6EA-Y>pBc(95N0.65;5*3TUEQnlASY'`1bqnA:s1<O%^Y#FLNV#T?KYiG[?MB!0JVYbs9kq7T01gqIj:Og9r-b-M!_K3+4)m_$4.Sa6Zpb[uPusr+<7@VgPMEGSans[\Cc:Zp;)(Clpl(f'%.`-q9XC_f1DeGJf]q;NA812rP_eM/H#;UM.!T)+T$tRek-1L+OrGe,Z=)faS$lV@el42(@I`PfIpR>2#Ign0S[-aIAU!qF;fcVXI%LHR)J3DbJdoQpMJB\ehZ1L-Q!gMJWh<%7.=<q%i0P=BDC*u.WfAHM3I?*+@(i;k.Uh;+m\!'=/UeoaPVQFHNuDF2ddld4[gAf7aQ%Q,T"+.&@'42qbIVOYiL8lm?&#V_9@#*Wpqem.:K]@XHf*<:!57e*0Sr],?4`3aMp"XU=CWL]T[beaYdR!1Co9!H.Z*37!"`?SpGh%8\jgI.3)YsG;lIapcIEPLTt7obaC&uC11**"r.]r1eA!!\0PWrUsJaTi3Zh<%`EcN?;GFQkc_?d%_aes:\')#,T9*Q[r0LL.@fC:%>IsXoDUO/Yne/-d>aWof:>96GQ8m[pfc`^cKb\gBN;PIo=/5RG@uGZkG<-@@@46q$Hb<==l](PSYcZd;E_9DlC#c@^[\oACf;0`6%+r8&'R9ioJK[?kk:QA@r/FQX6E<$&#g]Yf)aATG2EO*O2G?,/Gj-&nt<\r4]DM$ui\NdtJ'!<`lB6[*MMK/-pKdQARO?I]%B%e]J%F7;'hE$DLU7J9BaftDKGSPOiDXQ9.rEIf?#2j]:]N#W:%,t\0!<^.1ljPPU^%^@#-=0ZN+I)t*9'Ukr_*Xj4eR`I_W&k=ShKY!!j%3`PC#`:;Kk$EEMls*CiqIS@.[If)C7p%LWLVB(_a3oe`[MOH)f+;ajrHNfG)3e-TtV.c-]E_pWX<,>jC5-ARRf"eBA>Rg@Q]1%@"%>*?JhN4o[CDF1kUZPSN0#[J<7Qha!;GOBmBpJ=L0`\#8@'\262B?`.P#8Y3G8>+fi_\WT@lD(]i(o">fBUGbInfZ+*?);XJkZ].[%LgJT9L)"e5[KFrd<G(7<67'%.0sW@GPhLQM:&o.=)7+R=l]boS@Z.BJdLVUcECPBH_@?L/<"AuIjn>,c2<-MY1u6$T:9%u+Ru)&n%U+aPa$4%qC@r[Z7?N*+6pZ6c)nsGY=m&5TYg$e[\;T3sk3YTpj!'-KB,GDX'\<4C%Hs;^[5K1VDk>Vko70?#^0$hj`cF^+#D#!Ms%Yrb'eM)AEsjqI'ZIMM\#%ctc?fHQ2bW<eR7*TE_Eg5>1X[HnK@mXF-`gN1&j3brHCK,j,>B._*dc#92qjef#a0R*,;mNk\,;V;V"%bL/I%>t3_hRmU?$[5,XGHI@mS=2d)p4t%HMUu^t%<Pra.^0uI\VbeE\WkO='VHu]Jk%4sk9-@,S";c.B9^;APoY`&?O!i>jWCUq%%TY&B/`^C22"`gR5&4)0.=X$Tr>2SJ,A_A90Vj,+8rZO1G_u?UtCn\;4![CDX^#nK.PQ&8`aB8GH4kCW%UQ0nV0E0h!Vk]8lJjE)$%Za"EOIlNpa#8(Fi^8JUUc!t=U^"<c=K)FS09$e&;.]&[ACFQ_H"Whdq>TkjR+OaI!d.01hC^R)A'r%#A71`9P8;F#1"bchbS\AfC%do<S5!iZg(i36./CQ$4oac1r95?1=/)aA^s;+g5/'Qr=aUckN!mZ=G;N>@JTE;697H7UEW.--Rh?q4&3es:dBV!F#)#j(t1X[?IZ%o>d1AB0@9\XHDARB%A2kYlZo?FFt8@UC_RlSn7&',&%(2ZK=kiacj!o6mu[SHZKOL]^4V=clt1:jqJ5I<96r:PgV_(FAk2na,,)+%&uXfDSf%DKASH\HFG\d<+$sprBpusn/N)(QjLg6YIZ#0lg:1_5M$<b?ijA(qr8\IJm]N9@pXr;(qCje_VH$Vi"9S&@WQa#B(OL8;%Oaa75@4q_:W9SI8ED$r4kQ)nj0fc?Op'@Io4Sh`n;oBaLXF'B&>=>.l[4pJ\qE`70Hu]In`L.;T^91s$<8jW-]1k`LJ]&N?!NXfW%j)PG_E:ERQSFV1Q&5Z?'Wpj0##m7'!;).jBbod5;?dY%P\haD#Wi<'ZNWc<dmT9cHj>-'6kd/O'a4qu;;frW4,T4u^AeuITGZ*K6%<f56]]]O-ZFM/H=-lne2]*#.4l37DPhpgsZl:VB1\ft@uMOA!X5/]R+k_eTW?K3U1;coXN>t_/>QdT&(\pjW-&h\dAIUkVdr1P,q%<6%%,aeT[XN1E/-E'0ug.4&FF;E)OujMn58A+S:B)gS@t6MKl2P@I4@UsJKDB/l]6%):4iUtCgEn!5Qe,G@(I\+i]nb7<e4:6*3!%FN/MgA\60JXW"LO8d$A@kSOAgLYZh<<cg2h+01(go-i,C,HJWbZp/*%L!68#'[S(RLZ'VWc3=8QTl:CrmA\:`4S<-3%ELM,=Vp9Y%,8E35F]YjU`';7H86X$L@2)uN"NP#IC5DgU`<+Z42uu&]#jh&nC65BU?"Ph@VL!%&_<*e[E4rbs"k)5o)n$kB:jIPEXUF%j=P=rI%$A(s=XdGa%-95NDG-QNUE?"bf3DtPc?J"`V2A\+rXhL\$-i3B(S/]=.+tqbKk&iHuB"KnUO\88V?Dl'.TbuuQ=]@gr05l,2Qi#@&%:3<b!_5X:Ti!4<c5=M@-n.\f)Z?&A,oinf^\JW95LHF7i#(<#-FZ+_G>.`*&bkU8IN?"KL?uo0+@A"IU?tp;_Km2T';*,D@C[3F#%]2%=TUdIm8jc`Q12<ob:`5M>+Fbd*lpa'?&=iM+-#V.,4Ap#s;E\^DL%Xpr]9E[hX<\4t@2O+0^fe\Z&,G:(-(rJq0@72`%BVLgO%*AE(<?BgQuh,mmTb3]=`Gf5L2>sYVP;I[^K4=ja"HaSMM?[j*Z1h'dU7VksqFJMq2T@5Mq)\'YUd7e%ALg>6RaCNVKNr,g<f>%lj%inS;H&B?G;n'q]s;N*mFrrsu1m%ma^'0:Y6A'VQAcN_7ba2=CjLF1>imm_b[@:`9+=GJ9iGr2Tp(&mP:^,IEh+B:t`fCAQ:SqrHa%pY^uPim]bE9Y)u>:8.O0)/N9kU@/uCmO%cHqfBH5IL*HrFLdT4gtpm2Uu2E#C.V''rHt\H)6=rtTLr7/4/I?o*CUGj$'1o2bT-%&%[`cPOMUL_c6cC_FG7XH\df)iSNN'LH.YGm%E9m4s,48)#4.W^`A!^7fCQp=]O>/m-,pA`hhd'&@[!J[uX$*jCX4dNH_B@YC8dAN8%Y)kPgRp6OqT!sUs[p8#F[1^O]CbtZ?q"<Gef:T>nZ>Z4S]ogb#"#KarX?l=9;ps'gZp9.r9AmE9bM0KELa:HOL,PYZNJ=f_*p,^A%nF2HrQD@d,92YkrL?X.?eZ3PF0m@df=1]j/j-X0,<3BO>,8)MH3\:b1"SanEFKUbsPOgUbUK0s]$#%7JDX!heO_N^c_!mV;fl>pr%*^:o<):WZ'e'd3B?rW-"MOM8`@`'f!?d]fq?sfp=PjS:&>kj+e^MhQn7d>"!$![3GS/U=+LMK-uV(AUOe(oY1.`1`/qHBd&_-pf;%Ng+Ta+cMoWmGKVm"cCDkdW@q"<-K<fl#.:pC08oHpGh7E[<5t%G;^QS^VgLq_G312Od_$X833fD4uO+Z8qoo^8I\o6fe4q4]9BsV%E^ZUY5J@RaGBTJ)^g0-"diI)*p;$*+hUJuf=hYmlH^YdcJ6?6IS=GfWOugg5phG[Rggh0T#_hF<idd4gDH*fe^k*BWl^td7Fop[H%lL2@a9g9[P[Dppb9s.$j2p:8lW5,B&2V00F92f]t9p(.tEi#]13;d/A>cJ9C#j_7L*AA?,Q@6;P*0j\?kQ-oHL01J)K1UaY*E[B8%SO%_G!HF;dce2pkp-@B3%huU3Qk7oAPaL`<_5Qp\Ze4qHAVP,9*]4M'aHU48!EnGUJgfD0Arrc[W.%3Labmfn_tl.52In7Xj4"^f%Tk6AmG(QG%@`[qEK.OFKL"Gd_FM/H=.,T6P=DUo:MB"67Q6h?\Bh8#qXOJ"6kd"-X>r$Y(aGrYl;r.jA>\j]p*L<u7`DU3KmMC#4%'oE8:3JpJfp=crm;<GO!9APue7LH"B.G7FcP83g-\&<cG=q]f.M8]b2'=g`.qa;plQ_%m0D+-WIMF;7#)f,k,!L/]l/=\pKmCXWT%f\T8?"UW<W<Fh^Fe(0EEa(au'GaBDq6ZdekB!JaY['dbf[)bF2@=kbD\OBm_<Y$<D<[kDf:P1EHVLZ-'X6FDhgQ5%3,FSG,C0[rr%+"Fi[>Q:iqV,'[Bd-mLaAqW-!@5O\qiiY;o3G[9Ef>C#%8M.G375HEu9A'_jDE$Sl8>#);Q<3f]OC(IN2"2H[`YhpK;W>31=0]^H%"rRMY=0Z7?3T/W-;Pgq]qIiY^$9^j#+Y:i(BeQ.`Fn;g(:29shi8#@H8#_rdqKhjR"&c%#+EJLfT^0R?8S]c<d4,&a):b9_/uPVD%mJ+Omp;\LcDksIO#7E1,+Q[ks7I,f<UM1R8C<buTo&h^oC_%8m/:RkFca+)R.)sM^@p*AI!(P+&N\>BE%:dg8`MBa*UI;U*/))!9%82Y*LZgdZrar/+*,J(_Y6#&DN_ph"VeF/@BSf:,YD_a;bB5f=X5m\,XDrP)BbP6rJnl5BGkW9[5OjRHOJ2Ci<'0AV[98j2<?OGl"%9-aub"#1esima_H-F`ug6.[(?LFS!TX>_6EVkanWU>4^2=!?I`/<S#[TOmjd2J"F.?+?I4elakln0(1iPERcfZQp>Cd4+I(jj6/;%6fMNlDB'or/*@Al*O@?:=q3aTg7EBhSS<$Q^WNJ>3X&O'B;^_!TXi57_RUHn7VRDZ(N$*48.=oV5+n<QU!2Pj2)0YeP)`h=2kjgB%1;k3tqP)GuG5M/>@%NK\ki9fE\ZreCpSm]^YtN[fWAuSd_#&p(H[YJ\fB-EJguN!\3SX)Jl>,[,=0li!/R0:Ch--]*h$]6&`0tHP%$2M4[J%I-+IHdZ-TI2^.9=/IrBVjk\\A?9lMd3N0!Xn)JP,oGoV45N4ic,oYP8Lknh)%,%!+OZ+=*$Z/A,r3dT4CH*$?O(fkO5Kc%#A14!9Fu+4'*FaS*O<JuIO#5@n34"q5o2N+;t$7tj>3<U]\K+ENRZIe/o9Iq!=NH'>B@&X*b<_O4?;tEBeN+&A&YciJ1`)D32`_]%H*-XQI]8X%;e.N)f/J&P#'Z.ld<(D)Ip-AJnan7STH,Vc89Zo&egW#?:^ug7YuI]fGk-:7NaQl-T3`l`1:Y>0iOlkbASEF[^a`'M%>Y+ZlQ?$:gV=LOUjO]4cRg'^[N)]li!e6H&Yoli`'*ahI2Pk5#=Grf83Guu-3"2A4Ss$[knl\l/mSrMt!T/MA_IL)@Rktpk(<,lM%O=CBgS4h>gRcXaBhG$W8>sYVPdLYN(RNi)-(nXDHC%NK7Dtfg-[n4?<H]:s?eHbdVIG*3tbCCbEg*A#h"S,tYhSD1JkH53r"^l8#%=O&Nu3+[!l_8_>@LQk6?d7$cZ3pGF."ib5Ble+k]q4o/2>5PZ>KK<uc)b&@8U^W3PSZ,;3*ql<f@HIptd^Tl.d;%P!A[YUg8sGou%Yp>YE=831R8X&mZ3rlG2T,iaF2X#H=r(o`7?2*Pbnns?;:OrM%HL4T1)4P]cR@M8f=g^0=]W3gNc8Cd%h]0h$:?$fen%Ek(d/dh"%k#efM8rV]5QdGe^5'*7q0d(EL?t](`_C'0FSAUfC#Q`U\lbQ"/Q`pnA[PWh%$lF]82hK7ts-2iG^K+"4gpV3O8JBpW_,C8-'8"IY%W&LR!>E/8%<L>^(.WIt:b78,b5d/fkcc,d0Q``9q%fm?@@WsM]2`"b@"#9%<_SsdF-%TQ<qE4>[UdJWLX[6$L(e^5-Q@J7\!=G\C%E,(^5Aa)6Yd6jI=:2W[XkCh(()R-\g5RjT3W5CqpPCL[oBpc)%QbRSk>j#bo!N:R#D#7EG&d)fA4Fkn^f*#YEU1TfCQ0@&sE)%5j%=19Rm,&&gCITh'8mfTVn_QY&)fN@\]SfGjWp1[4?pFWu583^'FF+"B+S"2[^_lS*:g&htP4dQ4'HWt?.5r!^6Q(B6kB5*LR1_qqc%(Kn%OjTo@7S5_sp@P""n'#77K5;Dn*e>GS#3%]Y7MoD&TC4%&aWd1]W"^E%</EqP:@8d9Si9GY1^m]h==`,c)NF<<d>n<B<ntr9s%j+?*-d_a<o%h#+qJ9]=PYfD^R']).goG<jL*$RiRS2GlZcLV0TAl8TB8_4o\HQe16IC"b:f=d9.CIW?oSg&L6L-@\OEZ":>OW38J%*o'Y44*;l^8^lY,?qS$I[3jjA+f".mN8ZBlUs]O:L[^tI9$LF&OHF[@V2M2-*ps"n3FXDB"%^(a&Z#kp$)#fF8RX]tg>^G(n0oSA%N\X'/Pc[jnE>=S`ISe%E2G$3lK:USgO],pV$>t/`&92<''a%g>g*d6YRp.%U2fTlu-M>YXkQ(H,eVo8&Vpf/i_!4"W#2KE8niSr-%`+,:Zp,E.F"1O1GY&3tI</2Ui2a[J:T#t+qo6@6+LX@oYrX?ZoXZ;$<:n$oI=/gQ5$ik/PKE.kn-RZVd/oaqFBSX(>;]OPT`m[!;%G^h)?,\>?<O]iot@Xu<]DVZ)cHj;e)@arHj*j&==E"Vi(\op&*U"B(b>8rm)[@EUHSuEUWM48D+mj=h02X-sp/sm`"6KKLmLno4,%.G^HMC?F/AlU_F-=VB:Kb2IQ\A`kDeUkq&d,Bd'nCshoFC/QP1`UOj>*`S5QT/*3YQ#NWA(kC,3N`q1CZQ-EL\b"#NfjLRqZ/!#)%#.k%P%'dm8Bc.8mrR^c8<Y/B3P#?GdeB<K:-8pCpX%q"'6(4:cJ<O*gH&_VZ`;/AsQKJ&1^XNW.U0fBZfKDD?6s[n7=j68)1!!sf%R'f(sao>7=9Ck+3/qV+n;;5nJ3=!P]Z!hc&B;>L\-%C0@jo\&?/R4\pV^(TEB+eY>C>b&.2.F<ehs,[[\Ai"\?YoDqV#m$)j0Ym1%YRnnjHaAS;d3N;$(V8TYi57A:!1Di:.OJ,E+i=Wu)\7#16e\r:`oLKi<r!MmDC)NY__to!aTg#^L7r"Bd:?4!o=Tk&T\T5XnReI.%N1`9N5Rh+bcIHB!aYIlBlUaNb4V$N]HWc5UV`T2YA28Uhe$`qMS'E+J8T6IVP=#L=&X#m8>Z9dl0RcDK`*C]pLl+]fZT5r>np%E.%f1XePnLQSg8N0U*[[5rc,(f)1U]etD8LE@1`-n>p*S?Pa:HYHB\h6Y+b-B;XB!7Np6hB7Z-RC@:]b4)DT[r,Ji]Ieo2aAi7\js'#%/53G7jlA!4`sY`/oE(RhoaW)h+r8*!eO)ADDo_3n9MEKI'phfekPInC^_ZZ^j$Ts`8s+PZee'6X\=U=(-(,@cLVJu$7eh5=+4hG\%@?!@[YJAs@9]Pin5)=s*"sL+k75%&:,]B?7E#cC#L$`"&0Rht//9<B4B6]u?rN=e6\>;h(A4iC2K(lE>+"J8:'bL!K0ks4(X1,8f%B(SQ7r&m9$'9oQ"r_i]cP:%5)_r4'tZ(67U7mNNfkm=>&UYpkc@q>'<9%\2/q#:)YBH7$Ck9"nj^]3gk9l(K@W0?U=YSYf'Xd,3#%"(s#,&Fi:^/>Oit36XNgm#Sin?AY%I0c?8s%?OnE8udG"Zq?J;"K0$FDg#pk,gX%YSjO<JWH6Go[!'?SD'85!RYGq)m"XW,R<\nM%jWD>J(km>2`S64W6Le4?']-GR4%motol`Q\6%Xap;q_^C%WJn9!n`bV9Kn:$oqafV&(IT/[EIN._&+GF,A_XBqg]_V=g49jf/NDE%e3!_ld]A@X$V+5F&\4q+$3S;&fUjhu8Og"CJbS\TMlo"e%p*7od9]P$rD-#@0ts+)i\%0s-t[`K"&#[Vl`?;,`-!H<3c"X_N2c<=%_K$JI3C$58O*W*VAhT1RjEHahF8C>2\Ia[/G?@n_I+3TPBhLM%c[`)M;br^=PLD(]@*#3#'rWTgh:>E"<]#-%6k%$m7ou6Ra9')o%=kho7<QunRHTpH7(KV8')&3Z!l`#]kPYK!a&%'@N%D(Ce59fd)c[0i'Br!3=Y:\4Vd9(?CAF\E4Y>E3QlF.j/50S+J4H"D8Z71Bl%DDMUP+I=su.Yn$;8L1!u3+\/j%_3RImd7908gnZ>@Lh8=83SS2r0X^"e0bj\48FPB\'$S(d:H!t+:gKNMW$$gY:GCq_BK:qO(5eG%3=-GR0coJE4M6muE!5RN+QqMT7C+<T17>HgPh-cjU8;Jnj_3rLEgs3jdLTQWA3FS__WQu`V*t(\;.!jX:=DNGO`mDr=hQbe&tR_$%SU*HmHB,%]:tW8E].]&*h3Kans"VB.#n"815iX'03;1nb^)rs>OKiRE4/q`Ii:ujn)Dja?p>Mq.1aa(_6PmME&rbq_bF&IfMG'-X%i/,ea2%?8%QY:?I)%9Lpbq!&/T%>El/oQ'[?t0AKmgu?/hQr'$E"WNL-:!KSYUh?nElZt#L3\irPkAm7YLgW%K57o]4UF(EBrOpa%R-3=cJ'K%#AijTO$ATk<aD:X0!!8fIR@")T..'h/lO*bMG-X='#!!ct3(DiaEUFj7g5KH=N>]qq$i>m[,`Y/YlPSqe""T$GO6r!g%Pb0CkkqCQm9O'`[e(MQuG@!cb>hc\DbLg1HC=kF/CEC!?)*T4goCSG8mrLO/^:LV0qA.Gbr$;aVQ98?q^MhHk7f))4XG4&hmB[X0%=MI"rP"Z1h%-X@L5LK^FF+8#8!T`T4<g:)OJiKmO4q?l%aX?=4OAgBnXo7M+!@;L$V"te(+BCq.7"UuWa>1k?^qYlYcS(\m/1p,r%_)F*Xb5.@-/uI&Z&J^DpBm(OEH4rLLR\lGT+'brGlnB^kLNMjKP&jH,(oH9IBpL5i4iN=Kd$6--*`dg-E]NV_3Ij#02sVXV-u'aW%#-^pIIqb6CNB]D^ZJ-?LQ[0'RG"4WLe.HJI4$]UnTPJ.kKi=%qoV2b>oQ[>Uf,L]i@W(Dmi4`0c.V@2`p*;W0%aCSfe_EedZ&18Z%;du0aRjM%LOSuI8Zf8+HP:]$TO:?7cR-+gN*9ZfTP;4\VpDM:U`RX=iDMOrPo/jL/]bpYlB_chWLnZN12Vd]=A+Nf;O;/TuBUb>Y%4S+Fr%Y[qPIF?IfikOiZhD&l4[-)lh:h!p<+koUPKt>-s(QX.p,j"8O5%Lf$U>J%4Mn0MiTMB$\7+)eS8.EBL(,tG>RlRoKXu0!s%<eiiTgMtZ%638]MZVUL)4g$`lNuqtgYH]6Y>l9i9%@Pi[o7)9V?YE5#ni5P6XTILg`Mq<=JSV7^a:XO3H^b)4:9?`B)DDmReK^nD%-aTZaA2>V:b7kW%X)$!7,-5*@irqH6$C`VpbG:N.>PN06a88PKB+:BskrmsZke*ERWK\RG+NCcn.aEtl"U:lB8V<ZK\+*;8eW-VD%qPENfSXaZDXK!1<[\pJp?>e0`7V\t&E,`C74&"1s_E/rkNXa5"U;U?b,#t=1,'CPTK#r^X/RL4!!i\eqVo4V+oI*>dJjg3.]=L6p%Pd5m6#?ksF"iOlA38o/9Pk?eITK!,EU=A"1_L(QWl;,bGOeK1/;aloQgJ&dj2C2F![3&`qA^4'X>cLn.3#hG(;E6(%65*<#m&H2L%OG]\KQHDf`<5LM9G-0d]e\Kl;Yt<Odl,O;n5d^;mjR:o&ip$qWIHRD&7@@V!`ab!qY1Z7DLpp,Qa"]0?]]8c;i)==]&8M<"VpE8G%E'\b>XNB,4As9*T/#'a$?Jo+^gr]XFg>h<4O7*raNlgqJ$c#AK`+/<!=UcfmX;hJ*YZ_-s;DVF7guQ^:=mThnkW7_j8[HDsHt,ef%qS_M.Eq'l>"!]*g@X#hV-13Z'L`rZRLVt6pQ[<hfOa\^8[5Ihn)_tl?EOW-%].4,q33!-CI7]5#%p(A`cW\C+M=O/H,*iEFONh.T%bpsThG9u:9-57\ZkP?J6T)r^E)]0_C4:?Y`!Fs*L:KD4n"tHu.(eHT1DTR\l/Yge4^ZNAjSkM([+\97IH:^TS#)7pXpUfIHK:@4n%.$h'3,gk8^Q3Ts=BH]J4&7tJ=0kgKQaX."DE`'@V&&_^:(Lr>LN)8FQcD[\ZnCfCO?l@MMg-rpB,qT]?U2Y=PB2\ER_eIS7p0?iF%_VJ8Pns^O[?7L`H1XT@ODa8*jVkg;-6'I*KXrk[_B&AsY^Co`mm)M%>?uuEmT->o9F=Z\G*u*bbmkSI%,r6%"]InPc1cRD.H;61"%JX]&Ua3q;/`Vn>/+eDE:C2j#,@p\FIn./2DJG75*f1<T0]E3F%W#KPMA5BpV%E=@'&O#ri\kid@J[<6n>neV1GsHr!G`k\3>At99%XJ)1qi'[QL;2;);1!jQDgE]gj01e2';)Tk8bTI_BS0cL\E3G)O]G=L'@ONIL"(`J&b&FF!Hs\i_PF+\d6$Ban8c]24'c1<E#:fD%%?<qKF+%i]qknNpo:un^2qNY`TR\rA[L0<)Z!otRMcXAX]<_Cigkm)Ol>TU.#-[[VE0aA?>V=,C:fG*R9$%j]^qiiiFW23MIeSU(n%`'^s7plU.q[\Wl?RF3P6/[7`FBr=fO&bUuTjZ*VaXs[[g(=F+BHfpeWFUDZ\\>)$c_^U\=LCFfY'UIkrCH$!K%\3#FRB!7;VQ0FG%2aJ]:rnO=8[?+uH#e@Ij(d.Y/Bf`;%SZ7;0VI]#Yau;Rr[KB/k,\<*Nnqs`*mLa"nfkD**>1(uO74BtIcM4QY4TQlq1]7:llb$d_%=c_?g;fL>?g"]Fob78/225(EZ4Ob!7QeuLW6Y?br'L=LO6#_(G[?CJgYoH]7gj^ogHJD"@-reR[($6h=RZYa[[Nf&[!*:mZ8`?r,%DGo\!]:lC8a3.2ghFKll":fT!'or#o/H@\FrRJ*2BL8:;&h4e4<oqD#O_"iaZpf;:kan8>[O("PHeMi&:8ML0(1X=AD'tr!3`@RZ%Mim"4A$LX?/8,qWj/`Q.Rfh$JJr?Qqhm\4<(5fMpH;LgdABU>HP%2[O/:N=9hKF)XJl+Q>mAZO=.1@m[nn-'+l@p'Jf$2,+75R$#%ED>9COLGNC^2M'b7VY751:-5S!65#F[)khlBBg"AL2mS`L!!9DVj(pHM,,"E*'RrKSD[_g8NhT(GKu5;3:JCleoa4?:`XWa(92UD%d-j>T/QY`3[a;HfA!u'u7M@2"q.GMCF#m5g1t*Dl'l?X^,=<nrnO#[g8s544PfHMHR&Yn<Vj[HcJd,LN\=K@.4Yb4/#3Cc.XNb=(%1!9P.NF$uRZcbaunl4:DBH.Vd+4=9EWSFT3hB8Cu->b>T3H+r<`a<Y[+$]bm++O4KO8\Zgrq>M>rO3kup](1_5P7h75QC@/:*[*7%4g>aBN:9*bJ/%o1[9\G,,TqN@H;g#)?]aBB=GFYcG=QB"C>c7/Z66h>kYrP`IjF$n"Ds0Uc\Z@I)On\S';*?%"<Mmch"=>;M8nO:%jWdJ)LJ\pf5ha:%#f@kO+3:H%E+Bc0;]XOE`LX#^IJr4\"Z_'FGX*VGj9]aoB9&1(a6HZsUN2"o@2TVpWR9c$7THRp)FZM--@'@W%]!6_Ck7R%]dQ*Q.5l*$Wh;-5)GaX0n+<rGbZ$!0/Ui'C]G.a\bWtsUt4I0>3iLA+T?>>WdL[[b.<'WWr>"Yf=8`sLp'qYlj^Pb7#%<0IMoSSZ!N#<cL`@k&dMc;lLqC-HJ?-!?L-BQo>G0+]GG5D*ni6Hg$?OGkcb3c'[2N?(a'Pad.,&LY1W+ar&Y@TU.;fu=-3V)j+<%6k'f,!Af?&Bb;bt]oY)O4?3EL%olC^:7'Bo4e\X73>EskZZ"2,#o>&Gq!KTa<$oF]Z0Z9?j0CUf-[agGl]'DN-=U,f+'j!m\=`+)%io-?^q,k%:nG+$8\l(Ik']6W_nqU,Ycm<h/MpeF2a\QqTGm.O',dq"`(0[]Qr%g?/`/$<^m`<G+Wu$91!PHX=Ap,EY3NE>hs7q\9%([p`b.S<oTl7'j<*8US[R64Am0a(B>2Yt7;Z//&@9Q?;!KG^DS?^g\VpZ7kL!f9[Joo>6@<"af5]4E3J8<=)<_kXXsqPcso^U`M8%W3_[*o<a-oSmIt:R<:)+(*M`+%-]f:;"fT=Bo>Y-_XK*"Z`MC(h6+@SkiisMAeFT\AA=@M'<B.EP>D`Icg,4u@Q=OfDOK86\8@Vg%7sb`F1Vf)%RS:ZlQqWk(^cR-2'Ps=4+MO:n:%@[;<^=1;L#\]B?S3(tSs06PB[>i][MEmrEEHr_'gAJRA4eaP*K2^6h%n7+!94]k%@D$PR.fh+Eq:)nBRe_3-YGZ/^E68E8$aeaXRarHO8ctiChIZ"I'o`88V1k,R(C_4%FjCm?jI*;(b#_.q*=[tKB0f^*N1U3^H"rnN%g>Iak6/4J]BcYSlQ]T2D/jHZENL"m_:Ao`M!M0baT4'%=SLW.#Tg7Y3^LirpV.;Tm8Y>&`k%CIFEIq2GScB.a4Y#9(#"k6a4P8]#%\qec^6A*O(!Fk:WrC/s>hhWmFE@.[Igd8"nAa2EtPE`&kL)Sdr$6B?&eBi#=*ke@MSJflk=&Ihl)EQY44i9n_k8l96jE`%.V1Ki[%M7b)o-4QpYSCfN.%-;NU<FT15`]uF0jO3TED77B'_@IIDOLS`C%IG6jEToh]js!q0#Jr>Hfb<[9<85"1I^\a_0[GmeOm\U$(=Oh&%O\2^83%Ju.)PnZ*hZL$&CQFAJP*o$G)3Lds>R,mkkd2/^VS<3qY)?d<W4jhU[5i?.;T^-q9++73TWhQZ]U1,NF-"0b=5A7QhtH5Z%/c:]5CpktW*&1Y87p>f@h8)YsP;Vl(RiMj^+t,@u3AtED87+VT]5?eR<W@br;qH*QX=7@r_sqejcBDnA7>l%^>8MqtcY97faunhl%;cSbT\oKri<tN(fAq@V.6L7c:ieiTNBGePK0*tF=?C&aLPQp^K[),.CJ1A<tRgrQSZtQZQ1D(U<9Z?Xs0H)dm%75&!8QOVq5o?UA%Krs(10bqPV;Ha-A>2q,I&Y(9rq4t0\)7424n-U1,AJNm&PX;Q99DjKQ>]6D[b3uC-T@UZ"5!5hL]@[G[\6YaC8I)GC/POs+S>@I_%_k4oL0SNn]MnYC124H1gdNI"UKYLMY&'=13NCu9PiiPZX6#,]$TL&.YP2uFc^N@nfGX7EghI:rulI2QQq0;D@6"%8tK>/:m;L1k^%5c#fR2([ah&R#Y)NnJZ@9GArA+cJMrpDSenqHIae&gYEiXTMak7!k0>MC[.T=YDj^k&`]1^O4kS"79$]VG7;J5YHiR&2M8[2OW0a%GMm(foYbHsr[&G7Q@=$p\RU\eWc>_7IQ5ZNJ9j-d[s^;-afR['qF)rJ60(*EF_*Qu]4o3\h'*?GQ.3JNRuHeOXqAH'+M+RI^^ujW%-FX"J^o2#:j9\SWd\A"j_t)ca'HB5\m(;kiAuA3ATPdPdZe=s[9SC2!p>A>NLg(QJ`6T4)j,Wj2gF&,:;^W#qcGc[UI\.DPH"mGQ%A!B[GGl<Ab7s6tk-m8F#Z7DX![$c\ec06HdZG$b6'_;ug7;U]ig_`sKE*%#DH_gN,qf</o?>7sB]5XWcV<ktcqD\@t][RiYY]R43%b17IR?O7X4OGH5L&/[QtF'KC+E^B8=*JU_g(1=H_a%R*=i.U%VnDR+l'!iJ0UeV%@naS@.;kfuF(7lSa6KfU/_&a&>_m5*QJY&p\%je`d6:k7PC!Rdo5n.RdZ=le]HIHXJIF!CIKRUt$p*cXO2#S]qcieV*J\pJL4,=RZaUNMLa/5<V7ROpF]TW5Gg5H[^k;)2el.R4lW%V--AL*P-VciNK&r3$h+b,.`1f?/44V$+!I&JQb&rHP1XOoN$+95jS)fW>aA-l%_TF-)RZJe"'<n2aaOQlN]tXjq;)jY0PWUdK.hl%VA'1(U0gX@KH`4nA]FkRdpgp_G>752\<MS'_OPGY1ZnXl+9Z\cHBDjlGf"fo9d@`t&Fb#4SA?(%LCYj,(I;U4G)peJJYau8f&Eu>%*HXG39<.htEM8<6!`rWt@=D42e\1.)#@c5\5:;S.NAP2`Tk_2/`%8071cKI8YoP@V0K1_AkM%=hDkpt[kc*2CECTMsUnnLg?B3-6%(i_@.6IQ8MR6^&K/'.R=BehPkUPSGj[D&IaF\8fZYiXE2c\[WO&fG"I,a'.]H>)\D5'I@1qSGoQ<m#_^$Y$r>AS@$9ob$S@H.pP5%p3"A$Q-:5UUY-"k9$jjfee/Q4IA$@VE<7l(7YdVbi8h'M_5[BuK(K[fknjKhJ%josf\OM-V'50?nSs]n*dk"M$E6M5_H]Y,Z,EmJ%0jsjI&]"2&R:MP-\0TH-ro5%nL&dBP?8)YsCuBM2'uaR6=i7/;1@QLCOqu@,'W<QBDok,\$mUp;!Fj\pp/4Qo9Zf/N1E)E>_GrTJ%,W(;V][,paL)]Kn/*c/kqAPq+8q3^m)7LM7)#\[jOpp\tS&Hl.eu#:]G^(0RJe`aG8YZ!Ue,M:q\bV8aA"RoONsL=oBZG,a0H8(p%C)9B0<pORF1+fc0CbVEWp;:V,fu!PFQ]+hM>\?"A>3]NkYZ'_LC@E`k>]Ff8jKOgtP@oA_&eXU5M=dHT_[J07VGiThj=@JPCL&-m%h/+Oq)T'6*\3*3o_$9GK%UF"K+%h`N>K7$e.L*ATWrQ,(3XXm1"!+p)(qp#u4"^Yq$,W4F()I&L0H%:F:3oQb0F8iO-&'@)Cq<1J%Z>JG3%o2Bk[GR]1Ck7[j@OK/8cuP9_Rbgu71Z0E]":F^`OZ,ZS7t!>XhM&gcMreYr`oa74!$RWGBuXK-ETYWXk8J09_>Hd..&g-D%H,ugipH-2O-!('i@Wa[^<;=\^Y\V-3j5\Yo?*Ar(Eb*rf#3TZ6*!k`.W"kB_,X53jFPNB?^sjIi!S-6833?d760U7&Ps2#XUmOuX%=e,[H<;E:VC_H72`6HaJ/`.26^0NKDL7V''#of*]U5^nkl&1nN3<n8^'2=`54Z=[fmS9K&'7PJ/%9XB/jHS?V,]pTPBQY%K%_bD(%Y(D1hg(%/<1EL^rm#0<P=-TOA6MddIruaBAM7QN>ll92%:VB$A8<\<RU9d[+o2*8f0!/iCV+GQA#<>8]PO8,]_aOiOa'h!954j&C%mWj6k$Z6pgCuH8/L7pZ&'@"qe_!Ij6@WIM!a'b[d;HCYEplI">Zk-hMH,KD9h<J:XVq,lG_Bo)-O-b`L]og`cC+&rGigfe.<2DW(%,,r*=Q72U,+tgDP0S[6HEtp^,A-0H=UF(s";g@c>NBH-jeY5DR%gkD4Bh9Z%eMP]gSb%ALA8lX/'VY9j/"CI5-cE-O%i)j_&o`N3%TZn!L=D$cm0f/;Kj/38GSk-%l`"/,gB);%ARW;Vqep=:ieM':g/J<=beX6\5ge5#mi2hi=f,OFk3D>B??SD-9H6Y9d'2*,jg-49l%<&C90.2B?aSA;WC%$UbTNg,[&/]4RkiMC?Pd1(#O.0<iOY5,*W76AI+E;l9Q[L]FpjeQWSG7?TDCk'nN!gnT%hLB^N0`!BhjGmtZ%ARJB4-L7Xe?!@hF=J#.nT)"KH;IS9YQHr@h&hF(YSY6NLoX8<1G4:3Ki'=US5ggD74-VKqL=V&6A<]Z_oIH>N!=[jh[hu:nJco5P%qOGc_%bmNun6`&B75q@iW;<@02TNn8>Vq5^*CYDU^?9tqa5`H)SBdmK^T(C$h0ILj=A">*N64m'B-mo&BLqkjArK)cn31KD@`VJm%1>_CS`fr`(aui3$60.5K6uJAcFGrs%#@Ii+,]4ddij/u/<T,^2f:R@9fa"RSLS>=WDOMQ#caoC&,Qh2tUf&;0>X<He&k'<cKBtkg%0TH%b1K[A/1HWl&P4;gM&d+=7RHf=\,%"q/j/a8h`QJ&`^a9,`W$Q_]k*nSYl$=R#]44fs+g7d(!c,d_oaCWuBfJtm[m?GnLE(9Y%nR<>E[CY0Jo;uF^di'I6=h8ePO9XZSb]TdE\b-Dh&sS'6QA?Uao:+Q%WR&S;G=][]#AHk.cDSdQ$CErEbC.?o1&%57l3=QYSq>ia%)4Q=09Ti9u3$'+A<d^l,M3hkN#l)'8ksDrBU6LJ(0\=a8EA9Z]ATiT,m.).G&VS*!4h5J"BUVO%h2b<M9$+I3VmJ=2Q?Q;!75>>H%/J:P^_j30f#d0/(eC9G_L%:pRBkASlB8n1UhKi"A''er6$Zo64(\<]-jZLnn.,LWN:!JKKk,2W?8YF+aeJt1$#,qf]j=_Mp,m&(4%I?VThj[=`Gibaf@-Y?2G8,IHpY1LN$=6.:uK\C"f0Q0Rq]uq8FKL."95?%nDkZAVjPQ4#I@s);!_PDX,N<rma[)VUs][_*HWJNE%%@^BN6`9aWF,r5WK]:PlVlV02(g[gc3i<0^`Z%"2Le02S9=r9ZeS9V+_*UK:]m%Q%5BlOM([$Q&+#.X)b"n9NWjLF5uo8pk])"#MH%l_'9rb#$[r4?uUaTrKInB6HbWSIG.K4hBK@fuF>lV.'6hjK\UWQC%q<<7`DI-rPpG$[q+0d!*u@?je:nOEHCQ8+0VU^lQ^J*(%.>%F1W2r"(-f"4bc#_j23XU5e?![WS8/pG\>`CE]'5>dBeVtXleE?(gb(SN9"+c_[32_F6#KU1MaQH7O9,&`X6o,0hq_<^bSD20Sa:Z%j0G:>o(@*gTL(1#JuXB@U);O^ZuF:6A,UG^UA<KcW[<61-V`9'I2CpFlF'^uL"?FL5jpl?cODR[h9s4%bS1?/1+Fm8Z>2TMB_'S[%HV!a6$nJ'fn!e3"Dkt>"QH4Xj_[p*5jTGeu;OLf-lG\u&6n):3?0r2[d+.;>A#pI$LZJ4O]m,tn^r_N&8jbP0DIb^L2;/=%"l!Sn%VG\Nod\tNGjI%2<CXt4FEq^1Kj/t[C[rdijosT!L8hC:0K:*W5)cWU1#XdpP2WBtU0$k>MSubO[2#uk^T`c"M'cs!fHluc/(eY@O%lrK,drH5-lQ?G`NPR&c0<[m8&Ec\BB;DVbud2E^Zm-;EC/aqWsQPSLcGQQm(.)WrNE:8'##KdOHq9#b&RYfO;>%]P!=nc&A$eG_-%jipfGZ^^E/mt4WDg1tZ<\`N$pJfg^J5k@E]5=?sj%)pi_cUaI<H[BjfjqSU>9Sb4]<e=lr5;%]*7DE>=Ju/%Eo_X#U\q1&HZ06b(%@[)8C?$"XU*E:-Q,htP[SKgM4R*<FZU^*k'4&gF`7cLF\],XR/[@fr;*lm:D=UbVMH?sld,-p@672\"AD+CRV5"p#L53nB(jGVp'%j*DsK:q!.MaBZ"I1e:Sg[dY\*MC[NM4S7Vq-j1J9*Q^q(Bul+/5cR,gXu+s8ZqD;S.i^$5oR\d,7%SZI;)Gii<&Lh^A`qoSNXHU6%Rk:arZo25ZJCm8S$HjSREdZFI_AMrCjP)s@7"pSCGd0RZDbAcB*/oYedj6^ASDW3ToR'=>2,RN,!XVNh0U3r+P#=mrRjhWO]5g]]%7Z05f*\[9OH6_OuR;)/'VS5fdK_G<a8oq5)j6i%>>\95?nFrA0;&h8ees/oOe[m=MPdZBSK>e!l:#;u5'U(7*dGt%;F"7IW(j74F%.L?B!&ZIO"=rWYknsOH:md4kK!B6O^h<YECgAU1m3N+03Ng4/'YV#"H?i&e6+0HfP0E,[J=O\Ha`Y37;Cr/>e"i_XnXU3R+(NL6f%``^E(C-2oN7s*#r\uW7&gt/9O4+^9kqA%1t#Jh7G0UX-o,2`/K/Yd`l#c&j^3_tUtm6R'3qhefj^U,lA_-,q5PULHcMrL`Q)YA9R%=,,j;`EohM=e)+G-@>@[3Tq!;Y-Z\-V/$$%a?4eI)D[A9REEoee[pIa#'M-f2'P;26n[<'*(+@YmH\t9NhOkGOgi/>a39s(l+:$<%=4(^,jPsFLWi`e;_>DKLl0e3Z.>(N$]k]AK4WiT(1kiF)\6Y8<g6"SR!he+R3UpBd(tKW>Ti:aEI;?@WrBPmbM&m[d;r,#>LF*ab%iNn'n1G:)04=XRgg2laBL--qagWWlO8a9a-QkgC,`r(6ZSkis7a)aF'aE&YS%?ae/pp?+Y>rf&H;U<IV?"_'r.*p"91ZOUT"%m8h%YQ[+D)dl+U9'J?>Dk*DO'Et,PdOMZ*lHuh8?$T7$@LCW\YI#5]l*ZmS^luak5%$sf%-TV'l=Y'Ff_+2m\@>tMbq)bWVB5\142mQ/%*%"#>`u!D^JRm$^qtq`95td5Ff<f#(EAUcQ.5HAiEi2/5d_h7S<!$PK%N7/Y/BT>%e;)ClYmG)&[RsuN933cYZogXOCUdF([%&]@%'ST_5Oo!*]CBSuP3b%0gmiu%dht:panT_#j:)C)^`RZMd`2BENDEo+]kCMc]_aC$[+^>Q`UJo:Hi*W.FZF,;[/NK7R9'a2bnq\`?%h+a?"f(/1<1/7Q2'9G/A^Z;Zk\>A<@TsZ;lBU!-bkW'rMX>%(c"M?O2Tdbhab]X1kAeBV#/#q:e4lC^h]#];S4tL'O.Cke:dd@MS%q8o_^6)/iH=/dEu7E'Z\qs3s3$#YN1bX+t>5^_Ibl](O("l67oo!itWB<[Zc#H6!%a."XP/,"1B/_oWe8iD[&-H.+>QfBJSdgBND%UJ(m&hiiCo%QH/&*\<'sD`E"2>g1r!8t?:H'Nc=Z22R?]<HL-3E+j/hZ63FPBT,h;o@0-:Ws.o7/^H[,c]eo&o,G(FXit"B/2t9V%UR3TDCYfddTD0u+)s:jkmf@sHq5kLjiZMlJ/39-2(A]%Ogm*qe4*8/u3alaYK,bat-S01#c&qc,Y*Z-#*;;7f<2W3tqcsNn"^SW7%MqoqWY)sUJK5R-@%lLk2iO_UD3YuFh2B3]sbiF081u^L;YlsJC&^#d`QbuCois@tC4tPP`dj<DZe:N<m`3]`/o:@"Rk4t$N@d;Ep%dVdf;I$EEj9W@0d_[9He:X3$Ff(mCr&PSFZ:a))0#p>"\Mc>XI(m\NuM6S)Sb!.fJH6["bJ\Io<e,YDIT9;CU_4UtZT_;jhI<<$S%#iiFhFPbYI_CBo;6cM!/31pniK5TC(;:\Wc@E!UAI]7q[Sjf6d(bMAT`&Vk&[6grM?qu8>K62cg`[E'B'\KV7=jT#mbSb:BHV?OK%T'blD)``$0s/2lQD&mKu8ZAAEeeee+h/c8hiDGQ'6u!-ggQR8?+]_8h-U[#S:YB7U'sPgKHZZr`&so-'Uii%Xq>BcZ^'V`nag,p]%>h0Q:'0s(3Luk*2Q3qHP%V6u!*46HHXD(m0m;08L&X^eGFBc*#@d6n0WAWW<GU6mm@f.t0F;t\1>p>Hg#sD'Kifp!4_]>1cLrmL[%)CA*f#;G@i7`2$7&G?$h(r&p_ehCR'mq$*=Ztq[.$Tjj,&P[)IK,mZ!5oYLAajV/:B--H+ikfT`][n>JRSIC2O4O6C6e<:ALFO59%1pU"jT+[%C)IZOsVoW>W02ANad1Sqm=.V(AJS8%">CYA]d`&FaC#FF7=d<KCO2aI(]rj.H>ohsIaBdd0'^[DkDL-X`^)(9pOM]Mg%6]rr&YW)m6,X0t_dn6Q;B(%)b2[T<Qn>QmfT>!,jm@&2*C>K34>a<'=Sdoi?n7S6(p6/QD;IQl:ajL5<?<0A=\=n>[-r6fjNW@Xj%o=$<_?4/u^MtI(J7f9J-"Agr,gI'[=+^.SDb_.H-q]X,Q+'+KfE1m-7gW4pCTg.s&c]CW`]7sAeWONT@OKB)e&60g6kN$q]UX!)_%[fiD2B9\CRclc27P4*im9aj:g>kWBe'edMYk`dYb=X_Ma8:fiPE-@#t[pRX6H7a8>'QH`A[ZlZ&c:iF_ABqF8+^OW'T$IcfB7g%1%>:X4keZ+dXr^u=J/N&nQ]15UCBVgoY[jsi,k'@C-mTk(T5@m\K:[:R,mD,?&lq+2*!N7.lfRe#\?YHd!"0CVuTJ"/>b'R&irZ4=u%OeN?'qBZU1-o(EW#8%cLBbq;M7?,)/0f8SO?P(#1l@Qk-";)P[G[e"52CU&)%Vo0"c3W$L8>otBJtW1m&P8@"\af89ih<CBIs=d1%at;hc0EiAYfNa+'S%#*8b_S8'LkOGSa@fcd9](p&j5hFK4C1cT,?G/p#,0dWh7St-L!5I^`LJ8aX2X+Q1juYe2t6tV(8fD<&YdQ/%H.j+</Z+1mRH"9i)#]9'd/AIJ04H'H*)P!i;]!"O9_$e!XWbkt"@a.bM!@5.]LWu@Fl:#K"BPp3o0Ll5%7IW:.:[)3JuaC?e%gMR%[->GDBbIX[J2!sa`NR/`HDh[S(b4JN$8ed0&QfUO0aVDH:@\lI#eBYJk;XoFR\5gV,Ca.b)+Wqt"pmctYkk,MCks=&ATt$pq.f7/%S>6g,]2^'"G5ml<C`b;fjE`$sG^RKJdL@qD%fSgTTFpe$Ah"Hl@gm-i0tnI+\!(B>[(8fsd4u[uA<8_7h=s<2_N@_Y9r!N@bJ,;\%c90BW+'/10X\1C53i>+\4t3jOg,DK69quPX$+kd?&4=GgYQj5r\qSK9)(1(Q8h;B!3h3Ah#T94C1S5,P$HLf->bC\<JVg&ZY+cME%TE2]IQtZJ=Y_BOh:%BLu,^d6B90\2MRI?Ve]odaL[_-WkL,bFf;c4usER22ZcTuu3hgtcG&mN1bkpg9S2c8:5e9S-9mHh4p7@Bp.%<6T4fqj&XiG!?]>_NYS_!>^l=)ZIE,+A]sBAOj+WViKtLNmkGl^0OE27l+Q^1uujtgBfEpl>?gbJ[A6J?L=fa'i"4oE+ip43QG)s%h+m(I9bD\ljL&foZG`jJF9!9)KFNBX\&eE0@J')1S$"\J3dj(\r-OWsngUP?Pp%G;_c:[LZVk),RN!F!"ZP4sY4%U7#*7InT.6[Z%dDcsDod-Tr=-1"WHTl(7bS'XNMVq0lK4pV]&7n:l#iKR(,m,M=*9*Jt'>Gfp4['h_O6GIt"9iQmdKO#p1u&BQ?MolZ8ki[t$!b[T%KN)nGlD+;N_GmfuHH#M,<k2c$i>lV,G)8o[D<,lBL6[)'/f$YH0)E:Rf,L[s+%ntf0^<B?W-^oi84&<R:l2*F",f0ooYl);F6bfU%U;dF*9.=//U+kMg?_F?6,W.eXVX!1Yia2OD9k.ciBLUH=h;$I>ZM5_P>A,3=*/da@4gU^W?i$>Gc?pbn61]S:^U+ns:&=G&&JZho%G4)5<F,G<jWYV4I]'l*9*_]lR!seDmHY%EHLlP/Dbi3VDikM?G9NEQn-<B:k=J^'K,i9D.SE+[bHKAqd]1TA#'P<=\7d;cb;r7+1%FlW!a@B;uP7#LVb6/CTf%d?q=><4UJ9ooL:?P=7t'-rg2!g10q^hPi/?s@WqL%H-2%`/KiI+RRMJ.E4Oa$>/0_dY5QO/#EK#j9$d%,Xhk<KC3C"/=Isu'`*ZmLq_22?e).XOHbALN)80E[XiM9ZA*g@Dt2')%"1\QKuoMBiTMfWA=Qer=qh=/\"Bb-S?WGqJl>+VTYg4/%1GTODJ8me1V\1K=o';3>]&#tBPjM+*a%#$<I0p8<YoeB7+99jKnmOdB-Su(@*Qa18-BZlD^B/*pMCBR31.\Y!TIY!\07>?<(1.*=%;K\D*)R3/QQafHXclDES6]iT@/!;LPMUScs7\$!",LMaN1q)s#^[sK9/h.?\V+;#<]Y$'\#RNlqr$7#H7*9dDe.@hu^^VP#,?.OJ%=JW#5iK#Cj@s*_(\"BO9i[hNU%X,Dj\=l8Dcmk??%\Z??0LCK?8.\Q\+^7ZbG1caAI7,(l30N-h@U%7Hoh@$@2pr5e?/)X^Zs')b%)OB99\EBS#9WidjcSk[S1-oET*boWI-77n)Rb>[4V1r:CCjRpUH86TIFf'PB>0K,3QU*Y@WoR0-L3kaDM'QJ0o`2LZD663d)5G1L%kY5*o".*9S1%^91iARccC2OB]r5D81C-9X#FH^.pB\$XK)XZ[sI^nQ7D:hUV4`tQg5tojcns!fZ?qrT8//s>;NVGh)p;cl3Dknq#%#MC`;#t0H_)d6%)m@kaP55e(pl@j&\h,7)!enuZrFjuGOZL^HJn#:p+W64Ng.II5[#`+,NQ33ql%h\Dg/8NQGGIs_*(%JtVNdE4H%f!h]JiukIZ-G;m(1Ht,]&"J/,H1/tSS-j2:<^K(XZ-`I/S)"Z5IgNJO_tlZjZcgd]_kl/93/C&nC9;2ZU`oJ>G;qD.n&d(VTd"*R%rk:\M)sN.CK.bXaZ`eaKl7`h:_LYN4j>N/1,#"G/Q?-0C;"'TP`L)92`(Wn.afNfT*'UE3KsMe;=IKFS6(%C[&ge`N#r)YA9QdaC%1R0_?T52q[HY;nrU>'\5EsdUsSt>6-pCYXtf=oY:PSOOD>V94ab8Ej"j8iN.K&:LEX<6:pIWSZSMb]kX%$0emehrdH\oR$t#qYLa%fpb+U+j0f)b8n1N853GO"Ooqpf[RU90gNu4UB!pg)s1RaUPiWOBnJ!YO8%8M!TG]B:$#-)^_<_XCKJ7ZHdsBK8>Ed\Wa\#!MnJ8%%#CdFt1&a'D?\/jj%Nc)^co%sHORIto%BZF"97h#,N#GT(+/Wa(eP=I+%FiIoi(tl4$$VuU[%[Yi+bknXK>e//rhhf4,<24[;d2*8%aHa9_'oVk3Z^mO)#`nG$FM3g*i79ap/4K)hY*^+4C"2'<8t=-e3Q::Qlkc>(84j3$./e?@:5YaC;jhJK6/7dQ,;$EXfa0$(D>a#t%ND<!@ZD7bRei\RfVm>88_NFbL6_VFj;m1`Hn9rQ-9KK2=[jF!"3uJT7f\DC_Nho]&Qkqn=lc=,O23Q3hHuP-Z0rtPn21B6+@H.3e%YQpjc,%N7F'CE_sWQZq`VR%U2Bsp/m<Lgpo;j(V>?<.TL2)-2SPbEFX6g%?OT)V>7Fd"ToK4+r<TN<Q`mM*kle:+;e^8o<I7f)'H%&g);,g&G"H,J'J([q@P^-ddL('gQS#ajg.ZN-NaQie/Z$?XoZaRBSh^(iK!X4)(-3O(-ccFE?Y&VZgXLik`pBi6SBk,FsN3MK5Qi%WB^er?.>ugh4`>OGt]Sh)*-)1:N)gHOO(+oTMqI9[PM0aB.qj^1KZ2iZbAdq)%(F1A9a`5WEe5#&R[-Id7+DP`OT4uT<-pggN1%D%IOLEI*rBAWr3S:<k7:*WbnP#TELb6GYRrPg,mD+&VlS.YQ,?(KIZor#8WjqK7=;bSn0K9"bgM:a*,DY@i[Vd6#/jL'.PFSN+OJde%TO=('d8SUQPESn6&4/VGkV'iY/PY41]6AKM#uA^mWQk(JGl4gMLZu$WMCPHdH*@U>U@W=hjb`kmZNcr&J)4hWn0N,PWA-uVBpor]%-u`)]I'28n4*8/uHLUH(\.5\1C2PQ1dF4G8Dju_!@i(XG@No:an:=KLVBI6r^_-o`:A(I258kSf%I&Ep5e9]#[$u=WogFqhge4[,%(M%F1J>m[pBs<sl(TJj]I[P7P@h]p&;iK%e[Y%'P[XHn0GI:A2ib%lQf`]02#X,5k[th13=^C[(2'[Eo;S\?$Q_L>Ml0r8h_@,a.%_U>k^QF%c"k*cgY/\^]"og\eOg6jHhHrfFP'h%m-<a8T09@`lt11&A<NMK.O;Wml)V*mAk=ANn/]Bn`:dIJ,\QQ8(,Q-pNm:(5]M%2JY>/7')Et!2.7`)I#(n.29*+HI/Sml!-P9T<T2F6f?;4jPdo#\<piR=tpcS0\&g0!8Msc2tZ\),2_qbV;i@T+DEN+.-ZL'mDbDB%+M6\\/GDt\VRsJ`(hW;D@>nE^YoUD9^MhNm7d@_.+Xl5):saWOO]?:nZu\7%NbW\pV(dFeU+jGH(Qk:*YSo8%$Z]tq1/Z\>#_dfr%H=b:`,!\&b\>uVV_S7-=V2)bNdNsPr90WlD_k7rsj9k$'q5lXqVNb4p9#mob%,$SN\ff1<k,4XW/RqI>=[-I.(]<ns)8R!f->DSP%7kfm[a'^trcap9NEYg#uBieN'5s[e7j6e?g`UGC9BNS4*h=6pWbr&q0^,]4V,.pB[dE56#j0Ch>J5QJkZ,$*;$lQj[*mT'Uq\_r%%n*9IgWC2NE1TSqdbrJ;K^NCsc)Ds=C"321>&"f<Q;ti0Seqc<e53qdGZV1(\j;fm<at`lgTd26h;tnbfMreZ`A?H;+`L7OS2S<V4%<iN&i1p35Y=#h5Wr1/g7[4*^)K]2H#/\3o7'?jY"`Z0X^i%5r?e^$MUU%8VjkDE-JH,iE!l-b0H]1+]SA>B)siIX]tXB22-k[?cM%"-8e<FM3g*Gflh$\@rMuH:jkK-pu.k#e/@/krs2g/X2(1NZuI@96Cd>YJ@c=SoF9XeV#D&p))?#Q/T1OfZr=,d22;BS$%<ar*^oR%GQu:Woh.lV,fhj'Tr(dbpD`K<jD1]EYZML3?Rf+/+$Lc7rQ$Bh#"126Ae/`<.#iu8'fiTu(IWd]Q'.CiC2o*:mPTCN,SBN/-em*=%>pCh51I=DAPOAK[_BVD1g+QIh>a%XUQa`m)`pFe9pL9U60/qdI)Q,FrEC<mG1SlH\253;:?jbcnT#2nC!h3q6;10_m#n5\S,=cd/%UVjKY*nUp9Pu@_JXu-h&:4WI)lk[JZYV.[ECR-eH+srl0rIkQOBbZZ)gTJP8BWpf.m/XtCQ=f-F$J*>oV8gkS?g3@iM]=I#W%MGM%]WqC")V[ZZ6RFoZ0amPC(#>N56MCS09Q_bX\5C/almDQ'^.Hoql%bBO[[p(;nE=:6_tJk6DI9Xnb@iM<L&LS?CTml-<C5CLWn8mB%a:4O4NAgu90]oElIuk@5h=i&DL3JBlK]'eZJ\$*s+V-HbAUV0INXh`3klc=CC(T$#YS^fU'`fL1_H(,N_0X+lP_aOFY&VsU#3cPl%ZeP8ZB:2XSVJb-@5ung!#L7@W)#<E2,]sMZ?LGf*7S3sHN^bPSE$2@\PZ6-,YY.5"9$M<qoF-L'CH0qaB4[a3^YWD=qD(Bq^Vp!P%AVh&"lZ&\ceu.i:+W`/fYn[]>&<Re:)499pb*^'cdGXcs,]Y$<qNLVJ3)c!Vnlhb*Y_R.W#Y9Rr$W8]HXejKUWDiG2lpYOcPQB-3%/W7C3cNX.894*"1=i\q_N'))Rg'%H$Z?sAL[.rI*l$;.GfRYcr'Z=`9^$f0Q]ob(F;T6d3Vdl.KUrH@P)Q;a(9'k&l=1ct97(aY#%_E9p*FOV$?.o_D;c5tqe!_btmT0,H/N<q$onS*5?`-io_@s_nTJb&kZ@5F9;5+^Hnm2d<Y"$(jadPFs,%Gk5cU&b!V;["TK]\Rtb%Vq%sYkJJQ7!Gl<4keT<;WW:X>1T2#,HQTmP_bY!t?n?'<1<o9D4tGgsnMOGC\q_;![R<5ama:\sqVcIR&DCf]`ARH?WOp,0JLj;W%`T/_?@L/><l`(jg%%0QnFh9dJm!8I)PQHqc7*2EPq8u'WJh5Go8%^qjMp6IfqXj@N)qMttS\@=V!/_]K.Q6\A_Xa46EXS:TELm?A%$^k(.*(s2@?=)73W2LUsT<RX`S;L5OR4!ee2Ss*2bH3+1dmm[Biaq+TUS>Rc^]G'p.&4)ZBK$tcGNX8srJ:BhNq\2]rfhNGHWs^-%n$Es8NA#VTh/"mE;AFHViShhNh,tG-O\ud[Pcn99+SW0rK?hC,M=J[h1@5j&HDGUm_+@rtQ%%(:7@`=(Mog5[]_sQN.oI:a)=QYX%527@.Udg[k)+!K!WeNq3a-S2iQO*\8?qiN&P_s8oX2oRW_?7h@1QDr](@6>;p5bb-*8^UK**TnD,[0Iea&jr2dDsF)]&#tBCkn0t%M>[dR5JG\[kq3*K"^kjJ6)n$+=MJsq%4^f6!bh"SgflV[;/d3"%FS*L_+elB$@UY/\K]hlhTh@<(rMY^LT0`t;a"Z-<QNH;4?kg>%r!:1UnZhCj/erJ5Hjj#nh-51>+#R+;dQ6R-cl7rM>o:H:G89>?$T4fCh`Dj]>]U6]&?+jBm=%,t?Mb5+X/TcI&J5Z$6&q(T>7iu<%1fN.jU'hDQKAnE?gYQ8?Kce=`Cb<54ofas%iH1qQ">:/XTkB&cAm"6;A0V=Ed,Yl5"85fKnqe:uJHXIN\M0<Bg!0B;+X$QeK01uZ%K?nY/6Jo*%[Mhp;n/fX"8R`N?kT"U#7Q.2j(*=!;VIubGr"(.3!AA&_dt?QGb4-`78n*F4o[R3$D=\DCo+%$5K]-(sVh,eCiJT45%h:UL-'N<d"`ijjKT'MC._o5a&?i`\LCsAjc[l0JldYAWqRpD&q+H:ub@Csc+Ru(6;hSKKVW921Y[_Kc3K[U]#,X.ZF"A)_]`&DH4%"`tD%fO.R#652+0RTQFImpI-t;KQRhRZ)n/KL9k"PJegdZ7<jBe`2L_J?1aR@2ThdWKa"=Rk#mioiWZ6):n&=ZBu6<&kR"o^msuC%rS1nG%YPlrJFTl&\mp&Wco'S699p@d$=^^\qGSiT^XIZc@MR0=P1ADp7:,,.;REWK%%V]sGApc)O_8I6;9I/g&T@;dW>jG.W@MHG%h5>E\.q47%!KYc($a68WUGaWQ@Tc,;(k(S`PAjhGhM(<_rKn<Q'q];nNe+8Fcl;=qP,5)cJPp$3YaiN`9,Lf&a)NjlRZiZ]<4T&Z%#t>EO(IL*:]%G\TYns81H.Gt@@j!IW2aKlGgb6O%k%KX,]!"JX")JAuH`1#gq3[bl:,GMJ>nAuVKul!>":m\e0&ArbB:lqF<iVJY%F@^!o1F8481Hn;L^m'/hffG*3Gh-,_O\l6ho0%A`1f?i[!*6EELAG1AXuFdi+(g&,Yp0Mj4sb=nk&-ojjc(qqiJG*KKaA9s#)Ki+%#Hp%p,q(P3m%Z?8kXpAI"N:.Y0Q7)7oKQ=JABM:Higc_C+]t`YP7gl;/tf*Q%R<S,j9-nNe1N$h2)Z9!)?E-]7S&uBAsO[\leE,u%13k3@W=Yggq[-60oEj!!dAc!8*@Sbj3i$&cEdfHa9CMU^lBQ<M$I1uqVcVl=9tK1P:!+P1c9T$@K9STSHUO#Y)k#GPM<fa6#7/P@%;5BX>?327g8(Xp[mgQWXG'gaG]:S#WphNN;?h,LKl+pTXPoue'X[W<3m&AH:lMRLKC^]*Nl]Q?1oVU>onb7D**hb5oX1)'@3*8fT%!O*qV1T'WY:S*>PM9&UmY/L7Y92^od8Eq)*5e1Xn.\qa`#Ru-f]FWgm2&ZS\13rlApKbAe83_R5l(O[:XjKSs.Lhk+U([UGWKSFT%,LtaTM+J:[18uIL%%oA;;k6S/g``Nr8^AXm(W<R\g#s"Fl5nJ.6rr+j>(q3\GG2i&F0jT`(B#`5<=J4C&^GiTTiWQ5?&4T)[1Vj,%=FPW1&+Ee9;ensj`_r,Kl,dgRTX6b&$n7U5+AFScK6-h![=84#Y1Ab=Vd;1,;d-g8VY?;qH&l%=FM/H=."eobk_=^upC86a\#`t"%?'&uUHY;[B0lQ:r'[*.ocme\eL(:hYD%?Y3qP>1FZGM]dj\%Cc0p7AHcb9bkNhR-+,'.i5rgM<SMO2&&n5jaC;.r0WWE^T7!C>Sn%cruGe-CH]dSdP^$2VJUXfb.9e6UW[*6$>=amZe:U`0/nZ_l,,3`#-40M@T1eb&15Kn$%q>^G?2ra$Z"na\TjKajPl+@q]$$iK'"d%TseJ7ZOk@lY=4WebC\GQP)a[\BqN6Ja4k[Ub)H8Zn6p%tnbfNlO-c;DoLq*jo,H%0r[DRH>#4cn3s@FS3]90jJ5g17lRZ'V%;"DX%Mhm9Jh73=Y#=U<m)(c-8-$C.LF6s@'!>74d3Y0j;ds6h5#?,IO>q=7d(&(e)KQo,GRNmDjWohZ,%M#n3_J)sPdL'f9TPASW,)gNc%N/+r.PUoZ(Kh@``+^&H89>XRO0A[R@;MR+<H5;QLi/_Yr$$<R8i=Lp&8e3H8*nQuL)>NFL23cH]$V85kA]]"^P.;(2(SbF&@[;tp%?nN?`KT+!0OnVu9h&38d*3tq*N+7_RNJa40jb&or6aNpSdLYG?iI<<OK>K]'Tb\s.UDCdb+SXHMhToP\1/]f.]_tB5mu35FcV3Q]%oV?U%E",6#^gk(OO_TtgM%QYMBaQH#PFnX&()FX"q$I6q$L1_a&&K#hCsrQ=CpS35Gks9aT?;6VI9#08_gt,F(c/fa4US)OL1BYK%JDTOOHZ*`/$)P'eY?8A0(RRe](>c&6ZQ/!F&Hi,/O&oP-]b]%t"T=W;]UE+S4YBh1S.B@POr(eo$322()hBdU&1Q\.]V*3j5,,D3%/%q4dYa2]Bc_C6D)9W@4i8Bp*rCi)5'li*9U0p[u>QrpqOKhRSpgI>Yjs%*e[%.-(N^1+Gm],b4p`V!/l)\X^>LDC"->-?&`mgl%%4$o2.n9V>2k[a2hj2-tf1DqqY95-omc_;e<dZWOYbMK@C6P+jib:U<^83c/8%^mGocgWg3L)cQVYo(c:BiD_@Z*L61+BuZW;I.Yg%)#mKUa/p`('"S*ig0^Z$Ugu@ro.mN6UbfqqMD\,9)sPGP)f9V9oV&"`p3<,2](h$fo4tC\s3F<Bp+tINDi2TghRu(U:755^124Af%k:67i1`\e^]q1J.INj]SXJ,&j_,PIG,>d\tMaQ4Le9rhUo3-S"NU+"!r'=n;s#`U"T9cbf>gbXmL0#7Qd_Uh"!6[2V.N@\GftGAl%MsQdOgZpet#H_b.;[d.<A>SP;UbcZK^e5e420ofP&RNYgULD3(PDkVZ&!e;#*4*^4qaT/\DFgh+?:1aGTTkmt&Q0e`-1+JWLT<s,%pA"nRSs"inTRC<\S!Rhi,P5J@5M$ZD'e3ABeg38U%cHH+B/3Y'gArpgbE>au/\YfjAQ4OgO1>6SOLVX)U@X==q.&Tk2q!a/J+o!g%rpe&.q)<g#o:Q#OY]a</&`ho_U4)t*Y5'NZ^'ZT6R#Tmcp1Q.qka,K>2=6P)_aH2npmoJ(/D#CInK7c0+8S5%?iTj">lXB0s2VnS%a8`+<r\+<3s8CQ!UZBI4](o.5s2dLoot@O/*3oBjda&Efp"t8s%6s`2r9_hrhgYKYJ,W5ns6p!R^]*Q&s7NSqoABQ/huEGsrs[:>%rSQ3krkj6aq4E0%Zi>E&pAb'd2h1i<3W8RJl21MWgRnMdrOMrXej.GpT\p*o&`m-NV](YaSf1LkR$e%u?$^L"=fOet?=&(P@S(;8%:duVA.(-Q1^F3*U3$Z0X,QcHs;m*.clL2_#!'b="^A~>%AI9_PrivateDataEnd